Search.setIndex({"docnames": ["_autosummary/reV", "_autosummary/reV.SAM", "_autosummary/reV.SAM.SAM", "_autosummary/reV.SAM.SAM.RevPySam", "_autosummary/reV.SAM.SAM.Sam", "_autosummary/reV.SAM.SAM.SamResourceRetriever", "_autosummary/reV.SAM.defaults", "_autosummary/reV.SAM.defaults.AbstractDefaultFromConfigFile", "_autosummary/reV.SAM.defaults.DefaultGeothermal", "_autosummary/reV.SAM.defaults.DefaultLCOE", "_autosummary/reV.SAM.defaults.DefaultLinearFresnelDsgIph", "_autosummary/reV.SAM.defaults.DefaultMhkWave", "_autosummary/reV.SAM.defaults.DefaultPvSamv1", "_autosummary/reV.SAM.defaults.DefaultPvWattsv5", "_autosummary/reV.SAM.defaults.DefaultPvWattsv8", "_autosummary/reV.SAM.defaults.DefaultSingleOwner", "_autosummary/reV.SAM.defaults.DefaultSwh", "_autosummary/reV.SAM.defaults.DefaultTcsMoltenSalt", "_autosummary/reV.SAM.defaults.DefaultTroughPhysicalProcessHeat", "_autosummary/reV.SAM.defaults.DefaultWindPower", "_autosummary/reV.SAM.econ", "_autosummary/reV.SAM.econ.Economic", "_autosummary/reV.SAM.econ.LCOE", "_autosummary/reV.SAM.econ.SingleOwner", "_autosummary/reV.SAM.generation", "_autosummary/reV.SAM.generation.AbstractSamGeneration", "_autosummary/reV.SAM.generation.AbstractSamGenerationFromWeatherFile", "_autosummary/reV.SAM.generation.AbstractSamPv", "_autosummary/reV.SAM.generation.AbstractSamSolar", "_autosummary/reV.SAM.generation.AbstractSamWind", "_autosummary/reV.SAM.generation.Geothermal", "_autosummary/reV.SAM.generation.LinearDirectSteam", "_autosummary/reV.SAM.generation.MhkWave", "_autosummary/reV.SAM.generation.PvSamv1", "_autosummary/reV.SAM.generation.PvWattsv5", "_autosummary/reV.SAM.generation.PvWattsv7", "_autosummary/reV.SAM.generation.PvWattsv8", "_autosummary/reV.SAM.generation.SolarWaterHeat", "_autosummary/reV.SAM.generation.TcsMoltenSalt", "_autosummary/reV.SAM.generation.TroughPhysicalHeat", "_autosummary/reV.SAM.generation.WindPower", "_autosummary/reV.SAM.generation.WindPowerPD", "_autosummary/reV.SAM.version_checker", "_autosummary/reV.SAM.version_checker.PySamVersionChecker", "_autosummary/reV.SAM.windbos", "_autosummary/reV.SAM.windbos.WindBos", "_autosummary/reV.bespoke", "_autosummary/reV.bespoke.bespoke", "_autosummary/reV.bespoke.bespoke.BespokeMultiPlantData", "_autosummary/reV.bespoke.bespoke.BespokeSinglePlant", "_autosummary/reV.bespoke.bespoke.BespokeSinglePlantData", "_autosummary/reV.bespoke.bespoke.BespokeWindPlants", "_autosummary/reV.bespoke.cli_bespoke", "_autosummary/reV.bespoke.gradient_free", "_autosummary/reV.bespoke.gradient_free.GeneticAlgorithm", "_autosummary/reV.bespoke.pack_turbs", "_autosummary/reV.bespoke.pack_turbs.PackTurbines", "_autosummary/reV.bespoke.pack_turbs.smallest_area_with_tiebreakers", "_autosummary/reV.bespoke.place_turbines", "_autosummary/reV.bespoke.place_turbines.PlaceTurbines", "_autosummary/reV.bespoke.place_turbines.none_until_optimized", "_autosummary/reV.bespoke.plotting_functions", "_autosummary/reV.bespoke.plotting_functions.get_xy", "_autosummary/reV.bespoke.plotting_functions.plot_poly", "_autosummary/reV.bespoke.plotting_functions.plot_turbines", "_autosummary/reV.bespoke.plotting_functions.plot_windrose", "_autosummary/reV.cli", "_autosummary/reV.config", "_autosummary/reV.config.base_analysis_config", "_autosummary/reV.config.base_analysis_config.AnalysisConfig", "_autosummary/reV.config.base_config", "_autosummary/reV.config.base_config.BaseConfig", "_autosummary/reV.config.cli_project_points", "_autosummary/reV.config.curtailment", "_autosummary/reV.config.curtailment.Curtailment", "_autosummary/reV.config.execution", "_autosummary/reV.config.execution.BaseExecutionConfig", "_autosummary/reV.config.execution.HPCConfig", "_autosummary/reV.config.execution.SlurmConfig", "_autosummary/reV.config.output_request", "_autosummary/reV.config.output_request.OutputRequest", "_autosummary/reV.config.output_request.SAMOutputRequest", "_autosummary/reV.config.project_points", "_autosummary/reV.config.project_points.PointsControl", "_autosummary/reV.config.project_points.ProjectPoints", "_autosummary/reV.config.sam_config", "_autosummary/reV.config.sam_config.SAMConfig", "_autosummary/reV.config.sam_config.SAMInputsChecker", "_autosummary/reV.econ", "_autosummary/reV.econ.cli_econ", "_autosummary/reV.econ.econ", "_autosummary/reV.econ.econ.Econ", "_autosummary/reV.econ.economies_of_scale", "_autosummary/reV.econ.economies_of_scale.EconomiesOfScale", "_autosummary/reV.econ.utilities", "_autosummary/reV.econ.utilities.lcoe_fcr", "_autosummary/reV.generation", "_autosummary/reV.generation.base", "_autosummary/reV.generation.base.BaseGen", "_autosummary/reV.generation.base.LCOE_REQUIRED_OUTPUTS", "_autosummary/reV.generation.cli_gen", "_autosummary/reV.generation.generation", "_autosummary/reV.generation.generation.Gen", "_autosummary/reV.handlers", "_autosummary/reV.handlers.cli_collect", "_autosummary/reV.handlers.cli_multi_year", "_autosummary/reV.handlers.exclusions", "_autosummary/reV.handlers.exclusions.ExclusionLayers", "_autosummary/reV.handlers.multi_year", "_autosummary/reV.handlers.multi_year.MultiYear", "_autosummary/reV.handlers.multi_year.MultiYearGroup", "_autosummary/reV.handlers.multi_year.my_collect_groups", "_autosummary/reV.handlers.outputs", "_autosummary/reV.handlers.outputs.Outputs", "_autosummary/reV.handlers.transmission", "_autosummary/reV.handlers.transmission.TransmissionCosts", "_autosummary/reV.handlers.transmission.TransmissionFeatures", "_autosummary/reV.hybrids", "_autosummary/reV.hybrids.cli_hybrids", "_autosummary/reV.hybrids.hybrid_methods", "_autosummary/reV.hybrids.hybrid_methods.aggregate_capacity", "_autosummary/reV.hybrids.hybrid_methods.aggregate_capacity_factor", "_autosummary/reV.hybrids.hybrid_methods.aggregate_solar_capacity", "_autosummary/reV.hybrids.hybrid_methods.aggregate_wind_capacity", "_autosummary/reV.hybrids.hybrids", "_autosummary/reV.hybrids.hybrids.ColNameFormatter", "_autosummary/reV.hybrids.hybrids.Hybridization", "_autosummary/reV.hybrids.hybrids.HybridsData", "_autosummary/reV.hybrids.hybrids.MetaHybridizer", "_autosummary/reV.hybrids.hybrids.RatioColumns", "_autosummary/reV.losses", "_autosummary/reV.losses.power_curve", "_autosummary/reV.losses.power_curve.AbstractPowerCurveTransformation", "_autosummary/reV.losses.power_curve.ExponentialStretching", "_autosummary/reV.losses.power_curve.HorizontalTranslation", "_autosummary/reV.losses.power_curve.LinearStretching", "_autosummary/reV.losses.power_curve.PowerCurve", "_autosummary/reV.losses.power_curve.PowerCurveLosses", "_autosummary/reV.losses.power_curve.PowerCurveLossesInput", "_autosummary/reV.losses.power_curve.PowerCurveLossesMixin", "_autosummary/reV.losses.power_curve.PowerCurveWindResource", "_autosummary/reV.losses.power_curve.TRANSFORMATIONS", "_autosummary/reV.losses.power_curve.adjust_power_curve", "_autosummary/reV.losses.scheduled", "_autosummary/reV.losses.scheduled.Outage", "_autosummary/reV.losses.scheduled.OutageScheduler", "_autosummary/reV.losses.scheduled.ScheduledLossesMixin", "_autosummary/reV.losses.scheduled.SingleOutageScheduler", "_autosummary/reV.losses.utils", "_autosummary/reV.losses.utils.convert_to_full_month_names", "_autosummary/reV.losses.utils.filter_unknown_month_names", "_autosummary/reV.losses.utils.format_month_name", "_autosummary/reV.losses.utils.full_month_name_from_abbr", "_autosummary/reV.losses.utils.hourly_indices_for_months", "_autosummary/reV.losses.utils.month_index", "_autosummary/reV.losses.utils.month_indices", "_autosummary/reV.nrwal", "_autosummary/reV.nrwal.cli_nrwal", "_autosummary/reV.nrwal.nrwal", "_autosummary/reV.nrwal.nrwal.RevNrwal", "_autosummary/reV.qa_qc", "_autosummary/reV.qa_qc.cli_qa_qc", "_autosummary/reV.qa_qc.cli_qa_qc.cli_qa_qc", "_autosummary/reV.qa_qc.qa_qc", "_autosummary/reV.qa_qc.qa_qc.QaQc", "_autosummary/reV.qa_qc.qa_qc.QaQcModule", "_autosummary/reV.qa_qc.summary", "_autosummary/reV.qa_qc.summary.ExclusionsMask", "_autosummary/reV.qa_qc.summary.PlotBase", "_autosummary/reV.qa_qc.summary.SummarizeH5", "_autosummary/reV.qa_qc.summary.SummarizeSupplyCurve", "_autosummary/reV.qa_qc.summary.SummaryPlots", "_autosummary/reV.qa_qc.summary.SupplyCurvePlot", "_autosummary/reV.rep_profiles", "_autosummary/reV.rep_profiles.cli_rep_profiles", "_autosummary/reV.rep_profiles.rep_profiles", "_autosummary/reV.rep_profiles.rep_profiles.RegionRepProfile", "_autosummary/reV.rep_profiles.rep_profiles.RepProfiles", "_autosummary/reV.rep_profiles.rep_profiles.RepProfilesBase", "_autosummary/reV.rep_profiles.rep_profiles.RepresentativeMethods", "_autosummary/reV.supply_curve", "_autosummary/reV.supply_curve.aggregation", "_autosummary/reV.supply_curve.aggregation.AbstractAggFileHandler", "_autosummary/reV.supply_curve.aggregation.AggFileHandler", "_autosummary/reV.supply_curve.aggregation.Aggregation", "_autosummary/reV.supply_curve.aggregation.BaseAggregation", "_autosummary/reV.supply_curve.cli_sc_aggregation", "_autosummary/reV.supply_curve.cli_supply_curve", "_autosummary/reV.supply_curve.competitive_wind_farms", "_autosummary/reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms", "_autosummary/reV.supply_curve.exclusions", "_autosummary/reV.supply_curve.exclusions.ExclusionMask", "_autosummary/reV.supply_curve.exclusions.ExclusionMaskFromDict", "_autosummary/reV.supply_curve.exclusions.FrictionMask", "_autosummary/reV.supply_curve.exclusions.LayerMask", "_autosummary/reV.supply_curve.extent", "_autosummary/reV.supply_curve.extent.SupplyCurveExtent", "_autosummary/reV.supply_curve.points", "_autosummary/reV.supply_curve.points.AbstractSupplyCurvePoint", "_autosummary/reV.supply_curve.points.AggregationSupplyCurvePoint", "_autosummary/reV.supply_curve.points.GenerationSupplyCurvePoint", "_autosummary/reV.supply_curve.points.SupplyCurvePoint", "_autosummary/reV.supply_curve.sc_aggregation", "_autosummary/reV.supply_curve.sc_aggregation.SupplyCurveAggFileHandler", "_autosummary/reV.supply_curve.sc_aggregation.SupplyCurveAggregation", "_autosummary/reV.supply_curve.supply_curve", "_autosummary/reV.supply_curve.supply_curve.DEFAULT_COLUMNS", "_autosummary/reV.supply_curve.supply_curve.SupplyCurve", "_autosummary/reV.supply_curve.tech_mapping", "_autosummary/reV.supply_curve.tech_mapping.TechMapping", "_autosummary/reV.utilities", "_autosummary/reV.utilities.FieldEnum", "_autosummary/reV.utilities.ModuleName", "_autosummary/reV.utilities.ResourceMetaField", "_autosummary/reV.utilities.SiteDataField", "_autosummary/reV.utilities.SupplyCurveField", "_autosummary/reV.utilities.cli_functions", "_autosummary/reV.utilities.cli_functions.format_analysis_years", "_autosummary/reV.utilities.cli_functions.init_cli_logging", "_autosummary/reV.utilities.cli_functions.parse_from_pipeline", "_autosummary/reV.utilities.curtailment", "_autosummary/reV.utilities.curtailment.curtail", "_autosummary/reV.utilities.exceptions", "_autosummary/reV.utilities.exceptions.CollectionRuntimeError", "_autosummary/reV.utilities.exceptions.CollectionValueError", "_autosummary/reV.utilities.exceptions.CollectionWarning", "_autosummary/reV.utilities.exceptions.ConfigError", "_autosummary/reV.utilities.exceptions.ConfigWarning", "_autosummary/reV.utilities.exceptions.DataShapeError", "_autosummary/reV.utilities.exceptions.EmptySupplyCurvePointError", "_autosummary/reV.utilities.exceptions.ExclusionLayerError", "_autosummary/reV.utilities.exceptions.ExecutionError", "_autosummary/reV.utilities.exceptions.ExtrapolationWarning", "_autosummary/reV.utilities.exceptions.FileInputError", "_autosummary/reV.utilities.exceptions.FileInputWarning", "_autosummary/reV.utilities.exceptions.HandlerKeyError", "_autosummary/reV.utilities.exceptions.HandlerRuntimeError", "_autosummary/reV.utilities.exceptions.HandlerValueError", "_autosummary/reV.utilities.exceptions.HandlerWarning", "_autosummary/reV.utilities.exceptions.InputError", "_autosummary/reV.utilities.exceptions.InputWarning", "_autosummary/reV.utilities.exceptions.JSONError", "_autosummary/reV.utilities.exceptions.MultiFileExclusionError", "_autosummary/reV.utilities.exceptions.NearestNeighborError", "_autosummary/reV.utilities.exceptions.OffshoreWindInputError", "_autosummary/reV.utilities.exceptions.OffshoreWindInputWarning", "_autosummary/reV.utilities.exceptions.OutputWarning", "_autosummary/reV.utilities.exceptions.ParallelExecutionWarning", "_autosummary/reV.utilities.exceptions.PipelineError", "_autosummary/reV.utilities.exceptions.ProjectPointsValueError", "_autosummary/reV.utilities.exceptions.PySAMVersionError", "_autosummary/reV.utilities.exceptions.PySAMVersionWarning", "_autosummary/reV.utilities.exceptions.ResourceError", "_autosummary/reV.utilities.exceptions.SAMExecutionError", "_autosummary/reV.utilities.exceptions.SAMExecutionWarning", "_autosummary/reV.utilities.exceptions.SAMInputError", "_autosummary/reV.utilities.exceptions.SAMInputWarning", "_autosummary/reV.utilities.exceptions.SlurmWarning", "_autosummary/reV.utilities.exceptions.SupplyCurveError", "_autosummary/reV.utilities.exceptions.SupplyCurveInputError", "_autosummary/reV.utilities.exceptions.WhileLoopPackingError", "_autosummary/reV.utilities.exceptions.reVDeprecationWarning", "_autosummary/reV.utilities.exceptions.reVError", "_autosummary/reV.utilities.exceptions.reVLossesValueError", "_autosummary/reV.utilities.exceptions.reVLossesWarning", "_autosummary/reV.utilities.log_versions", "_autosummary/reV.utilities.pytest_utils", "_autosummary/reV.utilities.pytest_utils.make_fake_h5_chunks", "_autosummary/reV.utilities.pytest_utils.pd_date_range", "_autosummary/reV.utilities.pytest_utils.write_chunk", "_autosummary/reV.utilities.slots", "_autosummary/reV.utilities.slots.SlottedDict", "_autosummary/reV.version", "_cli/cli", "_cli/reV", "_cli/reV batch", "_cli/reV bespoke", "_cli/reV collect", "_cli/reV econ", "_cli/reV generation", "_cli/reV hybrids", "_cli/reV multi-year", "_cli/reV nrwal", "_cli/reV pipeline", "_cli/reV project-points", "_cli/reV qa-qc", "_cli/reV rep-profiles", "_cli/reV reset-status", "_cli/reV script", "_cli/reV status", "_cli/reV supply-curve", "_cli/reV supply-curve-aggregation", "_cli/reV template-configs", "api", "index", "misc/examples", "misc/examples.advanced_econ_modeling", "misc/examples.aws_pcluster", "misc/examples.batched_execution", "misc/examples.eagle_node_requests", "misc/examples.full_pipeline_execution", "misc/examples.marine_energy", "misc/examples.offshore_wind", "misc/examples.project_points", "misc/examples.rev_losses", "misc/examples.running_locally", "misc/examples.running_with_hsds", "misc/examples.single_module_execution", "misc/installation", "misc/installation_usage"], "filenames": ["_autosummary/reV.rst", "_autosummary/reV.SAM.rst", "_autosummary/reV.SAM.SAM.rst", "_autosummary/reV.SAM.SAM.RevPySam.rst", "_autosummary/reV.SAM.SAM.Sam.rst", "_autosummary/reV.SAM.SAM.SamResourceRetriever.rst", "_autosummary/reV.SAM.defaults.rst", "_autosummary/reV.SAM.defaults.AbstractDefaultFromConfigFile.rst", "_autosummary/reV.SAM.defaults.DefaultGeothermal.rst", "_autosummary/reV.SAM.defaults.DefaultLCOE.rst", "_autosummary/reV.SAM.defaults.DefaultLinearFresnelDsgIph.rst", "_autosummary/reV.SAM.defaults.DefaultMhkWave.rst", "_autosummary/reV.SAM.defaults.DefaultPvSamv1.rst", "_autosummary/reV.SAM.defaults.DefaultPvWattsv5.rst", "_autosummary/reV.SAM.defaults.DefaultPvWattsv8.rst", "_autosummary/reV.SAM.defaults.DefaultSingleOwner.rst", "_autosummary/reV.SAM.defaults.DefaultSwh.rst", "_autosummary/reV.SAM.defaults.DefaultTcsMoltenSalt.rst", "_autosummary/reV.SAM.defaults.DefaultTroughPhysicalProcessHeat.rst", "_autosummary/reV.SAM.defaults.DefaultWindPower.rst", "_autosummary/reV.SAM.econ.rst", "_autosummary/reV.SAM.econ.Economic.rst", "_autosummary/reV.SAM.econ.LCOE.rst", "_autosummary/reV.SAM.econ.SingleOwner.rst", "_autosummary/reV.SAM.generation.rst", "_autosummary/reV.SAM.generation.AbstractSamGeneration.rst", "_autosummary/reV.SAM.generation.AbstractSamGenerationFromWeatherFile.rst", "_autosummary/reV.SAM.generation.AbstractSamPv.rst", "_autosummary/reV.SAM.generation.AbstractSamSolar.rst", "_autosummary/reV.SAM.generation.AbstractSamWind.rst", "_autosummary/reV.SAM.generation.Geothermal.rst", "_autosummary/reV.SAM.generation.LinearDirectSteam.rst", "_autosummary/reV.SAM.generation.MhkWave.rst", "_autosummary/reV.SAM.generation.PvSamv1.rst", "_autosummary/reV.SAM.generation.PvWattsv5.rst", "_autosummary/reV.SAM.generation.PvWattsv7.rst", "_autosummary/reV.SAM.generation.PvWattsv8.rst", "_autosummary/reV.SAM.generation.SolarWaterHeat.rst", "_autosummary/reV.SAM.generation.TcsMoltenSalt.rst", "_autosummary/reV.SAM.generation.TroughPhysicalHeat.rst", "_autosummary/reV.SAM.generation.WindPower.rst", "_autosummary/reV.SAM.generation.WindPowerPD.rst", "_autosummary/reV.SAM.version_checker.rst", "_autosummary/reV.SAM.version_checker.PySamVersionChecker.rst", "_autosummary/reV.SAM.windbos.rst", "_autosummary/reV.SAM.windbos.WindBos.rst", "_autosummary/reV.bespoke.rst", "_autosummary/reV.bespoke.bespoke.rst", "_autosummary/reV.bespoke.bespoke.BespokeMultiPlantData.rst", "_autosummary/reV.bespoke.bespoke.BespokeSinglePlant.rst", "_autosummary/reV.bespoke.bespoke.BespokeSinglePlantData.rst", "_autosummary/reV.bespoke.bespoke.BespokeWindPlants.rst", "_autosummary/reV.bespoke.cli_bespoke.rst", "_autosummary/reV.bespoke.gradient_free.rst", "_autosummary/reV.bespoke.gradient_free.GeneticAlgorithm.rst", "_autosummary/reV.bespoke.pack_turbs.rst", "_autosummary/reV.bespoke.pack_turbs.PackTurbines.rst", "_autosummary/reV.bespoke.pack_turbs.smallest_area_with_tiebreakers.rst", "_autosummary/reV.bespoke.place_turbines.rst", "_autosummary/reV.bespoke.place_turbines.PlaceTurbines.rst", "_autosummary/reV.bespoke.place_turbines.none_until_optimized.rst", "_autosummary/reV.bespoke.plotting_functions.rst", "_autosummary/reV.bespoke.plotting_functions.get_xy.rst", "_autosummary/reV.bespoke.plotting_functions.plot_poly.rst", "_autosummary/reV.bespoke.plotting_functions.plot_turbines.rst", "_autosummary/reV.bespoke.plotting_functions.plot_windrose.rst", "_autosummary/reV.cli.rst", "_autosummary/reV.config.rst", "_autosummary/reV.config.base_analysis_config.rst", "_autosummary/reV.config.base_analysis_config.AnalysisConfig.rst", "_autosummary/reV.config.base_config.rst", "_autosummary/reV.config.base_config.BaseConfig.rst", "_autosummary/reV.config.cli_project_points.rst", "_autosummary/reV.config.curtailment.rst", "_autosummary/reV.config.curtailment.Curtailment.rst", "_autosummary/reV.config.execution.rst", "_autosummary/reV.config.execution.BaseExecutionConfig.rst", "_autosummary/reV.config.execution.HPCConfig.rst", "_autosummary/reV.config.execution.SlurmConfig.rst", "_autosummary/reV.config.output_request.rst", "_autosummary/reV.config.output_request.OutputRequest.rst", "_autosummary/reV.config.output_request.SAMOutputRequest.rst", "_autosummary/reV.config.project_points.rst", "_autosummary/reV.config.project_points.PointsControl.rst", "_autosummary/reV.config.project_points.ProjectPoints.rst", "_autosummary/reV.config.sam_config.rst", "_autosummary/reV.config.sam_config.SAMConfig.rst", "_autosummary/reV.config.sam_config.SAMInputsChecker.rst", "_autosummary/reV.econ.rst", "_autosummary/reV.econ.cli_econ.rst", "_autosummary/reV.econ.econ.rst", "_autosummary/reV.econ.econ.Econ.rst", "_autosummary/reV.econ.economies_of_scale.rst", "_autosummary/reV.econ.economies_of_scale.EconomiesOfScale.rst", "_autosummary/reV.econ.utilities.rst", "_autosummary/reV.econ.utilities.lcoe_fcr.rst", "_autosummary/reV.generation.rst", "_autosummary/reV.generation.base.rst", "_autosummary/reV.generation.base.BaseGen.rst", "_autosummary/reV.generation.base.LCOE_REQUIRED_OUTPUTS.rst", "_autosummary/reV.generation.cli_gen.rst", "_autosummary/reV.generation.generation.rst", "_autosummary/reV.generation.generation.Gen.rst", "_autosummary/reV.handlers.rst", "_autosummary/reV.handlers.cli_collect.rst", "_autosummary/reV.handlers.cli_multi_year.rst", "_autosummary/reV.handlers.exclusions.rst", "_autosummary/reV.handlers.exclusions.ExclusionLayers.rst", "_autosummary/reV.handlers.multi_year.rst", "_autosummary/reV.handlers.multi_year.MultiYear.rst", "_autosummary/reV.handlers.multi_year.MultiYearGroup.rst", "_autosummary/reV.handlers.multi_year.my_collect_groups.rst", "_autosummary/reV.handlers.outputs.rst", "_autosummary/reV.handlers.outputs.Outputs.rst", "_autosummary/reV.handlers.transmission.rst", "_autosummary/reV.handlers.transmission.TransmissionCosts.rst", "_autosummary/reV.handlers.transmission.TransmissionFeatures.rst", "_autosummary/reV.hybrids.rst", "_autosummary/reV.hybrids.cli_hybrids.rst", "_autosummary/reV.hybrids.hybrid_methods.rst", "_autosummary/reV.hybrids.hybrid_methods.aggregate_capacity.rst", "_autosummary/reV.hybrids.hybrid_methods.aggregate_capacity_factor.rst", "_autosummary/reV.hybrids.hybrid_methods.aggregate_solar_capacity.rst", "_autosummary/reV.hybrids.hybrid_methods.aggregate_wind_capacity.rst", "_autosummary/reV.hybrids.hybrids.rst", "_autosummary/reV.hybrids.hybrids.ColNameFormatter.rst", "_autosummary/reV.hybrids.hybrids.Hybridization.rst", "_autosummary/reV.hybrids.hybrids.HybridsData.rst", "_autosummary/reV.hybrids.hybrids.MetaHybridizer.rst", "_autosummary/reV.hybrids.hybrids.RatioColumns.rst", "_autosummary/reV.losses.rst", "_autosummary/reV.losses.power_curve.rst", "_autosummary/reV.losses.power_curve.AbstractPowerCurveTransformation.rst", "_autosummary/reV.losses.power_curve.ExponentialStretching.rst", "_autosummary/reV.losses.power_curve.HorizontalTranslation.rst", "_autosummary/reV.losses.power_curve.LinearStretching.rst", "_autosummary/reV.losses.power_curve.PowerCurve.rst", "_autosummary/reV.losses.power_curve.PowerCurveLosses.rst", "_autosummary/reV.losses.power_curve.PowerCurveLossesInput.rst", "_autosummary/reV.losses.power_curve.PowerCurveLossesMixin.rst", "_autosummary/reV.losses.power_curve.PowerCurveWindResource.rst", "_autosummary/reV.losses.power_curve.TRANSFORMATIONS.rst", "_autosummary/reV.losses.power_curve.adjust_power_curve.rst", "_autosummary/reV.losses.scheduled.rst", "_autosummary/reV.losses.scheduled.Outage.rst", "_autosummary/reV.losses.scheduled.OutageScheduler.rst", "_autosummary/reV.losses.scheduled.ScheduledLossesMixin.rst", "_autosummary/reV.losses.scheduled.SingleOutageScheduler.rst", "_autosummary/reV.losses.utils.rst", "_autosummary/reV.losses.utils.convert_to_full_month_names.rst", "_autosummary/reV.losses.utils.filter_unknown_month_names.rst", "_autosummary/reV.losses.utils.format_month_name.rst", "_autosummary/reV.losses.utils.full_month_name_from_abbr.rst", "_autosummary/reV.losses.utils.hourly_indices_for_months.rst", "_autosummary/reV.losses.utils.month_index.rst", "_autosummary/reV.losses.utils.month_indices.rst", "_autosummary/reV.nrwal.rst", "_autosummary/reV.nrwal.cli_nrwal.rst", "_autosummary/reV.nrwal.nrwal.rst", "_autosummary/reV.nrwal.nrwal.RevNrwal.rst", "_autosummary/reV.qa_qc.rst", "_autosummary/reV.qa_qc.cli_qa_qc.rst", "_autosummary/reV.qa_qc.cli_qa_qc.cli_qa_qc.rst", "_autosummary/reV.qa_qc.qa_qc.rst", "_autosummary/reV.qa_qc.qa_qc.QaQc.rst", "_autosummary/reV.qa_qc.qa_qc.QaQcModule.rst", "_autosummary/reV.qa_qc.summary.rst", "_autosummary/reV.qa_qc.summary.ExclusionsMask.rst", "_autosummary/reV.qa_qc.summary.PlotBase.rst", "_autosummary/reV.qa_qc.summary.SummarizeH5.rst", "_autosummary/reV.qa_qc.summary.SummarizeSupplyCurve.rst", "_autosummary/reV.qa_qc.summary.SummaryPlots.rst", "_autosummary/reV.qa_qc.summary.SupplyCurvePlot.rst", "_autosummary/reV.rep_profiles.rst", "_autosummary/reV.rep_profiles.cli_rep_profiles.rst", "_autosummary/reV.rep_profiles.rep_profiles.rst", "_autosummary/reV.rep_profiles.rep_profiles.RegionRepProfile.rst", "_autosummary/reV.rep_profiles.rep_profiles.RepProfiles.rst", "_autosummary/reV.rep_profiles.rep_profiles.RepProfilesBase.rst", "_autosummary/reV.rep_profiles.rep_profiles.RepresentativeMethods.rst", "_autosummary/reV.supply_curve.rst", "_autosummary/reV.supply_curve.aggregation.rst", "_autosummary/reV.supply_curve.aggregation.AbstractAggFileHandler.rst", "_autosummary/reV.supply_curve.aggregation.AggFileHandler.rst", "_autosummary/reV.supply_curve.aggregation.Aggregation.rst", "_autosummary/reV.supply_curve.aggregation.BaseAggregation.rst", "_autosummary/reV.supply_curve.cli_sc_aggregation.rst", "_autosummary/reV.supply_curve.cli_supply_curve.rst", "_autosummary/reV.supply_curve.competitive_wind_farms.rst", "_autosummary/reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms.rst", "_autosummary/reV.supply_curve.exclusions.rst", "_autosummary/reV.supply_curve.exclusions.ExclusionMask.rst", "_autosummary/reV.supply_curve.exclusions.ExclusionMaskFromDict.rst", "_autosummary/reV.supply_curve.exclusions.FrictionMask.rst", "_autosummary/reV.supply_curve.exclusions.LayerMask.rst", "_autosummary/reV.supply_curve.extent.rst", "_autosummary/reV.supply_curve.extent.SupplyCurveExtent.rst", "_autosummary/reV.supply_curve.points.rst", "_autosummary/reV.supply_curve.points.AbstractSupplyCurvePoint.rst", "_autosummary/reV.supply_curve.points.AggregationSupplyCurvePoint.rst", "_autosummary/reV.supply_curve.points.GenerationSupplyCurvePoint.rst", "_autosummary/reV.supply_curve.points.SupplyCurvePoint.rst", "_autosummary/reV.supply_curve.sc_aggregation.rst", "_autosummary/reV.supply_curve.sc_aggregation.SupplyCurveAggFileHandler.rst", "_autosummary/reV.supply_curve.sc_aggregation.SupplyCurveAggregation.rst", "_autosummary/reV.supply_curve.supply_curve.rst", "_autosummary/reV.supply_curve.supply_curve.DEFAULT_COLUMNS.rst", "_autosummary/reV.supply_curve.supply_curve.SupplyCurve.rst", "_autosummary/reV.supply_curve.tech_mapping.rst", "_autosummary/reV.supply_curve.tech_mapping.TechMapping.rst", "_autosummary/reV.utilities.rst", "_autosummary/reV.utilities.FieldEnum.rst", "_autosummary/reV.utilities.ModuleName.rst", "_autosummary/reV.utilities.ResourceMetaField.rst", "_autosummary/reV.utilities.SiteDataField.rst", "_autosummary/reV.utilities.SupplyCurveField.rst", "_autosummary/reV.utilities.cli_functions.rst", "_autosummary/reV.utilities.cli_functions.format_analysis_years.rst", "_autosummary/reV.utilities.cli_functions.init_cli_logging.rst", "_autosummary/reV.utilities.cli_functions.parse_from_pipeline.rst", "_autosummary/reV.utilities.curtailment.rst", "_autosummary/reV.utilities.curtailment.curtail.rst", "_autosummary/reV.utilities.exceptions.rst", "_autosummary/reV.utilities.exceptions.CollectionRuntimeError.rst", "_autosummary/reV.utilities.exceptions.CollectionValueError.rst", "_autosummary/reV.utilities.exceptions.CollectionWarning.rst", "_autosummary/reV.utilities.exceptions.ConfigError.rst", "_autosummary/reV.utilities.exceptions.ConfigWarning.rst", "_autosummary/reV.utilities.exceptions.DataShapeError.rst", "_autosummary/reV.utilities.exceptions.EmptySupplyCurvePointError.rst", "_autosummary/reV.utilities.exceptions.ExclusionLayerError.rst", "_autosummary/reV.utilities.exceptions.ExecutionError.rst", "_autosummary/reV.utilities.exceptions.ExtrapolationWarning.rst", "_autosummary/reV.utilities.exceptions.FileInputError.rst", "_autosummary/reV.utilities.exceptions.FileInputWarning.rst", "_autosummary/reV.utilities.exceptions.HandlerKeyError.rst", "_autosummary/reV.utilities.exceptions.HandlerRuntimeError.rst", "_autosummary/reV.utilities.exceptions.HandlerValueError.rst", "_autosummary/reV.utilities.exceptions.HandlerWarning.rst", "_autosummary/reV.utilities.exceptions.InputError.rst", "_autosummary/reV.utilities.exceptions.InputWarning.rst", "_autosummary/reV.utilities.exceptions.JSONError.rst", "_autosummary/reV.utilities.exceptions.MultiFileExclusionError.rst", "_autosummary/reV.utilities.exceptions.NearestNeighborError.rst", "_autosummary/reV.utilities.exceptions.OffshoreWindInputError.rst", "_autosummary/reV.utilities.exceptions.OffshoreWindInputWarning.rst", "_autosummary/reV.utilities.exceptions.OutputWarning.rst", "_autosummary/reV.utilities.exceptions.ParallelExecutionWarning.rst", "_autosummary/reV.utilities.exceptions.PipelineError.rst", "_autosummary/reV.utilities.exceptions.ProjectPointsValueError.rst", "_autosummary/reV.utilities.exceptions.PySAMVersionError.rst", "_autosummary/reV.utilities.exceptions.PySAMVersionWarning.rst", "_autosummary/reV.utilities.exceptions.ResourceError.rst", "_autosummary/reV.utilities.exceptions.SAMExecutionError.rst", "_autosummary/reV.utilities.exceptions.SAMExecutionWarning.rst", "_autosummary/reV.utilities.exceptions.SAMInputError.rst", "_autosummary/reV.utilities.exceptions.SAMInputWarning.rst", "_autosummary/reV.utilities.exceptions.SlurmWarning.rst", "_autosummary/reV.utilities.exceptions.SupplyCurveError.rst", "_autosummary/reV.utilities.exceptions.SupplyCurveInputError.rst", "_autosummary/reV.utilities.exceptions.WhileLoopPackingError.rst", "_autosummary/reV.utilities.exceptions.reVDeprecationWarning.rst", "_autosummary/reV.utilities.exceptions.reVError.rst", "_autosummary/reV.utilities.exceptions.reVLossesValueError.rst", "_autosummary/reV.utilities.exceptions.reVLossesWarning.rst", "_autosummary/reV.utilities.log_versions.rst", "_autosummary/reV.utilities.pytest_utils.rst", "_autosummary/reV.utilities.pytest_utils.make_fake_h5_chunks.rst", "_autosummary/reV.utilities.pytest_utils.pd_date_range.rst", "_autosummary/reV.utilities.pytest_utils.write_chunk.rst", "_autosummary/reV.utilities.slots.rst", "_autosummary/reV.utilities.slots.SlottedDict.rst", "_autosummary/reV.version.rst", "_cli/cli.rst", "_cli/reV.rst", "_cli/reV batch.rst", "_cli/reV bespoke.rst", "_cli/reV collect.rst", "_cli/reV econ.rst", "_cli/reV generation.rst", "_cli/reV hybrids.rst", "_cli/reV multi-year.rst", "_cli/reV nrwal.rst", "_cli/reV pipeline.rst", "_cli/reV project-points.rst", "_cli/reV qa-qc.rst", "_cli/reV rep-profiles.rst", "_cli/reV reset-status.rst", "_cli/reV script.rst", "_cli/reV status.rst", "_cli/reV supply-curve.rst", "_cli/reV supply-curve-aggregation.rst", "_cli/reV template-configs.rst", "api.rst", "index.rst", "misc/examples.rst", "misc/examples.advanced_econ_modeling.rst", "misc/examples.aws_pcluster.rst", "misc/examples.batched_execution.rst", "misc/examples.eagle_node_requests.rst", "misc/examples.full_pipeline_execution.rst", "misc/examples.marine_energy.rst", "misc/examples.offshore_wind.rst", "misc/examples.project_points.rst", "misc/examples.rev_losses.rst", "misc/examples.running_locally.rst", "misc/examples.running_with_hsds.rst", "misc/examples.single_module_execution.rst", "misc/installation.rst", "misc/installation_usage.rst"], "titles": ["reV", "reV.SAM", "reV.SAM.SAM", "reV.SAM.SAM.RevPySam", "reV.SAM.SAM.Sam", "reV.SAM.SAM.SamResourceRetriever", "reV.SAM.defaults", "reV.SAM.defaults.AbstractDefaultFromConfigFile", "reV.SAM.defaults.DefaultGeothermal", "reV.SAM.defaults.DefaultLCOE", "reV.SAM.defaults.DefaultLinearFresnelDsgIph", "reV.SAM.defaults.DefaultMhkWave", "reV.SAM.defaults.DefaultPvSamv1", "reV.SAM.defaults.DefaultPvWattsv5", "reV.SAM.defaults.DefaultPvWattsv8", "reV.SAM.defaults.DefaultSingleOwner", "reV.SAM.defaults.DefaultSwh", "reV.SAM.defaults.DefaultTcsMoltenSalt", "reV.SAM.defaults.DefaultTroughPhysicalProcessHeat", "reV.SAM.defaults.DefaultWindPower", "reV.SAM.econ", "reV.SAM.econ.Economic", "reV.SAM.econ.LCOE", "reV.SAM.econ.SingleOwner", "reV.SAM.generation", "reV.SAM.generation.AbstractSamGeneration", "reV.SAM.generation.AbstractSamGenerationFromWeatherFile", "reV.SAM.generation.AbstractSamPv", "reV.SAM.generation.AbstractSamSolar", "reV.SAM.generation.AbstractSamWind", "reV.SAM.generation.Geothermal", "reV.SAM.generation.LinearDirectSteam", "reV.SAM.generation.MhkWave", "reV.SAM.generation.PvSamv1", "reV.SAM.generation.PvWattsv5", "reV.SAM.generation.PvWattsv7", "reV.SAM.generation.PvWattsv8", "reV.SAM.generation.SolarWaterHeat", "reV.SAM.generation.TcsMoltenSalt", "reV.SAM.generation.TroughPhysicalHeat", "reV.SAM.generation.WindPower", "reV.SAM.generation.WindPowerPD", "reV.SAM.version_checker", "reV.SAM.version_checker.PySamVersionChecker", "reV.SAM.windbos", "reV.SAM.windbos.WindBos", "reV.bespoke", "reV.bespoke.bespoke", "reV.bespoke.bespoke.BespokeMultiPlantData", "reV.bespoke.bespoke.BespokeSinglePlant", "reV.bespoke.bespoke.BespokeSinglePlantData", "reV.bespoke.bespoke.BespokeWindPlants", "reV.bespoke.cli_bespoke", "reV.bespoke.gradient_free", "reV.bespoke.gradient_free.GeneticAlgorithm", "reV.bespoke.pack_turbs", "reV.bespoke.pack_turbs.PackTurbines", "reV.bespoke.pack_turbs.smallest_area_with_tiebreakers", "reV.bespoke.place_turbines", "reV.bespoke.place_turbines.PlaceTurbines", "reV.bespoke.place_turbines.none_until_optimized", "reV.bespoke.plotting_functions", "reV.bespoke.plotting_functions.get_xy", "reV.bespoke.plotting_functions.plot_poly", "reV.bespoke.plotting_functions.plot_turbines", "reV.bespoke.plotting_functions.plot_windrose", "reV.cli", "reV.config", "reV.config.base_analysis_config", "reV.config.base_analysis_config.AnalysisConfig", "reV.config.base_config", "reV.config.base_config.BaseConfig", "reV.config.cli_project_points", "reV.config.curtailment", "reV.config.curtailment.Curtailment", "reV.config.execution", "reV.config.execution.BaseExecutionConfig", "reV.config.execution.HPCConfig", "reV.config.execution.SlurmConfig", "reV.config.output_request", "reV.config.output_request.OutputRequest", "reV.config.output_request.SAMOutputRequest", "reV.config.project_points", "reV.config.project_points.PointsControl", "reV.config.project_points.ProjectPoints", "reV.config.sam_config", "reV.config.sam_config.SAMConfig", "reV.config.sam_config.SAMInputsChecker", "reV.econ", "reV.econ.cli_econ", "reV.econ.econ", "reV.econ.econ.Econ", "reV.econ.economies_of_scale", "reV.econ.economies_of_scale.EconomiesOfScale", "reV.econ.utilities", "reV.econ.utilities.lcoe_fcr", "reV.generation", "reV.generation.base", "reV.generation.base.BaseGen", "reV.generation.base.LCOE_REQUIRED_OUTPUTS", "reV.generation.cli_gen", "reV.generation.generation", "reV.generation.generation.Gen", "reV.handlers", "reV.handlers.cli_collect", "reV.handlers.cli_multi_year", "reV.handlers.exclusions", "reV.handlers.exclusions.ExclusionLayers", "reV.handlers.multi_year", "reV.handlers.multi_year.MultiYear", "reV.handlers.multi_year.MultiYearGroup", "reV.handlers.multi_year.my_collect_groups", "reV.handlers.outputs", "reV.handlers.outputs.Outputs", "reV.handlers.transmission", "reV.handlers.transmission.TransmissionCosts", "reV.handlers.transmission.TransmissionFeatures", "reV.hybrids", "reV.hybrids.cli_hybrids", "reV.hybrids.hybrid_methods", "reV.hybrids.hybrid_methods.aggregate_capacity", "reV.hybrids.hybrid_methods.aggregate_capacity_factor", "reV.hybrids.hybrid_methods.aggregate_solar_capacity", "reV.hybrids.hybrid_methods.aggregate_wind_capacity", "reV.hybrids.hybrids", "reV.hybrids.hybrids.ColNameFormatter", "reV.hybrids.hybrids.Hybridization", "reV.hybrids.hybrids.HybridsData", "reV.hybrids.hybrids.MetaHybridizer", "reV.hybrids.hybrids.RatioColumns", "reV.losses", "reV.losses.power_curve", "reV.losses.power_curve.AbstractPowerCurveTransformation", "reV.losses.power_curve.ExponentialStretching", "reV.losses.power_curve.HorizontalTranslation", "reV.losses.power_curve.LinearStretching", "reV.losses.power_curve.PowerCurve", "reV.losses.power_curve.PowerCurveLosses", "reV.losses.power_curve.PowerCurveLossesInput", "reV.losses.power_curve.PowerCurveLossesMixin", "reV.losses.power_curve.PowerCurveWindResource", "reV.losses.power_curve.TRANSFORMATIONS", "reV.losses.power_curve.adjust_power_curve", "reV.losses.scheduled", "reV.losses.scheduled.Outage", "reV.losses.scheduled.OutageScheduler", "reV.losses.scheduled.ScheduledLossesMixin", "reV.losses.scheduled.SingleOutageScheduler", "reV.losses.utils", "reV.losses.utils.convert_to_full_month_names", "reV.losses.utils.filter_unknown_month_names", "reV.losses.utils.format_month_name", "reV.losses.utils.full_month_name_from_abbr", "reV.losses.utils.hourly_indices_for_months", "reV.losses.utils.month_index", "reV.losses.utils.month_indices", "reV.nrwal", "reV.nrwal.cli_nrwal", "reV.nrwal.nrwal", "reV.nrwal.nrwal.RevNrwal", "reV.qa_qc", "reV.qa_qc.cli_qa_qc", "reV.qa_qc.cli_qa_qc.cli_qa_qc", "reV.qa_qc.qa_qc", "reV.qa_qc.qa_qc.QaQc", "reV.qa_qc.qa_qc.QaQcModule", "reV.qa_qc.summary", "reV.qa_qc.summary.ExclusionsMask", "reV.qa_qc.summary.PlotBase", "reV.qa_qc.summary.SummarizeH5", "reV.qa_qc.summary.SummarizeSupplyCurve", "reV.qa_qc.summary.SummaryPlots", "reV.qa_qc.summary.SupplyCurvePlot", "reV.rep_profiles", "reV.rep_profiles.cli_rep_profiles", "reV.rep_profiles.rep_profiles", "reV.rep_profiles.rep_profiles.RegionRepProfile", "reV.rep_profiles.rep_profiles.RepProfiles", "reV.rep_profiles.rep_profiles.RepProfilesBase", "reV.rep_profiles.rep_profiles.RepresentativeMethods", "reV.supply_curve", "reV.supply_curve.aggregation", "reV.supply_curve.aggregation.AbstractAggFileHandler", "reV.supply_curve.aggregation.AggFileHandler", "reV.supply_curve.aggregation.Aggregation", "reV.supply_curve.aggregation.BaseAggregation", "reV.supply_curve.cli_sc_aggregation", "reV.supply_curve.cli_supply_curve", "reV.supply_curve.competitive_wind_farms", "reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms", "reV.supply_curve.exclusions", "reV.supply_curve.exclusions.ExclusionMask", "reV.supply_curve.exclusions.ExclusionMaskFromDict", "reV.supply_curve.exclusions.FrictionMask", "reV.supply_curve.exclusions.LayerMask", "reV.supply_curve.extent", "reV.supply_curve.extent.SupplyCurveExtent", "reV.supply_curve.points", "reV.supply_curve.points.AbstractSupplyCurvePoint", "reV.supply_curve.points.AggregationSupplyCurvePoint", "reV.supply_curve.points.GenerationSupplyCurvePoint", "reV.supply_curve.points.SupplyCurvePoint", "reV.supply_curve.sc_aggregation", "reV.supply_curve.sc_aggregation.SupplyCurveAggFileHandler", "reV.supply_curve.sc_aggregation.SupplyCurveAggregation", "reV.supply_curve.supply_curve", "reV.supply_curve.supply_curve.DEFAULT_COLUMNS", "reV.supply_curve.supply_curve.SupplyCurve", "reV.supply_curve.tech_mapping", "reV.supply_curve.tech_mapping.TechMapping", "reV.utilities", "reV.utilities.FieldEnum", "reV.utilities.ModuleName", "reV.utilities.ResourceMetaField", "reV.utilities.SiteDataField", "reV.utilities.SupplyCurveField", "reV.utilities.cli_functions", "reV.utilities.cli_functions.format_analysis_years", "reV.utilities.cli_functions.init_cli_logging", "reV.utilities.cli_functions.parse_from_pipeline", "reV.utilities.curtailment", "reV.utilities.curtailment.curtail", "reV.utilities.exceptions", "reV.utilities.exceptions.CollectionRuntimeError", "reV.utilities.exceptions.CollectionValueError", "reV.utilities.exceptions.CollectionWarning", "reV.utilities.exceptions.ConfigError", "reV.utilities.exceptions.ConfigWarning", "reV.utilities.exceptions.DataShapeError", "reV.utilities.exceptions.EmptySupplyCurvePointError", "reV.utilities.exceptions.ExclusionLayerError", "reV.utilities.exceptions.ExecutionError", "reV.utilities.exceptions.ExtrapolationWarning", "reV.utilities.exceptions.FileInputError", "reV.utilities.exceptions.FileInputWarning", "reV.utilities.exceptions.HandlerKeyError", "reV.utilities.exceptions.HandlerRuntimeError", "reV.utilities.exceptions.HandlerValueError", "reV.utilities.exceptions.HandlerWarning", "reV.utilities.exceptions.InputError", "reV.utilities.exceptions.InputWarning", "reV.utilities.exceptions.JSONError", "reV.utilities.exceptions.MultiFileExclusionError", "reV.utilities.exceptions.NearestNeighborError", "reV.utilities.exceptions.OffshoreWindInputError", "reV.utilities.exceptions.OffshoreWindInputWarning", "reV.utilities.exceptions.OutputWarning", "reV.utilities.exceptions.ParallelExecutionWarning", "reV.utilities.exceptions.PipelineError", "reV.utilities.exceptions.ProjectPointsValueError", "reV.utilities.exceptions.PySAMVersionError", "reV.utilities.exceptions.PySAMVersionWarning", "reV.utilities.exceptions.ResourceError", "reV.utilities.exceptions.SAMExecutionError", "reV.utilities.exceptions.SAMExecutionWarning", "reV.utilities.exceptions.SAMInputError", "reV.utilities.exceptions.SAMInputWarning", "reV.utilities.exceptions.SlurmWarning", "reV.utilities.exceptions.SupplyCurveError", "reV.utilities.exceptions.SupplyCurveInputError", "reV.utilities.exceptions.WhileLoopPackingError", "reV.utilities.exceptions.reVDeprecationWarning", "reV.utilities.exceptions.reVError", "reV.utilities.exceptions.reVLossesValueError", "reV.utilities.exceptions.reVLossesWarning", "reV.utilities.log_versions", "reV.utilities.pytest_utils", "reV.utilities.pytest_utils.make_fake_h5_chunks", "reV.utilities.pytest_utils.pd_date_range", "reV.utilities.pytest_utils.write_chunk", "reV.utilities.slots", "reV.utilities.slots.SlottedDict", "reV.version", "Command Line Interfaces (CLIs)", "reV", "reV batch", "reV bespoke", "reV collect", "reV econ", "reV generation", "reV hybrids", "reV multi-year", "reV nrwal", "reV pipeline", "reV project-points", "reV qa-qc", "reV rep-profiles", "reV reset-status", "reV script", "reV status", "reV supply-curve", "reV supply-curve-aggregation", "reV template-configs", "&lt;no title&gt;", "reV documentation", "Examples", "SAM Single Owner Modeling", "Running reV on an AWS Parallel Cluster", "Batched Execution", "Eagle Node Requests", "Full Pipeline Execution", "reV Marine Energy", "Offshore Wind Modeling", "reV Project Points", "reV Losses", "Run reV locally", "Running with HSDS", "Single Module Execution", "Installation", "Installation and Usage"], "terms": {"The": [0, 5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 54, 56, 59, 63, 64, 65, 69, 71, 74, 76, 77, 78, 80, 81, 84, 86, 91, 98, 102, 111, 113, 125, 126, 128, 132, 133, 134, 135, 136, 137, 138, 144, 145, 146, 147, 153, 154, 155, 159, 162, 176, 177, 178, 179, 184, 194, 196, 199, 200, 201, 203, 204, 207, 208, 212, 218, 219, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 304, 306, 307, 308], "renew": [0, 51, 102, 276, 279, 294, 297, 301, 308], "energi": [0, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 93, 95, 102, 138, 200, 204, 276, 279, 291, 294, 295, 297, 308], "potenti": [0, 30, 48, 59, 69, 71, 74, 76, 77, 78, 86, 111, 204, 245, 281, 291, 294, 308], "model": [0, 3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 49, 102, 274, 279, 294, 295, 301, 308], "interfac": [1, 2, 20, 24, 66, 132, 274, 295, 297], "modul": [1, 2, 3, 4, 5, 7, 8, 13, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 51, 55, 69, 71, 74, 76, 77, 78, 79, 86, 88, 90, 91, 92, 97, 98, 101, 102, 114, 124, 130, 131, 143, 151, 156, 157, 158, 159, 160, 162, 165, 204, 205, 208, 212, 219, 263, 264, 274, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 295, 296, 297, 298, 300, 304, 308], "wrap": [2, 20, 24], "nrel": [2, 20, 24, 27, 28, 33, 34, 35, 36, 38, 51, 109, 113, 204, 276, 294, 297, 301, 305, 306, 308], "pysam": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 91, 98, 102, 265, 276, 278, 279, 301, 303, 305], "librari": [2, 158, 159, 282, 288, 306], "addit": [2, 5, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 69, 71, 74, 76, 77, 78, 86, 102, 137, 159, 164, 167, 171, 172, 199, 200, 201, 204, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "featur": [2, 20, 24, 77, 78, 114, 115, 116, 207, 261, 267, 269, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 296, 299, 300], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 64, 65, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 97, 98, 101, 102, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 270, 271, 276, 278, 279, 280, 282, 291, 294], "meta": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 91, 98, 102, 109, 113, 119, 120, 121, 122, 123, 126, 127, 128, 159, 169, 177, 178, 196, 199, 200, 201, 203, 204, 207, 209, 213, 215, 269, 276, 278, 279, 280, 282, 284, 290, 291, 306], "sam_sys_input": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 139, 146], "output_request": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 91, 98, 102, 159, 276, 278, 279, 282, 304, 305, 306], "site_sys_input": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "none": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 59, 60, 63, 64, 65, 69, 71, 74, 76, 77, 78, 80, 81, 84, 86, 91, 98, 102, 107, 109, 110, 111, 113, 115, 116, 120, 121, 122, 123, 126, 128, 137, 142, 146, 147, 152, 159, 162, 164, 167, 169, 170, 171, 172, 176, 177, 178, 179, 182, 183, 184, 185, 189, 191, 192, 194, 199, 200, 201, 203, 204, 207, 209, 217, 221, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297, 304, 306], "sourc": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 48, 49, 50, 51, 54, 56, 57, 59, 60, 62, 63, 64, 65, 69, 71, 74, 76, 77, 78, 80, 81, 83, 84, 86, 87, 91, 93, 95, 98, 102, 107, 109, 110, 111, 113, 115, 116, 120, 121, 122, 123, 125, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 159, 162, 164, 165, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 182, 183, 184, 185, 189, 191, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 207, 209, 211, 212, 213, 214, 215, 217, 218, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 278, 282, 294, 297, 302, 308], "base": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 48, 49, 50, 51, 54, 56, 59, 68, 69, 70, 71, 74, 76, 77, 78, 80, 81, 83, 84, 86, 87, 91, 93, 102, 107, 109, 110, 113, 115, 116, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 159, 164, 165, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 182, 183, 184, 185, 189, 191, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 207, 209, 211, 212, 213, 214, 215, 221, 271, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297, 298, 304], "simul": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 91, 98, 102, 229, 253, 255, 258, 259, 276, 279], "gener": [3, 5, 22, 23, 49, 51, 54, 69, 74, 84, 86, 91, 111, 126, 132, 133, 134, 135, 136, 137, 139, 140, 145, 146, 156, 158, 159, 176, 177, 178, 184, 190, 199, 200, 201, 203, 204, 207, 216, 221, 262, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 297, 302, 304, 305, 306, 307, 309], "econ": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 97, 98, 99, 102, 156, 200, 203, 204, 273, 274, 279, 283, 291, 294, 296, 303, 305, 308], "initi": [3, 7, 8, 13, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 50, 51, 54, 59, 84, 91, 102, 109, 111, 113, 126, 137, 159, 177, 178, 192, 194, 196, 199, 200, 201, 218, 275, 276, 278, 279, 281, 282, 283, 294, 297], "object": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 48, 49, 50, 51, 54, 56, 57, 59, 69, 71, 74, 76, 77, 78, 80, 81, 83, 84, 86, 87, 91, 93, 98, 102, 107, 109, 110, 113, 116, 125, 126, 127, 128, 132, 136, 137, 138, 139, 140, 144, 145, 146, 147, 159, 164, 165, 168, 169, 170, 176, 179, 182, 183, 189, 191, 194, 196, 199, 200, 201, 203, 207, 209, 221, 265, 271, 276, 297], "paramet": [3, 4, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 48, 49, 50, 51, 54, 56, 57, 59, 60, 62, 63, 64, 65, 69, 71, 74, 76, 77, 78, 80, 81, 83, 84, 86, 87, 91, 93, 95, 98, 102, 107, 109, 110, 111, 113, 115, 116, 120, 121, 122, 123, 125, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 140, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 159, 162, 164, 165, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 182, 183, 184, 185, 189, 191, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 207, 209, 211, 217, 218, 219, 221, 265, 267, 269, 271], "pd": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 84, 91, 93, 98, 102, 109, 113, 126, 127, 128, 146, 159, 170, 176, 177, 178, 196, 200, 203, 204, 207, 267, 268, 269, 276, 278, 279, 282, 286, 291, 297, 305], "datafram": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 84, 91, 93, 98, 102, 109, 113, 115, 116, 120, 121, 122, 123, 125, 126, 127, 128, 146, 159, 167, 168, 169, 170, 171, 172, 176, 177, 178, 189, 196, 200, 203, 207, 276, 278, 279, 282, 286, 290], "seri": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 91, 98, 102, 120, 121, 122, 123, 146, 199, 200, 276, 278, 279], "data": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 50, 51, 59, 69, 71, 74, 76, 77, 78, 84, 86, 91, 93, 98, 102, 103, 109, 111, 113, 120, 121, 122, 123, 126, 127, 128, 137, 140, 142, 146, 158, 159, 162, 164, 166, 167, 168, 169, 171, 172, 176, 177, 178, 179, 184, 185, 192, 194, 196, 199, 200, 201, 203, 204, 207, 214, 228, 230, 246, 267, 269, 271, 276, 277, 278, 279, 281, 282, 285, 286, 290, 291, 294, 296, 297, 300, 301, 302, 303, 305, 306], "correspond": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 50, 51, 69, 71, 74, 76, 77, 78, 83, 84, 86, 91, 98, 102, 109, 111, 113, 126, 128, 132, 136, 137, 144, 147, 153, 154, 159, 176, 177, 178, 184, 196, 199, 200, 201, 204, 209, 276, 277, 278, 279, 281, 282, 286, 296], "resourc": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 51, 59, 74, 84, 86, 91, 98, 102, 107, 109, 113, 132, 137, 139, 140, 142, 146, 158, 159, 176, 177, 182, 183, 184, 185, 192, 196, 199, 200, 201, 203, 204, 208, 209, 213, 221, 252, 276, 278, 279, 282, 284, 286, 288, 291, 294, 297, 300, 302, 303, 304, 305, 306], "input": [3, 4, 5, 7, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 51, 54, 59, 69, 71, 73, 74, 76, 77, 78, 84, 85, 86, 87, 91, 93, 98, 102, 109, 110, 111, 113, 125, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 159, 165, 177, 184, 185, 194, 199, 200, 201, 203, 204, 207, 209, 211, 217, 219, 221, 226, 227, 233, 234, 239, 240, 242, 244, 245, 255, 256, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 294, 295, 296, 297, 298, 302, 304, 305, 306], "singl": [3, 4, 5, 15, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 49, 50, 51, 54, 59, 69, 78, 84, 90, 91, 98, 102, 107, 111, 126, 128, 132, 136, 137, 140, 144, 145, 146, 147, 159, 177, 184, 194, 199, 200, 201, 204, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 291, 294, 295, 298, 303], "locat": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 54, 56, 59, 64, 84, 91, 102, 109, 113, 145, 146, 179, 196, 204, 219, 276, 278, 279], "should": [3, 5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 50, 51, 54, 59, 60, 77, 78, 84, 91, 93, 98, 102, 109, 110, 111, 113, 125, 126, 128, 132, 134, 136, 137, 138, 144, 146, 159, 162, 176, 177, 178, 179, 184, 189, 194, 199, 200, 201, 204, 207, 212, 213, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 294, 296, 297, 298, 299, 300, 302, 308], "includ": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 84, 91, 93, 98, 102, 109, 113, 144, 153, 155, 159, 176, 177, 178, 184, 189, 192, 194, 196, 199, 200, 201, 204, 207, 209, 269, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 289, 290, 291, 294, 296, 297, 302, 304], "valu": [3, 4, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 49, 50, 51, 54, 57, 59, 69, 71, 74, 76, 77, 78, 80, 81, 84, 86, 91, 93, 98, 102, 107, 109, 111, 113, 126, 128, 129, 132, 133, 134, 135, 136, 137, 138, 140, 144, 145, 146, 153, 159, 162, 164, 171, 172, 176, 177, 178, 179, 182, 183, 184, 185, 189, 191, 192, 193, 194, 196, 199, 200, 201, 203, 204, 207, 209, 211, 212, 213, 214, 215, 217, 219, 232, 249, 263, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 296, 297, 298, 299, 304], "latitud": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 84, 102, 107, 109, 113, 171, 191, 192, 193, 196, 199, 200, 201, 204, 209, 279, 284, 303, 305, 306], "longitud": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 84, 102, 107, 109, 113, 171, 191, 192, 193, 196, 199, 200, 201, 204, 209, 279, 284, 303, 305, 306], "elev": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 102, 199, 200, 204, 279], "timezon": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 102, 199, 200, 204, 279], "can": [3, 5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 51, 56, 59, 74, 78, 80, 81, 84, 91, 95, 98, 102, 109, 110, 111, 113, 115, 116, 126, 137, 138, 140, 144, 145, 147, 149, 159, 162, 167, 171, 172, 177, 182, 183, 184, 185, 192, 194, 196, 199, 200, 203, 204, 207, 217, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308], "run": [3, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 48, 49, 50, 51, 54, 59, 69, 71, 74, 76, 77, 78, 86, 87, 91, 98, 102, 109, 110, 111, 113, 126, 128, 132, 145, 158, 159, 162, 164, 169, 170, 177, 178, 179, 184, 185, 189, 191, 192, 193, 199, 200, 204, 207, 209, 217, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 295, 299, 300, 301, 302, 303, 304, 307, 309], "dict": [3, 4, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 48, 49, 51, 69, 71, 74, 76, 77, 78, 84, 86, 87, 91, 93, 98, 102, 107, 109, 111, 113, 126, 128, 138, 144, 159, 162, 164, 165, 167, 171, 172, 177, 178, 182, 183, 184, 185, 191, 192, 193, 194, 196, 199, 200, 201, 203, 204, 207, 211, 215, 219, 269, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291], "site": [3, 4, 5, 8, 13, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 59, 76, 77, 78, 83, 84, 91, 98, 102, 109, 113, 137, 139, 140, 142, 145, 159, 164, 169, 179, 184, 199, 200, 214, 276, 278, 279, 282, 294, 295, 296, 297, 303], "agnost": [3, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "system": [3, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 59, 102, 221, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 306], "argument": [3, 5, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 59, 102, 111, 182, 183, 184, 185, 192, 194, 199, 200, 201, 203, 204, 207, 221, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 298, 300], "list": [3, 4, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 49, 51, 54, 69, 71, 74, 76, 77, 78, 80, 81, 83, 84, 86, 91, 93, 98, 102, 107, 109, 110, 113, 136, 144, 145, 146, 149, 150, 153, 159, 164, 165, 169, 170, 171, 172, 176, 177, 178, 179, 182, 183, 184, 185, 189, 191, 192, 193, 194, 196, 199, 200, 201, 203, 204, 207, 209, 217, 219, 267, 269, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 297, 298, 303], "request": [3, 5, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 77, 78, 79, 80, 81, 84, 91, 98, 102, 146, 147, 159, 196, 204, 274, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 289, 290, 291, 292, 294, 295, 297, 308], "output": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 59, 62, 69, 74, 79, 80, 81, 86, 91, 93, 98, 99, 102, 108, 109, 110, 111, 126, 127, 153, 155, 158, 159, 162, 164, 165, 167, 171, 172, 176, 177, 178, 183, 184, 189, 199, 200, 201, 203, 204, 206, 207, 209, 213, 215, 218, 246, 267, 269, 271, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 294, 295, 297, 300, 305, 306, 307], "e": [3, 5, 7, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 69, 71, 74, 76, 77, 78, 80, 81, 86, 91, 102, 109, 110, 113, 126, 128, 132, 134, 137, 145, 146, 159, 176, 177, 178, 179, 194, 200, 204, 207, 215, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 289, 290, 291, 294, 297, 308], "g": [3, 5, 7, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 57, 76, 77, 78, 86, 91, 102, 109, 110, 113, 126, 128, 159, 176, 177, 178, 179, 194, 204, 207, 215, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 289, 290, 291, 297], "cf_mean": [3, 5, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 102, 110, 111, 159, 200, 204, 276, 279, 281, 282, 291, 304, 305, 306], "annual_energi": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "gen_profil": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 304], "energy_yield": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "ppa_pric": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 91], "lcoe_fcr": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 91, 102, 111, 200, 204, 278, 281, 291], "option": [3, 5, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 50, 51, 54, 56, 59, 63, 64, 65, 69, 71, 75, 76, 77, 78, 84, 86, 91, 98, 102, 109, 110, 111, 113, 115, 116, 126, 128, 137, 138, 142, 144, 145, 146, 147, 159, 162, 164, 167, 169, 170, 171, 172, 177, 182, 183, 184, 185, 189, 192, 194, 199, 200, 201, 203, 204, 207, 209, 217, 218, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 299, 303, 304, 309], "set": [3, 4, 5, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 51, 56, 59, 69, 71, 74, 76, 77, 78, 80, 81, 83, 86, 91, 98, 102, 109, 110, 111, 113, 126, 127, 128, 132, 136, 144, 145, 147, 155, 159, 177, 179, 191, 192, 193, 194, 200, 204, 212, 219, 221, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 294, 295, 296, 298, 300, 301, 302, 305, 307], "specif": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 59, 69, 71, 74, 76, 77, 78, 84, 86, 91, 98, 102, 107, 109, 113, 115, 116, 136, 138, 144, 145, 146, 147, 159, 194, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 296, 298, 304, 305], "complement": [3, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 102, 276, 279], "method": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 48, 49, 50, 51, 54, 56, 59, 69, 71, 74, 76, 77, 78, 80, 81, 83, 84, 86, 87, 91, 93, 95, 98, 102, 107, 109, 110, 113, 115, 116, 122, 123, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 159, 164, 165, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 182, 183, 184, 185, 189, 191, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 207, 209, 211, 212, 215, 220, 268, 271, 276, 279, 286, 290, 291, 296, 297], "attribut": [3, 4, 5, 7, 8, 13, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 49, 51, 57, 59, 60, 69, 71, 74, 76, 77, 78, 80, 81, 83, 84, 86, 87, 91, 93, 97, 98, 102, 107, 109, 110, 113, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 146, 147, 159, 162, 164, 165, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 182, 183, 184, 185, 189, 191, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 205, 209, 211, 212, 213, 214, 215, 271, 276, 278, 279, 285, 291], "properti": [3, 4, 7, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 49, 51, 59, 69, 71, 74, 76, 77, 78, 83, 84, 86, 91, 93, 98, 102, 107, 109, 110, 113, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 146, 159, 162, 164, 165, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 182, 183, 184, 185, 189, 191, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 209, 279, 280, 285], "get": [3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 48, 49, 51, 69, 71, 74, 76, 77, 78, 83, 84, 86, 91, 93, 98, 102, 107, 109, 113, 115, 116, 126, 127, 136, 140, 149, 159, 165, 176, 177, 178, 179, 182, 183, 184, 185, 189, 191, 192, 193, 196, 198, 199, 200, 201, 203, 204, 209, 212, 217, 271, 274, 286, 291, 294, 297, 306], "number": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 54, 59, 64, 76, 77, 78, 80, 81, 83, 84, 91, 93, 98, 102, 129, 137, 142, 144, 145, 147, 162, 164, 169, 176, 177, 178, 179, 184, 189, 196, 198, 199, 200, 201, 204, 207, 209, 221, 272, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297, 304], "thi": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 50, 51, 54, 57, 59, 69, 71, 74, 76, 77, 78, 79, 83, 84, 86, 91, 93, 98, 102, 109, 110, 111, 113, 122, 123, 125, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 149, 152, 153, 154, 158, 159, 165, 176, 177, 178, 179, 184, 194, 196, 198, 199, 200, 201, 203, 204, 207, 208, 211, 212, 215, 217, 219, 221, 269, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308], "static": [3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 69, 71, 74, 76, 77, 78, 86, 91, 93, 98, 102, 109, 113, 167, 171, 172, 179, 184, 198, 199, 200, 201, 207, 209], "get_sam_r": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "arg": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 91, 93, 98, 102, 109, 113, 196, 200, 204, 268, 274, 275, 284, 291, 298], "kwarg": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 59, 86, 91, 98, 102, 109, 113, 164, 167, 171, 172, 182, 183, 184, 185, 192, 194, 199, 200, 201, 203, 204, 268, 276, 279, 291], "iter": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 69, 71, 74, 76, 77, 78, 80, 81, 83, 84, 86, 91, 98, 102, 136, 137, 140, 149, 150, 153, 155, 271, 278, 279], "year": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 69, 91, 93, 95, 98, 102, 105, 109, 110, 111, 146, 177, 200, 204, 217, 273, 274, 276, 278, 279, 283, 286, 291, 294, 297, 298, 308], "file": [3, 5, 7, 8, 13, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 50, 51, 69, 71, 74, 76, 77, 78, 84, 86, 91, 98, 99, 102, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 126, 127, 139, 146, 158, 159, 162, 164, 167, 168, 169, 170, 171, 172, 176, 177, 178, 182, 183, 184, 185, 189, 191, 192, 193, 194, 196, 199, 200, 201, 203, 204, 207, 209, 213, 218, 219, 233, 234, 241, 242, 246, 267, 269, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 294, 295, 296, 298, 303, 305, 306, 307, 308], "drop_leap": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 91, 98, 102, 279], "drop": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 91, 98, 102, 136, 199, 201, 279], "feb": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 152], "29th": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "from": [3, 4, 5, 7, 8, 13, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 54, 59, 62, 69, 71, 74, 76, 77, 78, 80, 81, 84, 86, 91, 93, 98, 102, 107, 108, 109, 110, 111, 113, 126, 127, 132, 133, 134, 135, 136, 137, 138, 139, 142, 145, 146, 147, 159, 164, 169, 172, 176, 177, 178, 179, 184, 185, 190, 191, 192, 193, 194, 199, 200, 201, 203, 204, 206, 207, 209, 211, 219, 271, 273, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 297, 298, 300, 301, 303, 304, 305, 306, 309], "df": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 84, 91, 98, 102, 109, 113, 178, 303], "time": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 54, 78, 91, 98, 102, 109, 113, 126, 127, 144, 145, 146, 147, 159, 164, 169, 176, 177, 178, 179, 199, 200, 201, 204, 209, 221, 267, 269, 276, 278, 279, 288, 291, 297, 309], "index": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 50, 51, 80, 81, 83, 84, 91, 98, 102, 107, 109, 113, 126, 127, 128, 129, 146, 153, 154, 155, 159, 176, 177, 178, 179, 184, 196, 198, 199, 200, 201, 204, 209, 276, 279], "an": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 49, 51, 54, 57, 59, 69, 71, 74, 76, 77, 78, 84, 86, 91, 93, 102, 107, 109, 113, 122, 123, 125, 126, 132, 133, 134, 135, 136, 137, 138, 140, 144, 145, 146, 147, 149, 150, 153, 154, 155, 159, 162, 177, 184, 185, 194, 196, 198, 199, 200, 201, 204, 207, 209, 213, 214, 215, 217, 269, 271, 275, 276, 278, 279, 282, 283, 286, 290, 291, 294, 295, 296, 300, 302, 304, 305, 306], "contain": [3, 7, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 49, 51, 69, 71, 74, 76, 77, 78, 84, 86, 91, 102, 107, 115, 116, 120, 121, 122, 123, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 144, 145, 146, 147, 149, 159, 164, 167, 168, 170, 171, 172, 177, 184, 185, 191, 192, 193, 194, 196, 199, 200, 201, 204, 207, 209, 217, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 297, 298, 300], "panda": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 86, 91, 93, 98, 102, 109, 113, 115, 116, 146, 167, 168, 169, 170, 171, 172, 189, 199, 200, 204, 207, 265, 276, 290, 291], "month": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 74, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155], "dai": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 91, 98, 102, 279], "return": [3, 4, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 48, 49, 51, 57, 59, 60, 69, 71, 74, 76, 77, 78, 80, 81, 83, 84, 86, 91, 93, 95, 98, 102, 107, 109, 110, 113, 115, 116, 120, 121, 122, 123, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 139, 140, 142, 145, 147, 149, 150, 151, 152, 153, 154, 155, 159, 164, 165, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 182, 183, 184, 185, 189, 191, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 207, 209, 211, 212, 215, 217, 219, 221, 267, 276, 278, 279, 286, 290, 291, 294, 297, 308], "all": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 69, 71, 74, 76, 77, 78, 80, 81, 84, 86, 91, 98, 102, 109, 110, 111, 113, 115, 116, 125, 126, 128, 132, 136, 137, 142, 144, 145, 147, 149, 159, 162, 164, 169, 170, 171, 177, 179, 182, 183, 184, 185, 194, 196, 199, 200, 201, 203, 204, 207, 209, 212, 215, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 297, 298, 300, 302, 305, 306], "februari": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 297], "timestep": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 109, 113, 179, 297], "remov": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 69, 71, 74, 76, 77, 78, 80, 81, 84, 86, 91, 98, 102, 125, 155, 189, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297], "ensure_res_len": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "arr": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 179, 199, 200, 201], "time_index": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 86, 91, 98, 102, 109, 113, 159, 177, 178, 276, 279, 306], "ensur": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 91, 98, 102, 111, 136, 145, 191, 192, 193, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 300], "ha": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 69, 71, 74, 76, 77, 78, 84, 86, 91, 93, 102, 126, 128, 147, 158, 159, 177, 178, 196, 204, 207, 275, 276, 279, 290, 291, 294, 297, 306], "constant": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 132, 200, 203, 204, 291], "step": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 86, 91, 102, 109, 110, 111, 113, 136, 159, 162, 164, 165, 167, 177, 199, 200, 201, 204, 207, 219, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 298, 300, 302], "onli": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 51, 59, 84, 91, 98, 102, 109, 113, 126, 128, 134, 137, 145, 147, 159, 177, 185, 194, 198, 199, 200, 201, 203, 204, 207, 215, 217, 219, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 294, 295, 297, 299, 300, 302, 306, 308], "cover": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "365": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 91, 98, 102], "leap": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 91, 98, 102, 279], "If": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 50, 51, 69, 71, 74, 76, 77, 78, 80, 81, 84, 86, 91, 98, 102, 109, 110, 111, 113, 115, 116, 122, 123, 126, 128, 132, 136, 137, 139, 146, 147, 152, 159, 162, 169, 176, 177, 178, 179, 194, 199, 200, 201, 204, 207, 217, 219, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 292, 294, 297, 298, 300, 308], "last": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 69, 71, 74, 76, 77, 78, 80, 81, 86, 91, 98, 102], "ndarrai": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 84, 93, 95, 107, 109, 113, 115, 128, 159, 167, 168, 171, 172, 176, 179, 184, 185, 189, 191, 192, 193, 196, 199, 200, 201, 204, 209, 267, 297], "arrai": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 54, 56, 62, 64, 65, 91, 98, 102, 107, 109, 113, 126, 136, 137, 140, 145, 147, 159, 176, 177, 178, 179, 184, 185, 191, 192, 193, 196, 199, 200, 201, 204, 209, 267, 269, 302, 303, 304, 305, 306], "truncat": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 133, 134, 135], "datatimeindex": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "associ": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 84, 102, 109, 189, 196, 198, 199, 200, 201, 204, 207, 275, 279, 283, 290, 291, 301, 303], "us": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 49, 50, 51, 54, 57, 59, 60, 69, 71, 74, 76, 77, 78, 84, 86, 91, 93, 95, 98, 102, 107, 109, 110, 111, 113, 119, 126, 128, 132, 134, 137, 138, 139, 140, 144, 145, 146, 147, 158, 159, 162, 164, 167, 169, 171, 172, 176, 177, 178, 182, 183, 184, 185, 189, 191, 192, 193, 194, 196, 199, 200, 203, 204, 207, 209, 212, 218, 221, 266, 267, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 294, 295, 296, 298, 299, 300, 302, 303, 304, 305, 307, 308], "check": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 69, 71, 74, 76, 77, 78, 86, 87, 93, 109, 113, 115, 116, 122, 123, 127, 147, 159, 162, 189, 191, 192, 193, 199, 200, 201, 233, 234, 239, 274, 283, 285, 294, 297, 300, 308], "frequenc": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 65, 86], "ar": [3, 4, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 49, 51, 59, 69, 71, 74, 76, 77, 78, 84, 86, 91, 98, 102, 109, 110, 111, 113, 115, 116, 120, 121, 126, 128, 132, 133, 134, 135, 136, 137, 139, 142, 144, 146, 149, 151, 155, 159, 162, 177, 191, 192, 193, 194, 196, 199, 200, 204, 207, 209, 212, 215, 219, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294, 296, 297, 298, 300, 302, 305, 306, 308], "make_datetim": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "i": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 49, 50, 51, 54, 59, 60, 63, 64, 65, 69, 71, 74, 76, 77, 78, 80, 81, 83, 84, 86, 91, 93, 98, 102, 107, 109, 110, 111, 113, 115, 116, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 151, 152, 154, 158, 159, 162, 169, 176, 177, 178, 179, 182, 183, 184, 185, 189, 192, 194, 196, 198, 199, 200, 201, 203, 204, 207, 208, 211, 215, 219, 221, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 297, 298, 299, 300, 302, 303, 304, 306, 308], "datetim": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 91, 98, 102, 109, 113], "dt": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "accessor": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "classmethod": [3, 4, 5, 7, 8, 13, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 49, 51, 83, 84, 87, 91, 98, 102, 109, 113, 115, 116, 125, 164, 167, 169, 170, 171, 172, 176, 179, 184, 189, 191, 192, 193, 199, 200, 201, 204, 209, 211, 212, 215], "get_time_interv": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "interv": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "must": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 51, 59, 91, 93, 102, 109, 110, 136, 138, 140, 144, 146, 150, 152, 153, 154, 155, 159, 176, 177, 178, 184, 185, 199, 200, 201, 203, 204, 207, 209, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 297, 298, 300, 302, 304], "have": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 91, 92, 98, 102, 111, 126, 128, 136, 137, 146, 147, 159, 176, 177, 178, 199, 200, 201, 203, 204, 207, 211, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 294, 297, 298, 300, 305, 306, 308], "access": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 91, 98, 102, 204, 276, 291, 297, 299, 303, 306], "ad": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 91, 98, 102, 109, 113, 146, 159, 169, 194, 199, 200, 201, 207, 279, 282, 290, 296, 300], "time_interv": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "int": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 51, 54, 59, 69, 71, 74, 76, 77, 78, 83, 84, 86, 91, 98, 102, 107, 109, 113, 115, 116, 136, 137, 138, 142, 144, 145, 146, 147, 154, 162, 164, 167, 169, 176, 177, 178, 179, 184, 185, 189, 194, 196, 198, 199, 200, 201, 204, 207, 209, 217, 221, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "indic": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 83, 91, 98, 102, 109, 113, 115, 116, 128, 144, 145, 147, 153, 155, 196, 207, 209, 276, 278, 279, 290], "over": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 74, 91, 102, 110, 275, 279, 294, 297], "which": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 51, 54, 59, 63, 64, 65, 74, 76, 77, 78, 84, 91, 98, 102, 111, 120, 121, 122, 123, 132, 133, 134, 135, 136, 137, 144, 146, 147, 159, 177, 179, 183, 194, 196, 200, 203, 204, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297, 298, 302, 303], "hour": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 74, 78, 144, 145, 146, 147, 153, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 297, 308], "count": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 80, 81, 129, 144, 147, 199, 304], "so": [3, 4, 8, 13, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 51, 69, 71, 74, 76, 77, 78, 86, 98, 102, 109, 113, 126, 128, 144, 149, 189, 204, 276, 279, 280, 283, 291, 297, 298, 299, 300, 304], "0": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 54, 56, 59, 63, 80, 81, 84, 86, 91, 98, 102, 113, 115, 116, 126, 128, 129, 136, 138, 144, 145, 154, 155, 177, 179, 184, 192, 194, 199, 200, 201, 204, 207, 221, 268, 276, 278, 279, 280, 286, 290, 291, 294, 297, 299, 303, 304, 305, 306, 308], "5": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 54, 63, 126, 128, 154, 194, 200, 204, 207, 209, 276, 280, 290, 291, 294, 299, 303, 304, 308], "2": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 51, 54, 69, 71, 74, 76, 77, 78, 86, 91, 102, 113, 129, 133, 134, 135, 137, 140, 189, 194, 196, 198, 199, 200, 201, 204, 207, 211, 276, 278, 279, 290, 291, 297, 303, 309], "outputs_to_utc_arr": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "convert": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 54, 86, 137, 149, 151, 152, 153, 154, 155, 159, 194, 217, 284], "like": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 54, 69, 71, 74, 76, 77, 78, 84, 86, 91, 98, 102, 126, 128, 132, 134, 137, 140, 159, 204, 215, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 297, 299, 305, 308], "utc": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 91, 102, 113, 204, 276, 278, 279], "np": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 54, 59, 93, 95, 107, 109, 113, 128, 136, 145, 147, 159, 176, 179, 184, 196, 199, 200, 201, 204, 209, 304, 305, 306], "collect_output": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "output_lookup": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "collect": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 104, 108, 109, 110, 111, 119, 139, 177, 204, 212, 215, 223, 224, 225, 267, 273, 274, 281, 283, 286, 291, 294, 298, 308], "timeseri": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 109, 113, 176, 179, 184, 199, 200, 276], "save": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 69, 71, 74, 76, 77, 78, 86, 126, 159, 164, 167, 169, 170, 171, 172, 177, 178, 179, 184, 189, 209, 276, 280, 282, 284, 286], "self": [3, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 56, 59, 80, 81, 84, 91, 98, 102, 129, 132, 200, 276], "lookup": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 179, 191, 192, 193, 196, 204], "dictionari": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 48, 49, 51, 69, 71, 74, 76, 77, 78, 84, 86, 91, 98, 102, 109, 111, 113, 115, 116, 126, 128, 138, 139, 144, 145, 146, 159, 162, 164, 165, 182, 183, 184, 185, 191, 192, 193, 194, 199, 200, 201, 203, 204, 207, 211, 215, 219, 269, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 298, 303], "map": [3, 5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 50, 51, 69, 71, 74, 76, 77, 78, 84, 86, 91, 98, 102, 111, 115, 116, 126, 128, 159, 167, 184, 185, 189, 192, 194, 196, 199, 200, 201, 204, 207, 208, 209, 211, 213, 214, 215, 243, 276, 278, 279, 280, 281, 282, 290, 291], "kei": [3, 4, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 49, 51, 69, 71, 74, 76, 77, 78, 80, 81, 84, 86, 91, 93, 98, 102, 109, 111, 113, 138, 139, 144, 145, 146, 159, 162, 177, 178, 189, 191, 192, 193, 199, 200, 201, 203, 204, 207, 211, 213, 215, 219, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 296, 297, 298, 304, 306], "special": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 183, 302], "assign_input": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "assign": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 54, 298], "execut": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 69, 83, 91, 102, 159, 177, 204, 207, 229, 231, 243, 247, 248, 253, 254, 258, 259, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 294, 295, 296, 297, 299, 308], "call": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 51, 69, 71, 74, 76, 77, 78, 86, 91, 102, 132, 145, 146, 147, 159, 207, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 297, 298, 300, 307], "rais": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 69, 71, 74, 76, 77, 78, 80, 81, 86, 109, 115, 116, 129, 132, 139, 159, 162, 199, 200, 201, 219, 300], "samexecutionerror": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "error": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 69, 71, 74, 76, 77, 78, 86, 115, 116, 139, 144, 146, 159, 176, 177, 178, 179, 189, 194, 204, 222, 226, 228, 229, 230, 231, 233, 239, 241, 242, 243, 244, 248, 249, 250, 252, 253, 255, 257, 258, 259, 260, 262, 263, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297, 300, 306], "avail": [3, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 76, 77, 78, 91, 102, 107, 109, 113, 115, 116, 144, 147, 159, 169, 171, 172, 177, 184, 189, 191, 192, 193, 199, 200, 201, 204, 207, 209, 212, 274, 276, 278, 279, 282, 286, 290, 291, 297, 305, 306], "genericsystem": [3, 4, 21, 25, 26, 28, 29, 41], "opt": [3, 4, 8, 13, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "hostedtoolcach": [3, 4, 8, 13, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "python": [3, 4, 8, 13, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 69, 71, 74, 76, 77, 78, 86, 93, 109, 113, 177, 200, 204, 276, 286, 288, 291, 294, 297, 308], "3": [3, 4, 8, 13, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 51, 102, 113, 133, 135, 144, 149, 194, 204, 212, 276, 291, 294, 297, 303, 308], "8": [3, 4, 8, 13, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 79, 294, 297, 303, 304, 308], "18": [3, 4, 8, 13, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 113, 140, 275, 303], "x64": [3, 4, 8, 13, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "lib": [3, 4, 8, 13, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "python3": [3, 4, 8, 13, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "packag": [3, 4, 8, 13, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 93, 103, 109, 113, 265, 294, 297, 308], "cpython": [3, 4, 8, 13, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "38": [3, 4, 8, 13, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 303], "x86_64": [3, 4, 8, 13, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 297], "linux": [3, 4, 8, 13, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 297], "gnu": [3, 4, 8, 13, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "attr_dict": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "heirarch": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "_attr_dict": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "variabl": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 54, 59, 69, 71, 74, 76, 77, 78, 80, 81, 84, 86, 91, 93, 95, 98, 102, 109, 113, 126, 128, 132, 133, 134, 135, 200, 203, 204, 271, 276, 278, 279, 280, 291, 297, 306], "group": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 91, 102, 109, 110, 111, 113, 164, 165, 169, 276, 278, 279, 281, 297, 306], "lowest": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 207, 290], "level": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 69, 71, 74, 76, 77, 78, 84, 86, 95, 109, 113, 115, 116, 207, 283, 294, 296], "name": [3, 4, 5, 7, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 69, 71, 74, 76, 77, 78, 84, 86, 91, 93, 98, 102, 109, 110, 111, 113, 125, 126, 127, 128, 144, 149, 150, 151, 152, 153, 154, 155, 159, 162, 164, 165, 167, 169, 171, 176, 177, 178, 184, 185, 191, 192, 193, 194, 196, 199, 200, 201, 203, 204, 207, 209, 211, 212, 213, 214, 215, 218, 267, 269, 271, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 294, 297, 298, 300, 304, 308], "default": [3, 4, 5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 51, 63, 64, 65, 69, 71, 74, 76, 77, 78, 80, 81, 84, 86, 91, 98, 102, 107, 109, 110, 111, 113, 115, 116, 126, 128, 137, 138, 142, 144, 145, 159, 162, 164, 167, 169, 170, 171, 172, 177, 182, 183, 184, 185, 189, 192, 194, 199, 200, 201, 204, 206, 207, 209, 217, 227, 240, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 299, 307], "input_list": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "_input": [3, 4, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 86], "wrapper": [4, 59, 268], "framework": [4, 49, 56, 59, 68, 70, 71, 80, 81, 85, 126, 128, 159, 176, 178, 181, 182, 183, 184, 185, 196, 197, 200, 202, 203, 204, 208, 209, 270, 294, 297], "raise_warn": 4, "fals": [4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 51, 64, 74, 80, 81, 86, 91, 98, 102, 107, 109, 111, 113, 115, 116, 126, 128, 159, 164, 177, 178, 184, 185, 189, 191, 192, 193, 194, 200, 204, 207, 267, 276, 277, 278, 279, 280, 281, 282, 286, 290, 291, 297], "flat": [4, 176, 200], "bool": [4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 64, 69, 71, 86, 91, 98, 102, 107, 109, 111, 113, 115, 116, 126, 127, 128, 144, 147, 159, 164, 177, 178, 184, 185, 189, 191, 192, 193, 194, 199, 200, 201, 204, 207, 218, 267, 276, 277, 278, 279, 280, 281, 282, 286, 290, 291], "flag": [4, 27, 30, 33, 34, 35, 36, 49, 51, 69, 71, 77, 78, 80, 81, 86, 91, 98, 102, 107, 109, 111, 113, 115, 116, 126, 144, 159, 164, 177, 178, 184, 185, 189, 191, 192, 193, 194, 199, 200, 201, 204, 207, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 298, 300, 306], "warn": [4, 49, 69, 71, 74, 76, 77, 78, 86, 87, 134, 136, 137, 147, 199, 200, 201, 225, 227, 232, 234, 238, 240, 245, 246, 247, 251, 254, 256, 257, 261, 264, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "becaus": [4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 146, 297], "thei": [4, 5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 91, 102, 126, 128, 144, 150, 177, 191, 192, 193, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "found": [4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 59, 69, 71, 74, 76, 77, 78, 84, 86, 93, 107, 127, 137, 159, 209, 219, 283, 297, 300], "factori": 5, "util": [5, 52, 76, 77, 78, 89, 91, 98, 100, 102, 104, 105, 118, 133, 134, 135, 157, 161, 174, 175, 178, 186, 187, 207, 278, 279, 290, 294, 297, 298, 307], "handler": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 102, 182, 183, 188, 196, 199, 200, 201, 203, 207, 221, 223, 224, 235, 236, 237, 279, 306], "res_fil": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 84, 91, 98, 102, 284, 303, 304, 305, 306], "project_point": [5, 51, 91, 98, 102, 109, 113, 276, 277, 278, 279, 303, 304, 305, 306], "gid_map": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 102, 276, 279], "lr_res_fil": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 102], "nn_map": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "bias_correct": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 102, 276, 279], "str": [5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 48, 49, 51, 59, 69, 71, 74, 76, 77, 78, 80, 81, 84, 86, 91, 93, 98, 102, 107, 109, 110, 111, 113, 115, 116, 125, 126, 127, 128, 137, 142, 144, 151, 152, 154, 159, 162, 164, 165, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 182, 183, 184, 185, 189, 191, 192, 193, 194, 196, 199, 200, 201, 203, 204, 207, 209, 211, 212, 217, 218, 219, 267, 269, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "full": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 77, 78, 91, 102, 109, 113, 149, 152, 159, 177, 178, 184, 185, 191, 192, 193, 194, 196, 198, 199, 200, 201, 204, 207, 267, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 295, 297, 299, 308], "path": [5, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 51, 69, 71, 74, 76, 77, 78, 84, 86, 91, 98, 102, 109, 111, 113, 115, 116, 159, 162, 164, 167, 169, 170, 171, 172, 177, 184, 189, 191, 192, 193, 196, 204, 207, 218, 219, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 297, 303, 304, 305, 306], "retriev": [5, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 109, 113, 176, 297, 301, 306], "config": [5, 7, 8, 13, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 59, 91, 98, 102, 109, 113, 115, 116, 139, 146, 159, 162, 165, 219, 221, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308], "projectpoint": [5, 83, 91, 98, 102, 249, 277, 284, 303, 304, 305, 306], "project": [5, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 51, 72, 82, 83, 84, 91, 98, 102, 107, 204, 219, 221, 273, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 294, 295, 296, 297, 301, 308], "point": [5, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 59, 72, 82, 83, 84, 91, 98, 102, 126, 128, 132, 159, 164, 165, 167, 177, 184, 185, 189, 196, 204, 207, 209, 221, 273, 274, 276, 277, 278, 279, 280, 282, 283, 286, 290, 291, 294, 295, 296, 297, 305, 306, 308], "instanc": [5, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 69, 71, 74, 76, 77, 78, 83, 84, 86, 91, 98, 102, 107, 109, 113, 120, 121, 122, 123, 126, 128, 129, 144, 147, 191, 192, 193, 271, 297], "technologi": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 49, 51, 84, 87, 91, 98, 102, 109, 113, 200, 203, 204, 276, 279, 291, 305], "forc": [5, 159, 194, 282, 287], "interpret": [5, 49, 51, 276], "type": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 54, 83, 84, 91, 98, 102, 109, 113, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 162, 165, 194, 198, 199, 200, 201, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 292, 297], "exampl": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 84, 91, 102, 111, 113, 126, 128, 132, 137, 146, 149, 151, 152, 154, 159, 177, 194, 204, 207, 211, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 296, 297, 298, 300, 304, 305, 306, 307, 308], "pvwatt": [5, 27, 84, 102, 279, 295], "tcsmolten": 5, "mean": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 69, 71, 74, 76, 77, 78, 86, 91, 102, 105, 109, 110, 113, 121, 137, 146, 159, 169, 170, 176, 177, 178, 179, 184, 194, 199, 200, 201, 204, 207, 212, 276, 278, 279, 282, 286, 290, 291, 304, 305], "expect": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 84, 86, 98, 102, 113, 136, 146, 192, 199, 200, 201, 219, 279], "solarresourc": [5, 27, 28, 33, 34, 35, 36, 38], "nsrdb": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 86, 91, 98, 102, 203, 204, 279, 291, 294, 297, 300, 303, 305, 306, 308], "tupl": [5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 54, 57, 69, 71, 74, 76, 77, 78, 80, 81, 84, 86, 91, 98, 102, 107, 109, 110, 113, 126, 128, 129, 132, 133, 134, 135, 159, 182, 183, 184, 185, 191, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 207, 209, 276, 278, 279, 280, 282, 290, 291], "uniqu": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 84, 102, 115, 116, 127, 144, 159, 177, 178, 196, 199, 200, 201, 204, 207, 276, 279, 282, 286, 291, 298, 300], "integ": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 69, 71, 74, 76, 77, 78, 84, 86, 91, 98, 102, 138, 144, 145, 147, 196, 207, 209, 217, 276, 278, 279, 290], "gid": [5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 49, 50, 51, 84, 91, 98, 102, 109, 113, 115, 116, 137, 142, 159, 176, 177, 184, 185, 189, 196, 198, 199, 200, 201, 203, 204, 207, 209, 267, 276, 277, 278, 279, 282, 286, 290, 291, 296, 303, 305, 306], "enabl": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 102, 276, 279, 297, 306], "user": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 59, 69, 71, 74, 76, 77, 78, 79, 86, 91, 98, 102, 145, 146, 147, 162, 194, 204, 217, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 294, 296, 297, 299, 300, 303, 304, 305, 308], "non": [5, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 84, 98, 102, 113, 136, 137, 189, 199, 200, 201, 204, 207, 267, 276, 279, 290, 291, 297], "pre": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 50, 51, 69, 71, 74, 76, 77, 78, 84, 91, 98, 102, 109, 113, 159, 165, 184, 185, 191, 192, 193, 196, 199, 200, 201, 204, 276, 278, 279, 282, 291], "extract": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 69, 71, 74, 76, 77, 78, 84, 87, 91, 98, 102, 109, 110, 113, 126, 127, 140, 159, 165, 173, 175, 176, 177, 178, 184, 185, 192, 194, 199, 200, 201, 204, 276, 278, 279, 280, 282, 284, 286, 291, 294], "low": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 102, 279], "resolut": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 86, 102, 109, 113, 158, 159, 184, 185, 196, 198, 199, 200, 201, 204, 209, 276, 279, 282, 291, 294, 301, 302], "dynam": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 102, 279, 294, 297], "interpol": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 102, 279], "nomin": [5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 91, 98, 102, 203, 204, 279, 291], "need": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 59, 84, 91, 98, 102, 109, 111, 113, 115, 116, 159, 207, 274, 275, 278, 279, 281, 282, 294, 297, 298, 303, 304, 305, 308], "same": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 59, 84, 91, 102, 107, 109, 126, 128, 137, 140, 146, 159, 176, 177, 178, 193, 200, 203, 204, 207, 221, 276, 278, 279, 280, 282, 286, 290, 291, 298, 300, 302], "format": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 69, 71, 74, 76, 77, 78, 84, 86, 91, 93, 98, 102, 107, 113, 125, 128, 149, 150, 151, 153, 154, 155, 182, 183, 184, 185, 192, 193, 199, 200, 201, 203, 204, 207, 217, 252, 276, 279, 290, 291, 294], "resource_fil": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 102, 278, 279, 297], "both": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 102, 126, 127, 128, 207, 211, 276, 279, 280, 290, 294, 304, 305, 306, 308], "handl": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 54, 76, 77, 78, 79, 86, 91, 98, 102, 107, 109, 110, 112, 113, 114, 116, 126, 128, 159, 164, 165, 176, 182, 183, 189, 191, 192, 193, 203, 238, 268, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 302], "rex": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 51, 102, 107, 113, 183, 221, 265, 276, 279, 294, 297, 304, 305, 306], "windresourc": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 102, 279], "1d": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 65, 102, 107, 109, 113, 179, 184, 185, 196, 198, 199, 200, 201, 204, 276, 279, 291], "nearest": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 84, 243, 276], "neighbor": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 84, 189, 204, 207, 209, 243, 276, 290, 291], "spatial": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 109, 113, 177, 204, 267, 286, 294, 296], "For": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 59, 77, 78, 84, 91, 102, 111, 126, 128, 132, 137, 146, 159, 177, 194, 204, 207, 211, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 297, 302, 305, 306], "detail": [5, 12, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 102, 132, 134, 137, 138, 147, 204, 274, 276, 279, 291, 294, 298, 306], "see": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 91, 102, 109, 113, 132, 134, 136, 137, 138, 145, 146, 147, 159, 189, 194, 204, 207, 212, 274, 276, 278, 279, 282, 290, 291, 294, 296, 297, 298, 305, 306], "multiresolutionresourc": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "docstr": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51], "csv": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 84, 91, 98, 102, 115, 116, 159, 162, 164, 169, 170, 171, 172, 189, 203, 204, 207, 275, 276, 277, 278, 279, 282, 284, 290, 291, 296, 300, 303], "filepath": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 86, 91, 98, 102, 109, 110, 113, 126, 127, 159, 165, 176, 177, 178, 182, 183, 184, 185, 192, 199, 200, 201, 203, 204, 207, 209, 276, 277, 279, 280, 282, 284, 286, 290, 291, 297, 305, 306], "wind": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 63, 64, 65, 74, 84, 86, 102, 122, 123, 126, 127, 128, 132, 133, 134, 135, 136, 137, 139, 140, 142, 156, 158, 159, 188, 189, 199, 200, 201, 207, 221, 244, 245, 276, 279, 280, 282, 290, 294, 295, 305, 306], "solar": [5, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 74, 86, 102, 109, 113, 122, 123, 126, 127, 128, 158, 159, 200, 207, 276, 279, 280, 282, 290, 294, 295], "bia": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 102, 179, 276, 279], "correct": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 51, 80, 102, 276, 279, 294, 306, 308], "tabl": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 84, 91, 102, 115, 126, 159, 164, 170, 171, 172, 176, 177, 178, 179, 189, 200, 204, 207, 213, 276, 278, 279, 280, 282, 286, 290, 291, 294, 300, 302], "column": [5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 84, 91, 93, 98, 102, 109, 113, 119, 120, 121, 122, 123, 125, 126, 127, 128, 159, 164, 165, 170, 171, 172, 176, 177, 178, 179, 189, 196, 198, 199, 200, 201, 203, 204, 206, 207, 209, 213, 214, 215, 276, 278, 279, 280, 282, 284, 286, 290, 291, 296, 303], "function": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 71, 74, 76, 77, 78, 80, 81, 83, 84, 86, 89, 93, 94, 100, 102, 104, 105, 108, 118, 119, 131, 133, 134, 135, 137, 139, 142, 145, 146, 147, 148, 149, 152, 153, 157, 161, 174, 186, 187, 210, 216, 219, 220, 266, 276, 279, 294, 297], "field": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 102, 129, 211, 215, 276, 279, 298], "match": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 91, 93, 98, 102, 126, 128, 137, 142, 145, 149, 150, 151, 152, 153, 154, 155, 159, 184, 200, 204, 207, 211, 212, 213, 276, 278, 279, 280, 282, 290, 291], "true": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 69, 71, 74, 91, 98, 102, 109, 111, 113, 115, 116, 126, 132, 134, 135, 144, 147, 152, 159, 177, 178, 194, 199, 200, 201, 204, 207, 276, 277, 279, 280, 281, 282, 286, 290, 291, 297, 306], "regardless": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 102, 207, 276, 277, 279, 290], "windspe": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 91, 98, 102, 276, 279, 304], "ghi": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 102, 276, 279, 297], "dni": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 91, 98, 102, 276, 279], "dhi": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 102, 276, 279], "depend": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 77, 78, 102, 109, 113, 115, 116, 136, 276, 279, 294, 308], "former": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 102, 276, 279], "pv": [5, 12, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 86, 87, 102, 276, 279, 294], "csp": [5, 17, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 102, 276, 279, 294], "latter": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 102, 204, 276, 279, 291], "ani": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 49, 51, 59, 69, 71, 74, 76, 77, 78, 86, 91, 98, 102, 126, 128, 133, 134, 135, 137, 147, 151, 153, 158, 159, 177, 184, 200, 204, 207, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 294, 296, 297, 300, 307, 308], "requir": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 49, 50, 51, 69, 71, 74, 76, 77, 78, 86, 91, 93, 98, 99, 102, 111, 113, 138, 144, 145, 159, 164, 182, 183, 184, 185, 191, 192, 200, 203, 204, 207, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 288, 290, 291, 295, 297, 304], "linear": [5, 10, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 102, 134, 135, 137, 276, 279], "you": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 91, 102, 111, 113, 115, 116, 132, 159, 177, 194, 204, 207, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 294, 296, 297, 298, 299, 300, 305, 306, 308], "scalar": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 93, 102, 113, 184, 199, 200, 203, 204, 207, 276, 279, 291], "adder": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 102, 109, 113, 276, 279], "basi": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 102, 145, 276, 279, 296], "appli": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 51, 59, 80, 81, 91, 93, 102, 115, 116, 126, 128, 132, 133, 134, 135, 137, 138, 162, 176, 177, 178, 194, 199, 200, 201, 203, 204, 207, 276, 278, 279, 280, 285, 286, 290, 291, 302], "By": [5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 91, 102, 110, 111, 126, 128, 137, 142, 145, 159, 162, 177, 194, 204, 207, 217, 274, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 289, 290, 291, 307], "re": [5, 49, 50, 102, 142, 177, 178, 198, 199, 200, 201, 204, 209, 274, 277, 279, 291, 297, 300, 304], "samresourc": [5, 109, 113, 221], "pass": [5, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 59, 84, 91, 98, 102, 109, 146, 149, 204, 275, 276, 283, 291, 294, 304], "implement": [6, 93, 132, 137, 141, 200, 204, 291], "abstract": [7, 25, 26, 27, 29, 132, 133, 134, 135, 178, 182, 185, 198], "config_file_nam": 7, "json": [7, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 69, 71, 74, 76, 77, 78, 84, 86, 87, 91, 98, 102, 109, 113, 115, 116, 146, 159, 207, 241, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 294, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308], "pysam_modul": [7, 8, 13], "pvwattsv5": [7, 13, 24, 102, 305, 306], "geotherm": [7, 8, 51, 84, 91, 102, 159, 276, 278, 279, 282, 294], "etc": [7, 50, 51, 69, 71, 74, 76, 77, 78, 86, 90, 91, 102, 159, 194, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "init_default_pysam_obj": [7, 8, 13], "defualt": [7, 8, 13], "pysm": [7, 8, 13], "abstractdefaultfromconfigfil": [8, 13], "lcoe": [9, 21, 23, 45, 49, 69, 90, 91, 93, 95, 158, 164, 165, 172, 200, 203, 204, 207, 278, 290, 291, 302], "calcul": [9, 15, 22, 23, 27, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 49, 51, 91, 92, 93, 95, 98, 102, 110, 126, 128, 136, 137, 139, 140, 142, 145, 147, 159, 176, 177, 178, 179, 194, 199, 200, 201, 204, 205, 207, 209, 276, 278, 279, 280, 282, 286, 290, 291, 294, 302], "direct": [10, 31, 41, 49, 50, 51, 65, 189, 199, 200, 201, 207, 276, 290], "steam": [10, 31], "heat": [10, 16, 18, 31, 39, 167], "mhkwave": [11, 102], "pvsamv1": [12, 27, 28, 34, 35, 36, 38, 102], "pvwattsv8": [14, 27, 33, 34, 35, 51, 91, 102, 159, 276, 278, 279, 282], "owner": [15, 23, 45, 90, 295], "ppa": [15, 21, 22, 23, 296], "water": [16, 37, 302], "parabol": 18, "trough": [18, 39], "process": [18, 31, 39, 49, 51, 59, 76, 77, 78, 86, 91, 102, 126, 147, 164, 169, 184, 204, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 297, 298, 300, 304], "windpow": [19, 24, 29, 41, 49, 51, 84, 91, 98, 102, 159, 276, 278, 279, 282, 295, 297, 304], "lcoefcr": [20, 22, 91, 98, 102, 278], "singleown": [20, 21, 22, 45, 91, 278], "revpysam": [21, 25], "": [21, 22, 23, 30, 41, 45, 48, 49, 51, 56, 69, 71, 74, 76, 77, 78, 84, 86, 91, 93, 98, 102, 134, 136, 137, 140, 159, 164, 165, 170, 176, 177, 178, 179, 189, 194, 196, 199, 200, 201, 204, 207, 217, 219, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 296, 297, 298, 299, 300, 303, 304, 308], "price": [21, 22, 23, 296, 297], "mwh": [21, 22, 23, 93, 95, 200, 204, 207], "nativ": [21, 22, 23, 91, 98, 102], "unit": [21, 22, 23, 49, 109, 113, 134, 136, 137, 204, 207, 294, 308], "cent": [21, 22, 23], "kwh": [21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 93, 95, 276], "mult": [21, 22, 23], "10": [21, 22, 23, 27, 29, 30, 33, 34, 35, 36, 40, 49, 51, 84, 113, 204, 209, 276, 291, 294, 299, 301, 303, 308], "npv": [21, 22, 23], "net": [21, 22, 23], "present": [21, 22, 23, 27, 33, 34, 35, 36, 51, 69, 71, 74, 76, 77, 78, 80, 81, 86, 129, 177, 189, 199, 200, 203, 204, 207, 286], "dollar": [21, 22, 23], "1000": [21, 22, 23, 177, 178, 286], "lcoe_nom": [21, 22, 23, 91], "lcoe_real": [21, 22, 23, 91], "real": [21, 22, 23, 302], "flip_actual_irr": [21, 22, 23, 91], "actual": [21, 22, 23, 30, 84, 132, 133, 134, 135, 177, 286, 296, 297], "irr": [21, 22, 23], "gross_revenu": [21, 22, 23, 91], "cash": [21, 22, 23], "flow": [21, 22, 23], "total": [21, 22, 23, 30, 45, 49, 51, 54, 59, 120, 122, 123, 137, 138, 144, 145, 147, 196, 198, 199, 200, 201, 204, 207, 275, 276, 278, 279, 290, 297], "revenu": [21, 22, 23], "rev_run": [21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45], "site_df": [21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45], "row": [21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 84, 91, 98, 102, 109, 113, 159, 176, 177, 178, 184, 185, 191, 192, 193, 196, 198, 199, 200, 201, 204, 209, 278, 279, 282, 286, 303], "via": [21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 91, 102, 146, 159, 275, 276, 278, 279, 282, 294, 297, 306], "loc": [21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 84, 304], "iloc": [21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 84], "label": [21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 93, 111, 159, 177, 178, 199, 200, 201, 203, 204, 207, 281, 282, 286, 290, 304], "forward": [21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45], "sim": 21, "numer": [21, 93, 164, 170], "result": [21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 84, 91, 98, 102, 109, 113, 134, 137, 139, 145, 146, 200, 203, 204, 209, 221, 243, 276, 277, 278, 279, 291, 297, 305, 306], "econom": [22, 23, 102, 204, 279, 291, 294, 296], "fcr": [22, 90, 93, 207], "points_control": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 84, 91, 98, 102], "cf_file": [22, 23, 91, 278], "control": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 69, 76, 77, 78, 91, 98, 102, 132, 160, 163, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 299], "pointscontrol": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 91, 98, 102], "info": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 51, 69, 71, 74, 76, 77, 78, 86, 102, 139, 142, 145, 146, 147, 194, 204, 265, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 304], "capac": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 56, 59, 91, 93, 95, 102, 109, 113, 115, 116, 120, 121, 122, 123, 126, 128, 144, 146, 172, 200, 204, 207, 276, 278, 279, 280, 290, 291, 294, 301, 302, 305, 306], "factor": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 91, 109, 113, 121, 146, 179, 200, 204, 278, 291, 301, 302, 305, 306], "look": [22, 23, 54, 69, 77, 78, 136, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 299], "cf_mean_": [22, 23], "cf_profile_": [22, 23], "cf": [22, 23, 27, 33, 34, 35, 36, 95, 109, 113, 176, 177, 178, 179, 297], "dataset": [22, 23, 49, 51, 74, 91, 98, 102, 109, 110, 111, 113, 159, 164, 169, 176, 177, 178, 182, 183, 184, 185, 192, 193, 196, 199, 200, 201, 203, 204, 207, 209, 221, 276, 277, 278, 279, 281, 282, 286, 290, 291], "cf_profil": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 111, 176, 177, 178, 281, 286, 304, 305, 306], "out": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 51, 69, 71, 74, 76, 77, 78, 80, 81, 86, 91, 93, 98, 102, 159, 194, 199, 200, 204, 219, 274, 275, 276, 278, 279, 282, 283, 288, 291, 294, 297, 304, 305, 306], "nest": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 91, 98, 102, 289], "where": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 54, 56, 59, 69, 71, 74, 76, 77, 78, 84, 86, 91, 92, 93, 98, 102, 126, 133, 134, 135, 137, 145, 159, 182, 183, 184, 185, 192, 194, 199, 200, 201, 203, 204, 207, 219, 221, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 297, 302, 306], "top": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 84, 91, 102, 278, 279], "second": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 50, 54, 91, 102, 177, 275, 278, 279, 283, 286, 297], "windbo": [23, 91, 278], "tcsmolensalt": 24, "scheduledlossesmixin": 25, "abc": [25, 26, 27, 28, 29, 98, 132, 149, 178, 182, 185, 198], "datetimeindex": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 91, 98, 102, 109, 113, 126, 127, 146, 177, 178, 267, 269], "There": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 113, 300, 302], "respect": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 83, 91, 98, 102, 113, 162, 191, 192, 193, 200, 207, 212, 276, 285, 286, 297, 300], "remap": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "done": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 122, 123, 140, 294, 297, 298, 308], "typic": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 91, 102, 111, 134, 136, 137, 177, 184, 185, 203, 204, 207, 211, 274, 276, 278, 279, 281, 286, 290, 291, 294, 302], "wtk": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 74, 91, 98, 102, 203, 204, 276, 279, 291, 294, 297, 302, 304, 305, 306, 308], "dn": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 297], "wind_spe": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 65, 74, 132, 136, 140, 304], "decemb": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "31st": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "check_resource_data": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "nan": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 159, 199, 200, 201], "set_resource_data": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "placehold": [25, 29, 109, 113, 182, 201, 203], "tz_elev_check": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "Will": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 50, 84, 86, 107], "has_timezon": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "fraction": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 74, 76, 77, 78, 91, 98, 102, 115, 116, 194, 199, 207, 278, 279, 290], "float": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 54, 56, 59, 63, 64, 74, 76, 77, 78, 91, 93, 95, 98, 102, 107, 109, 113, 115, 116, 132, 133, 134, 135, 136, 137, 138, 144, 164, 182, 183, 184, 185, 191, 192, 194, 199, 200, 201, 203, 204, 207, 209, 276, 278, 279, 290, 291, 302], "hourli": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 145, 146, 147, 153, 276, 294], "frac": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45], "profil": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 86, 91, 102, 107, 109, 113, 118, 119, 126, 127, 128, 158, 159, 173, 174, 175, 176, 177, 178, 179, 184, 185, 199, 200, 201, 204, 273, 274, 276, 278, 279, 280, 282, 283, 291, 294, 305, 308], "local": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 76, 77, 78, 91, 102, 109, 113, 204, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 295, 306, 308], "numpi": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 93, 109, 113, 136, 137, 140, 199, 201, 221, 265, 297, 304, 305, 306], "datatyp": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 109, 113], "float32": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 102, 113], "length": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 59, 83, 84, 91, 98, 102, 113, 127, 137, 140, 145, 147, 179, 196, 199, 200, 201, 279, 297], "8760": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 95, 102, 113, 145, 147, 276, 279, 297], "annual": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 93, 95, 108, 132, 137, 138, 200, 204, 276, 291], "yield": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 59, 134, 137, 196], "kw": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 93, 136, 276, 304], "power": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 51, 92, 93, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 200, 203, 204, 207, 274, 276, 290, 291, 294, 295, 296], "run_gen_and_econ": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "possibl": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 74, 84, 115, 116, 137, 144, 145, 147, 288, 298], "follow": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 57, 69, 71, 74, 76, 77, 78, 84, 86, 91, 102, 138, 144, 177, 194, 204, 275, 276, 278, 279, 286, 287, 291, 294, 296, 297, 298, 299, 300, 307, 308], "analysi": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 47, 49, 51, 68, 69, 84, 86, 88, 91, 102, 156, 158, 159, 196, 204, 217, 275, 276, 278, 279, 282, 283, 286, 291, 294, 301, 302, 307], "outage_config_kei": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 146], "rev_outag": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 146, 304], "specifi": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 69, 71, 74, 76, 77, 78, 84, 86, 91, 98, 102, 110, 111, 126, 128, 139, 142, 144, 146, 147, 159, 162, 177, 194, 200, 204, 207, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 294, 298, 299, 300, 304], "outag": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 145, 146, 147, 295], "inform": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 74, 138, 139, 144, 145, 146, 147, 274, 275, 276, 283, 294, 304, 306], "outage_seed_config_kei": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 146], "rev_outages_se": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 146], "random": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 74, 145, 146, 147, 221], "seed": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 74, 145, 146, 147, 221], "add_scheduled_loss": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 146], "add": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 84, 91, 98, 102, 109, 113, 146, 147, 159, 169, 191, 192, 193, 207, 209, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 297, 304], "stochast": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 145, 146, 147, 304], "schedul": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 304], "loss": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 84, 263, 264, 276, 295, 302], "read": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 50, 51, 91, 98, 102, 109, 113, 139, 146, 241, 276, 297, 305, 306], "comput": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 91, 102, 109, 111, 113, 115, 116, 120, 121, 122, 123, 126, 137, 139, 142, 146, 158, 159, 164, 166, 169, 177, 184, 185, 192, 199, 200, 201, 204, 206, 207, 209, 276, 278, 279, 280, 281, 282, 286, 290, 291, 294, 295, 304, 305, 306], "string": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 49, 51, 54, 59, 63, 64, 69, 71, 74, 76, 77, 78, 84, 86, 91, 93, 98, 102, 109, 113, 126, 128, 138, 144, 146, 149, 150, 151, 154, 159, 177, 196, 200, 204, 212, 217, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 288, 290, 291], "been": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 137, 146, 147, 158, 271, 274, 277, 294, 297, 306], "dump": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 146, 164, 169, 170, 304], "otherwis": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 69, 71, 74, 76, 77, 78, 86, 91, 98, 102, 109, 146, 150, 153, 155, 159, 177, 200, 203, 204, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "descript": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 107, 144, 145, 146, 194, 276, 294, 295], "allow": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 56, 79, 91, 102, 122, 123, 126, 128, 144, 145, 146, 147, 159, 162, 204, 207, 209, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 292, 294], "each": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 51, 54, 64, 80, 81, 84, 91, 98, 102, 111, 115, 116, 126, 132, 137, 145, 146, 149, 159, 162, 169, 177, 178, 184, 189, 191, 192, 193, 196, 199, 200, 201, 203, 204, 207, 209, 212, 213, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 300, 304, 307], "signifi": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 74, 146], "adjust": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 59, 102, 126, 128, 137, 139, 140, 142, 146, 279, 280], "yearli": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 111, 146, 281], "note": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 59, 91, 102, 109, 113, 122, 123, 126, 128, 132, 146, 159, 177, 204, 207, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 294, 295, 298, 299, 300, 302, 303, 305, 306, 308], "other": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 56, 74, 91, 102, 126, 128, 144, 146, 147, 149, 177, 194, 200, 211, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 296, 297], "effect": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 74, 84, 86, 91, 146, 159, 204, 207, 221, 276, 290, 291], "combin": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 91, 98, 102, 111, 128, 146, 159, 184, 185, 191, 192, 193, 200, 204, 275, 276, 281, 291, 297, 298, 306], "33": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 146, 303], "70": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 146, 204], "farm": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 59, 126, 144, 145, 146, 147, 188, 189, 207, 280, 290], "down": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 136, 144, 146], "reduc": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 86, 92, 93, 109, 113, 146, 196, 276, 297], "80": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 146], "30": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 84, 146, 220, 297, 303], "remain": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 146, 207, 287, 290], "oper": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 59, 93, 95, 146, 158, 159, 204, 276, 282, 291], "dure": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 54, 59, 74, 98, 102, 115, 116, 126, 144, 146, 147, 189, 204, 207, 225, 233, 234, 238, 239, 275, 276, 279, 280, 290, 291], "20": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 84, 113, 146, 204, 275, 276, 291, 294, 303, 308], "origin": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 51, 83, 132, 133, 134, 135, 137, 139, 146, 159, 194, 204, 276, 282, 297, 304], "outage_se": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 146], "A": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 49, 51, 57, 59, 60, 62, 74, 86, 91, 102, 120, 121, 122, 123, 132, 136, 137, 138, 144, 145, 146, 147, 149, 153, 155, 159, 194, 199, 200, 201, 207, 212, 268, 275, 276, 278, 279, 282, 283, 286, 288, 290, 294, 299, 303, 308], "abstractsamgener": [26, 28, 29, 32, 41, 146], "weather": [26, 30, 31, 37, 39], "disk": [26, 30, 31, 37, 39, 51, 91, 98, 102, 109, 111, 113, 164, 170, 218, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 306], "pysam_weather_tag": 26, "some": [26, 27, 30, 31, 33, 34, 35, 36, 37, 39, 79, 91, 102, 109, 113, 126, 137, 211, 274, 278, 279, 280, 294, 297, 302, 304], "raw": [26, 30, 31, 37, 39, 93, 159, 194, 282], "write": [26, 30, 31, 37, 39, 102, 109, 113, 159, 204, 267, 269, 279, 282, 291, 304, 307], "delet": [26, 30, 31, 37, 39, 275, 277, 297], "after": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 49, 51, 91, 102, 109, 113, 126, 128, 132, 133, 134, 135, 158, 159, 189, 194, 204, 207, 274, 276, 278, 279, 280, 282, 287, 290, 302], "complet": [26, 30, 31, 37, 39, 51, 91, 102, 159, 194, 274, 276, 278, 279, 282, 283, 287, 300, 307], "abstractsamsolar": [27, 38], "photovolta": [27, 34, 35, 36, 294], "either": [27, 30, 45, 51, 69, 71, 74, 76, 77, 78, 84, 86, 91, 98, 102, 109, 110, 113, 127, 159, 165, 177, 184, 199, 200, 204, 207, 276, 278, 279, 282, 286, 290, 297], "older": [27, 33, 34, 35, 36], "version": [27, 33, 34, 35, 36, 42, 43, 109, 113, 250, 251, 265, 274, 284, 294, 308], "document": [27, 29, 30, 33, 34, 35, 36, 40, 50, 51, 91, 102, 132, 138, 145, 159, 204, 274, 276, 278, 279, 282, 291], "configur": [27, 29, 30, 33, 34, 35, 36, 40, 51, 67, 68, 70, 71, 74, 75, 76, 77, 78, 82, 84, 85, 86, 91, 98, 102, 109, 113, 159, 219, 226, 227, 240, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 292, 297, 298, 302, 303, 305, 306, 309], "notabl": [27, 30, 33, 34, 35, 36], "lifetim": [27, 30, 33, 34, 35, 36, 102], "exhaust": [27, 30, 33, 34, 35, 36, 294], "system_use_lifetime_output": [27, 33, 34, 35, 36], "whether": [27, 33, 34, 35, 36, 86, 115, 116, 127, 144, 189, 192, 207, 267], "off": [27, 33, 34, 35, 36, 283, 294, 298, 302], "1": [27, 28, 29, 30, 33, 34, 35, 36, 38, 40, 41, 49, 51, 54, 59, 74, 76, 77, 78, 80, 81, 86, 91, 102, 113, 115, 116, 126, 128, 129, 133, 137, 140, 154, 155, 159, 169, 176, 177, 178, 179, 184, 192, 194, 199, 200, 201, 204, 207, 209, 211, 212, 220, 221, 268, 276, 278, 279, 280, 282, 286, 290, 291, 297, 303, 304, 305, 306, 309], "repeat": [27, 33, 34, 35, 36, 289], "plant": [27, 30, 33, 34, 35, 36, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 63, 64, 92, 93, 276], "perform": [27, 30, 33, 34, 35, 36, 51, 54, 59, 69, 71, 74, 76, 77, 78, 86, 91, 98, 102, 162, 199, 200, 201, 204, 207, 211, 276, 277, 278, 279, 285, 286, 289, 290, 291, 297, 298, 300, 306], "degrad": [27, 33, 34, 35, 36, 134, 137], "term": [27, 33, 34, 35, 36, 207, 290, 305], "analysis_period": [27, 33, 34, 35, 36], "repres": [27, 29, 30, 33, 34, 35, 36, 40, 49, 51, 69, 71, 74, 76, 77, 78, 86, 91, 93, 102, 107, 113, 118, 126, 127, 128, 132, 137, 138, 140, 144, 149, 150, 158, 159, 162, 173, 174, 175, 176, 177, 178, 179, 196, 200, 204, 207, 209, 276, 277, 278, 279, 280, 282, 283, 285, 286, 288, 290, 291, 294, 296, 298], "dc_degrad": [27, 33, 34, 35, 36], "percentag": [27, 29, 33, 34, 35, 36, 40, 41, 137, 138, 139, 142, 144, 145], "dc": [27, 33, 34, 35, 36, 111, 200, 281], "mayb": [27, 33, 34, 35, 36], "compound": [27, 33, 34, 35, 36], "vector": [27, 33, 34, 35, 36, 196], "rate": [27, 33, 34, 35, 36, 45, 59, 74, 93, 95, 133, 135, 136, 137, 207, 290, 296], "mai": [27, 29, 30, 33, 34, 35, 36, 40, 51, 91, 93, 102, 109, 113, 139, 146, 147, 152, 159, 177, 204, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297, 306], "also": [27, 29, 30, 33, 34, 35, 36, 40, 48, 49, 51, 74, 84, 91, 93, 98, 102, 109, 111, 113, 126, 138, 144, 147, 149, 159, 179, 200, 204, 207, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 294, 297, 298, 300, 302, 304, 305, 306, 308], "outage_info": [27, 29, 30, 33, 34, 35, 36, 40, 304], "6": [27, 29, 30, 33, 34, 35, 36, 40, 154, 297, 303], "durat": [27, 29, 30, 33, 34, 35, 36, 40, 144, 145, 147, 304], "24": [27, 29, 30, 33, 34, 35, 36, 40, 202, 303, 304], "percentage_of_capacity_lost": [27, 29, 30, 33, 34, 35, 36, 40, 144, 304], "100": [27, 29, 30, 33, 34, 35, 36, 40, 51, 54, 83, 84, 91, 98, 102, 109, 113, 115, 116, 126, 128, 138, 144, 147, 164, 167, 184, 204, 276, 278, 280, 291, 297, 303, 304], "allowed_month": [27, 29, 30, 33, 34, 35, 36, 40, 144, 147, 304], "januari": [27, 29, 30, 33, 34, 35, 36, 40, 51, 102, 276, 279, 304], "march": [27, 29, 30, 33, 34, 35, 36, 40, 149], "allow_outage_overlap": [27, 29, 30, 33, 34, 35, 36, 40, 144], "demo": [27, 29, 30, 33, 34, 35, 36, 40], "notebook": [27, 29, 30, 33, 34, 35, 36, 40], "instruct": [27, 29, 30, 33, 34, 35, 36, 40, 294, 297, 306, 308], "how": [27, 29, 30, 33, 34, 35, 36, 40, 51, 91, 98, 102, 204, 209, 274, 276, 278, 279, 291, 295, 296, 297, 300, 302, 303, 306, 307], "rng": [27, 29, 30, 33, 34, 35, 36, 40], "time_index_step": [27, 29, 30, 33, 34, 35, 36, 40, 86, 109, 113], "size": [27, 29, 30, 33, 34, 35, 36, 40, 54, 86, 91, 98, 102, 107, 109, 113, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "sampl": [27, 29, 30, 33, 34, 35, 36, 40, 59, 65, 140, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291], "tempor": [27, 29, 30, 33, 34, 35, 36, 40, 50, 86, 102, 109, 113, 169, 279, 294], "minut": [27, 29, 30, 33, 34, 35, 36, 40, 294, 297], "while": [27, 29, 30, 33, 34, 35, 36, 40, 113, 177, 260, 283, 286, 297], "forth": [27, 29, 30, 33, 34, 35, 36, 40], "shape": [27, 29, 33, 34, 35, 36, 40, 41, 49, 51, 59, 62, 63, 102, 107, 109, 113, 177, 178, 184, 185, 191, 192, 193, 196, 198, 199, 200, 201, 203, 204, 209, 228, 276, 279, 291, 297], "still": [27, 29, 33, 34, 35, 36, 40, 91, 102, 199, 200, 201, 278, 279, 294], "multipl": [27, 29, 33, 34, 35, 36, 40, 51, 59, 84, 91, 98, 102, 108, 109, 111, 113, 145, 147, 159, 179, 184, 199, 200, 204, 207, 275, 276, 277, 278, 279, 281, 282, 283, 287, 288, 289, 291, 294], "fail": [27, 29, 33, 34, 35, 36, 40, 289, 295, 298], "clearski": [27, 33, 34, 35, 36, 86], "boolean": [27, 33, 34, 35, 36, 86, 107, 109, 113, 145, 147, 159, 164, 189, 191, 192, 193, 194, 199, 200, 201, 204], "wether": [27, 33, 34, 35, 36, 145, 147], "valueerror": [27, 33, 34, 35, 36, 80, 81, 129, 162, 224, 237], "lat": [27, 33, 34, 35, 36, 109, 113, 196, 199, 200, 201, 209, 269, 273, 303], "lon": [27, 33, 34, 35, 36, 109, 113, 196, 199, 200, 201, 209, 269, 273, 303], "outsid": [27, 33, 34, 35, 36, 194, 305, 306], "90": [27, 33, 34, 35, 36, 49, 51, 102, 276, 279, 303], "180": [27, 33, 34, 35, 36, 49, 51, 102, 276, 279], "set_latitude_tilt_az": [27, 33, 34, 35, 36], "tilt": [27, 33, 34, 35, 36], "az": [27, 33, 34, 35, 36], "wa": [27, 30, 33, 34, 35, 36, 49, 51, 91, 107, 126, 128, 133, 134, 135, 137, 158, 184, 189, 194, 199, 200, 201, 204, 207, 276, 294, 297, 306, 308], "metakeynam": [27, 33, 34, 35, 36], "absolut": [27, 33, 34, 35, 36, 38, 54, 69, 71, 74, 76, 77, 78, 86, 179], "azimuth": [27, 33, 34, 35, 36], "system_capacity_ac": [27, 33, 34, 35, 36, 111, 281], "ac": [27, 33, 34, 35, 36, 102, 111, 200, 207, 279, 281, 290], "namepl": [27, 30, 33, 34, 35, 36], "ilr": [27, 33, 34, 35, 36], "product": [27, 30, 33, 34, 35, 36, 49, 51, 59, 93, 95, 138, 200, 204, 276, 291], "cf_mean_ac": [27, 33, 34, 35, 36, 111, 200, 281], "up": [27, 33, 34, 35, 36, 49, 51, 109, 113, 145, 147, 177, 199, 200, 201, 207, 212, 274, 276, 286, 290, 294, 295, 298, 299, 302], "cf_profile_ac": [27, 33, 34, 35, 36, 111, 281], "invert": [27, 33, 34, 35, 36], "alia": [27, 33, 34, 35, 36, 84, 129, 183], "clipped_pow": [27, 33, 34, 35, 36, 111, 281], "clip": [27, 33, 34, 35, 36, 136], "behind": [27, 33, 34, 35, 36, 107, 109, 113, 164, 191, 192, 193], "agg_albedo": [27, 28, 33, 34, 35, 36, 38], "albedo": [27, 28, 33, 34, 35, 36, 38, 86], "aggreg": [27, 28, 33, 34, 35, 36, 38, 49, 51, 102, 120, 121, 145, 176, 177, 178, 186, 196, 198, 199, 200, 201, 202, 203, 204, 207, 215, 273, 274, 276, 279, 283, 286, 290, 294, 297, 302, 308], "monthli": [27, 28, 33, 34, 35, 36, 38], "w": [27, 28, 33, 34, 35, 36, 38, 49, 69, 71, 74, 76, 77, 78, 84, 86, 109, 113, 137, 294, 304, 308], "len": [27, 28, 33, 34, 35, 36, 38, 41, 49, 113, 196], "12": [27, 28, 30, 33, 34, 35, 36, 38, 74, 113, 175, 297, 303], "tech": [27, 28, 33, 34, 35, 36, 38, 43, 84, 91, 98, 102, 109, 113, 208, 209], "spec": [27, 28, 33, 34, 35, 36, 38, 91, 98, 102, 138, 144], "doc": [27, 28, 33, 34, 35, 36, 38, 297, 306], "http": [27, 28, 33, 34, 35, 36, 38, 49, 51, 140, 212, 276, 288, 294, 297, 301, 306, 308], "readthedoc": [27, 28, 33, 34, 35, 36, 38], "io": [27, 28, 33, 34, 35, 36, 38, 297, 305], "en": [27, 28, 33, 34, 35, 36, 38], "master": [27, 28, 33, 34, 35, 36, 38, 297], "html": [27, 28, 33, 34, 35, 36, 38, 167, 171, 172], "less": [27, 28, 33, 34, 35, 36, 38, 51, 144, 199, 204, 276, 291, 297], "monthly_albedo": [27, 28, 33, 34, 35, 36, 38], "powercurvelossesmixin": [29, 41], "rev_power_curve_loss": [29, 40, 41, 139, 304], "powercurvelossesinput": [29, 40, 142, 304], "target_losses_perc": [29, 40, 138, 304], "9": [29, 40, 102, 294, 303, 308], "transform": [29, 40, 49, 51, 107, 132, 133, 134, 135, 137, 138, 184, 185, 199, 200, 201, 204, 276, 291, 304], "exponential_stretch": [29, 40, 141, 304], "mention": [29, 40, 59], "abov": [29, 30, 40, 51, 59, 133, 134, 135, 136, 142, 204, 274, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 298, 303, 306], "power_curve_config_kei": [29, 40, 41, 139], "curv": [29, 40, 41, 45, 49, 51, 59, 102, 114, 115, 116, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 158, 159, 164, 170, 172, 176, 177, 178, 180, 184, 185, 186, 187, 189, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 209, 215, 273, 274, 276, 279, 280, 282, 283, 286, 294, 295, 300, 308], "target": [29, 40, 41, 69, 91, 98, 102, 109, 113, 132, 137, 138, 139, 142, 196, 219, 297, 304], "add_power_curve_loss": [29, 40, 41, 139], "account": [29, 40, 41, 77, 78, 139, 140, 142, 207, 297], "new": [29, 40, 41, 42, 60, 69, 71, 74, 76, 77, 78, 83, 84, 86, 111, 122, 123, 129, 132, 133, 134, 135, 139, 142, 147, 199, 200, 201, 203, 204, 207, 271, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 297, 298, 301, 308], "adjust_power_curv": [29, 40, 41, 139, 304], "shift": [29, 40, 41, 132, 133, 134, 135, 139, 140, 142, 304], "input_power_curv": [29, 40, 41, 139], "powercurv": [29, 40, 41, 132, 133, 134, 135, 137, 139, 142, 304], "wind_resource_from_input": [29, 40, 41, 139], "weight": [29, 40, 41, 49, 51, 121, 137, 139, 176, 177, 178, 179, 194, 199, 200, 201, 204, 276, 286, 291], "powercurvewindresourc": [29, 40, 41, 139, 142, 304], "revlossesvalueerror": [29, 40, 41, 139], "compat": [29, 40, 41, 139, 159, 164, 282], "wind_resource_model_choic": [29, 40, 41, 139], "abstractsamgenerationfromweatherfil": [30, 31, 37, 39], "As": [30, 212], "2022": [30, 113, 212, 297], "well": [30, 51, 91, 102, 137, 147, 189, 200, 204, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 297, 304], "replac": [30, 69, 71, 74, 76, 77, 78, 86, 102, 159, 191, 192, 193, 194, 212, 219, 296, 297, 298, 302], "It": [30, 51, 113, 144, 145, 147, 204, 276, 288, 291, 297, 300, 306], "decid": [30, 297], "would": [30, 49, 51, 91, 102, 126, 128, 132, 147, 194, 200, 204, 207, 211, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "therefor": [30, 51, 102, 113, 137, 159, 204, 275, 276, 279, 282, 291], "just": [30, 102, 109, 176, 196, 279, 294, 297, 308], "gross": [30, 302], "doe": [30, 51, 69, 71, 74, 76, 77, 78, 86, 98, 102, 109, 113, 122, 123, 126, 128, 147, 152, 159, 204, 207, 209, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297, 299], "throw": [30, 297], "getem": 30, "current": [30, 49, 83, 91, 98, 102, 165, 199, 200, 201, 215, 274, 275, 283, 289, 297, 300, 302, 305], "empti": [30, 51, 69, 71, 74, 76, 77, 78, 80, 81, 84, 86, 91, 93, 98, 102, 204, 217, 276, 291], "behavior": [30, 113, 177, 204, 286], "easili": [30, 296], "updat": [30, 43, 49, 51, 69, 71, 74, 76, 77, 78, 86, 109, 111, 113, 115, 116, 147, 169, 189, 207, 219, 271, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297], "futur": [30, 91, 98, 102, 204, 278, 279], "start": [30, 49, 51, 69, 71, 74, 76, 77, 78, 80, 81, 83, 84, 86, 91, 98, 102, 109, 113, 129, 147, 153, 155, 274, 276, 279, 283, 287, 289, 297, 306], "resource_typ": 30, "hydrotherm": 30, "eg": 30, "resource_potenti": 30, "mw": [30, 49, 51, 59, 115, 116, 200, 203, 204, 207, 276, 290, 291], "automat": [30, 51, 102, 109, 111, 113, 159, 207, 217, 276, 277, 279, 281, 297, 299, 306], "left": [30, 51, 91, 102, 159, 204, 276, 278, 279, 282, 283, 291, 304], "overridden": [30, 74], "case": [30, 51, 69, 71, 74, 76, 77, 78, 84, 86, 91, 98, 102, 110, 137, 149, 150, 153, 154, 155, 159, 200, 204, 207, 276, 278, 279, 282, 283, 289, 290, 291, 292, 302], "resource_temp": 30, "temperatur": [30, 49, 74, 140, 304], "c": [30, 74, 107, 140, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 294, 296, 297, 298, 300, 307, 308], "To": [30, 91, 98, 102, 126, 128, 145, 147, 177, 274, 277, 280, 286, 288, 294, 297, 298, 304, 306], "overrid": [30, 74, 132, 297], "own": [30, 132, 275, 288, 294, 297, 306, 307], "In": [30, 51, 69, 71, 74, 76, 77, 78, 86, 91, 102, 110, 133, 135, 138, 144, 151, 159, 207, 211, 276, 278, 279, 282, 283, 290, 297], "ignor": [30, 49, 51, 59, 91, 102, 194, 199, 200, 201, 204, 207, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291], "determin": [30, 54, 91, 98, 102, 109, 110, 113, 179, 196, 199, 200, 201, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "sole": 30, "resource_depth": 30, "depth": [30, 84], "m": [30, 41, 49, 51, 59, 84, 134, 137, 140, 276, 294, 304, 308], "analysis_typ": 30, "assumpt": [30, 49, 51, 102, 137, 149, 276, 279], "num_wel": 30, "affect": [30, 207, 209, 290], "unlik": [30, 51, 137, 276], "particular": [30, 51, 91, 102, 133, 135, 138, 144, 151, 204, 276, 278, 279, 291], "obtain": [30, 51, 140, 204, 276, 291], "work": [30, 69, 71, 74, 76, 77, 78, 86, 199, 201, 289, 297, 298, 308], "leav": [30, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "altern": [30, 91, 102, 177, 278, 279, 286], "num_wells_getem": 30, "assum": [30, 49, 51, 69, 71, 74, 76, 77, 78, 86, 102, 113, 122, 123, 204, 276, 278, 279, 283, 286, 291, 294, 302, 308], "block": [30, 204, 291, 297, 299], "probabl": [30, 41, 49, 51, 54, 74, 221, 276, 297], "extra": [30, 51, 76, 77, 78, 147, 149, 150, 151, 153, 154, 155, 204, 207, 209, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 289, 290, 291, 297, 305], "develop": [30, 158, 297, 306, 309], "conversion_typ": 30, "convers": [30, 212], "binari": [30, 54, 194, 199, 200, 201], "flash": 30, "cost": [30, 44, 45, 49, 51, 59, 92, 93, 95, 102, 115, 116, 200, 203, 204, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 295, 301, 302], "inj_prod_well_ratio": 30, "inject": 30, "ratio": [30, 122, 123, 126, 128, 280], "gui": 30, "recommend": [30, 144, 297, 309], "75": [30, 194, 305, 306], "num_confirmation_wel": 30, "confirm": 30, "drill": 30, "2023": [30, 294, 308], "howev": [30, 51, 91, 102, 109, 159, 177, 204, 207, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291], "lead": 30, "neg": 30, "small": [30, 134, 297, 302, 305, 306], "equal": [30, 80, 81, 84, 126, 128, 177, 184, 194, 199, 200, 201, 204, 209, 280, 286, 294], "drill_cost_per_wel": 30, "limit": [30, 76, 77, 78, 91, 98, 102, 115, 116, 122, 123, 126, 128, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 306], "when": [30, 51, 60, 91, 98, 102, 109, 113, 132, 137, 145, 147, 164, 169, 177, 194, 207, 232, 276, 277, 279, 286, 290, 297, 299, 300], "capital_cost_per_kw": [30, 59], "capit": [30, 45, 49, 51, 59, 92, 93, 95, 102, 200, 204, 207, 276, 279, 290, 291], "capital_cost": [30, 49, 51, 59, 91, 93, 95, 99, 102, 111, 200, 204, 276, 278, 279, 281, 291], "fixed_operating_cost": [30, 49, 51, 59, 91, 93, 95, 99, 102, 111, 200, 204, 276, 281, 291], "fix": [30, 49, 51, 59, 79, 84, 93, 95, 129, 207, 276, 290], "per": [30, 49, 51, 59, 76, 77, 78, 83, 91, 93, 98, 102, 144, 145, 177, 196, 198, 199, 200, 201, 204, 207, 276, 286, 290, 291, 294, 297, 300, 308], "fresnel": 31, "linearfresneldsgiph": 31, "wave": [32, 301], "hindcast": [32, 301], "u": [32, 133, 134, 135, 289, 297, 301], "abstractsampv": [33, 34, 35, 36], "heater": 37, "swh": 37, "concentr": [38, 294], "tower": 38, "molten": 38, "salt": 38, "physic": [39, 137, 297], "troughphysicalprocessheat": 39, "abstractsamwind": [40, 139], "ws_edg": [41, 49], "wd_edg": [41, 49], "wind_dist": [41, 49], "speed": [41, 49, 50, 65, 74, 109, 113, 132, 133, 134, 135, 136, 137, 140, 142, 199, 200, 201, 221, 304], "joint": [41, 49, 51, 276], "probabilti": 41, "distrubt": 41, "distribut": [41, 43, 49, 51, 86, 132, 133, 134, 135, 137, 171, 276, 306], "bin": [41, 49, 51, 65, 200, 204, 276, 291], "edg": [41, 49, 51, 276], "winddirect": [41, 49], "deg": [41, 49], "dist": [41, 49], "2d": [41, 49, 50, 51, 59, 65, 102, 113, 164, 169, 184, 192, 196, 199, 200, 201, 204, 209, 276, 279, 291], "send": [41, 297], "creat": [42, 51, 59, 69, 71, 73, 74, 76, 77, 78, 79, 86, 102, 109, 113, 129, 164, 167, 171, 172, 175, 191, 192, 193, 194, 202, 203, 204, 208, 209, 220, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 296, 297, 298, 306, 307, 308], "mon": [42, 73, 79], "14": [42, 303], "40": [42, 303, 304], "42": [42, 51, 113, 204, 276, 291, 297, 303, 306], "2020": [42, 301], "author": [42, 73, 79, 119, 124, 175, 202, 208, 220], "gbuster": [42, 73, 79, 175, 202, 208, 220, 307], "modifi": [43, 80, 81, 296, 297, 302], "pysam_vers": 43, "checker": 43, "reflect": 43, "v2_correction_kei": 43, "valid": [43, 69, 71, 74, 76, 77, 78, 86, 102, 127, 128, 132, 138, 144, 189, 196, 199, 200, 201, 203], "balanc": [44, 45, 49, 51, 59, 276], "pair": [45, 51, 69, 71, 74, 76, 77, 78, 84, 86, 102, 109, 110, 113, 126, 128, 194, 203, 204, 211, 275, 276, 279, 280, 283, 291, 296, 297, 298, 303], "machine_r": 45, "turbin": [45, 49, 51, 54, 55, 56, 58, 59, 61, 64, 91, 102, 132, 133, 134, 135, 136, 276, 278, 279, 302], "machin": [45, 294, 308], "hub_height": [45, 49], "hub": [45, 48, 49, 84], "height": [45, 48, 49, 84], "rotor_diamet": 45, "rotor": [45, 49, 51, 276], "diamet": [45, 49, 51, 91, 102, 276, 278, 279], "number_of_turbin": 45, "turbine_capital_cost": 45, "zero": [45, 74, 91, 102, 136, 137, 145, 199, 200, 201, 221, 278, 279, 302], "attr": [45, 109, 113, 200, 204, 209], "bos_cost": [45, 91], "turbine_cost": [45, 91], "sales_tax_mult": 45, "sale": 45, "tax": [45, 296], "multipli": [45, 49, 51, 59, 91, 93, 102, 115, 116, 135, 200, 203, 204, 207, 209, 276, 278, 279, 290, 291], "instal": [45, 102, 250, 251, 297, 305, 306], "sales_tax_cost": [45, 91], "total_installed_cost": [45, 91], "bo": [45, 49, 51, 59, 276], "breakdown": 45, "Not": [45, 215, 289], "maintain": [45, 80, 81, 194, 297, 302], "polymorph": 45, "break": [45, 57], "pylint": 45, "w0613": 45, "unus": 45, "tool": [46, 47, 117, 173, 309], "res_fpath": [48, 51, 185, 204, 209, 276, 291], "sc_gid_to_hh": 48, "sc_gid_to_res_gid": 48, "pre_load_humid": 48, "multi": [48, 49, 51, 84, 91, 98, 102, 105, 109, 110, 111, 177, 200, 204, 242, 273, 274, 283, 284, 286, 291, 298], "preload": [48, 50], "intend": [48, 50, 109, 113, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "facilit": [48, 50, 125, 137, 147], "load": [48, 49, 50, 51, 77, 78, 84, 91, 98, 102, 109, 113, 115, 116, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297, 304], "bespokewindpl": 48, "slow": [48, 49, 50, 51, 276, 297], "parallel": [48, 49, 50, 51, 76, 77, 78, 84, 91, 98, 102, 169, 176, 177, 184, 185, 204, 207, 208, 209, 247, 276, 278, 279, 286, 288, 290, 291, 295, 306, 307], "hdf5": [48, 50, 51, 91, 102, 111, 126, 159, 177, 204, 207, 276, 277, 279, 281, 282, 286, 290, 291, 294], "unix": [48, 51, 109, 110, 276, 277, 297], "shell": [48, 51, 76, 77, 78, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297], "style": [48, 51, 63, 109, 110, 193, 276, 277], "wildcard": [48, 51, 102, 276, 277, 279], "pattern": [48, 109, 110, 136, 267, 277], "explicit": [48, 51, 84, 98, 102, 109, 110, 276, 279], "themselv": [48, 51, 276], "readabl": [48, 51, 102, 276, 279, 294], "multi_year_resourc": [48, 51, 276], "multiyearwindresourc": [48, 51, 276], "sc": [48, 49, 51, 126, 128, 177, 178, 184, 185, 189, 196, 198, 199, 200, 201, 204, 207, 209, 276, 280, 291, 297], "pull": [48, 51, 176, 177, 178, 204, 276, 286, 291, 306], "given": [48, 49, 51, 59, 69, 71, 74, 76, 77, 78, 80, 81, 84, 86, 91, 98, 102, 107, 109, 115, 116, 132, 134, 136, 137, 138, 145, 147, 153, 164, 171, 184, 189, 191, 192, 193, 194, 199, 200, 201, 204, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 299, 304, 305, 306], "oif": 48, "befor": [48, 76, 77, 78, 80, 81, 91, 98, 102, 126, 128, 145, 159, 189, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 297, 298], "rel": [48, 50, 69, 71, 74, 76, 77, 78, 86, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "humid": [48, 50], "ic": [48, 86], "get_preloaded_data_for_gid": 48, "sc_gid": [48, 177, 189, 196, 204, 211, 286], "bespokesingleplantdata": [48, 49], "act": 48, "stand": [48, 297, 306], "excl": [49, 107, 199, 200, 201, 209], "tm_dset": [49, 51, 184, 185, 192, 196, 199, 200, 201, 204, 276, 291], "objective_funct": [49, 51, 54, 59, 276], "capital_cost_funct": [49, 51, 59, 276], "fixed_operating_cost_funct": [49, 51, 59, 276], "variable_operating_cost_funct": [49, 51, 59, 276], "balance_of_system_cost_funct": [49, 51, 59, 276], "min_spac": [49, 51, 56, 59, 276], "5x": [49, 51, 276], "wake_loss_multipli": [49, 51, 59, 276], "ga_kwarg": [49, 51, 276], "system_capac": [49, 51, 59, 99, 111, 200, 204, 276, 281, 291], "ws_bin": [49, 51, 276], "wd_bin": [49, 51, 276], "360": [49, 51, 276], "45": [49, 51, 276, 306], "excl_dict": [49, 51, 165, 182, 183, 184, 185, 192, 199, 200, 201, 203, 204, 276, 291], "inclusion_mask": [49, 51, 184, 192, 199, 200, 201, 204], "data_lay": [49, 51, 199, 200, 201, 203, 204, 276, 291], "64": [49, 51, 184, 185, 196, 198, 199, 200, 201, 204, 276, 291], "excl_area": [49, 51, 184, 185, 199, 200, 201, 204, 276, 291], "exclusion_shap": [49, 51, 198, 199, 200, 201], "eos_mult_baseline_cap_mw": [49, 51, 276], "200": [49, 51, 204, 276, 291, 297], "prior_meta": [49, 51], "pre_loaded_data": [49, 51], "close": [49, 107, 109, 113, 133, 135, 137, 177, 182, 183, 191, 192, 193, 196, 199, 200, 201, 203, 268, 286], "analyz": [49, 59, 69, 84, 86, 91, 98, 102, 158, 159, 198, 199, 200, 201, 279], "optim": [49, 51, 52, 56, 59, 60, 132, 133, 134, 135, 137, 276, 306], "layout": [49, 51, 59, 61, 276], "exclus": [49, 51, 56, 59, 60, 74, 83, 84, 164, 165, 167, 182, 183, 184, 185, 188, 189, 196, 198, 199, 200, 201, 203, 204, 207, 208, 209, 230, 242, 276, 290, 291, 294, 300, 302], "suppli": [49, 51, 59, 102, 114, 115, 116, 126, 158, 159, 164, 170, 172, 176, 177, 178, 180, 184, 185, 186, 187, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 215, 273, 274, 276, 279, 280, 282, 283, 286, 287, 288, 294, 295, 308], "exclusionmask": [49, 182, 183, 192, 193, 194, 199, 200, 201, 203], "h5": [49, 51, 91, 98, 102, 107, 109, 110, 112, 113, 126, 159, 162, 164, 169, 176, 177, 178, 182, 183, 184, 185, 191, 192, 193, 194, 196, 199, 200, 201, 203, 204, 209, 225, 238, 267, 269, 275, 276, 277, 282, 284, 291, 297, 300, 303, 304, 305, 306], "sam": [49, 51, 59, 81, 84, 85, 86, 87, 91, 98, 102, 109, 113, 139, 140, 146, 159, 200, 221, 229, 250, 251, 253, 254, 255, 256, 258, 259, 276, 278, 279, 282, 284, 295, 301, 303, 304, 305, 306], "minim": [49, 51, 54, 59, 276], "n_turbin": [49, 51, 59, 276], "aep": [49, 51, 59, 93, 276], "avg_sl_dist_to_center_m": [49, 51, 59, 276], "averag": [49, 51, 59, 111, 199, 201, 204, 276, 281], "straight": [49, 51, 59, 276, 294], "line": [49, 51, 59, 63, 66, 91, 102, 110, 115, 116, 159, 177, 204, 207, 212, 274, 276, 278, 279, 282, 286, 290, 291, 295, 297, 309], "distanc": [49, 51, 59, 115, 116, 207, 209, 276], "center": [49, 51, 59, 115, 116, 276], "avg_sl_dist_to_medoid_m": [49, 51, 59, 276], "medoid": [49, 51, 59, 276], "nn_conn_dist_m": [49, 51, 59, 276], "connect": [49, 51, 59, 115, 116, 204, 207, 276, 290, 291, 302], "equat": [49, 51, 59, 74, 93, 158, 159, 200, 204, 276, 282, 291, 302], "fixed_charge_r": [49, 51, 59, 91, 93, 95, 99, 102, 111, 200, 204, 207, 276, 281, 290, 291], "part": [49, 51, 59, 110, 159, 275, 276, 277, 282, 283, 288, 298, 300], "evalu": [49, 51, 59, 91, 93, 102, 204, 276, 278, 279, 291], "variable_operating_cost": [49, 51, 59, 91, 93, 95, 99, 102, 111, 200, 204, 276, 281, 291], "balance_of_system_cost": [49, 51, 59, 276], "wind_plant": [49, 51, 59, 276], "through": [49, 51, 59, 91, 98, 102, 109, 158, 159, 204, 276, 282, 291, 294, 297, 300, 303], "minimum": [49, 51, 56, 57, 59, 127, 164, 165, 182, 183, 184, 185, 191, 192, 194, 203, 204, 276, 291], "space": [49, 51, 56, 59, 84, 91, 98, 102, 151, 276, 279, 294], "between": [49, 51, 54, 56, 59, 83, 91, 102, 109, 125, 126, 127, 128, 137, 145, 164, 165, 167, 207, 209, 276, 278, 279, 280, 290, 297], "meter": [49, 51, 59, 276], "scale": [49, 51, 59, 91, 92, 93, 98, 102, 109, 113, 133, 135, 140, 167, 171, 177, 178, 194, 200, 204, 207, 276, 278, 279, 286, 291, 294, 297, 301, 306], "lost": [49, 51, 59, 138, 144, 276], "due": [49, 51, 59, 138, 145, 204, 276, 297], "wake": [49, 51, 59, 276], "NOT": [49, 51, 59, 115, 116, 194, 276], "come": [49, 51, 59, 276], "even": [49, 51, 59, 69, 71, 74, 76, 77, 78, 86, 113, 137, 276, 287], "keyword": [49, 51, 59, 91, 102, 182, 183, 184, 185, 192, 194, 199, 200, 201, 203, 204, 275, 276, 278, 279, 283, 291], "ga": [49, 51, 59, 276], "geneticalgorithm": [49, 51, 59, 276], "ws_mean": [49, 51, 276], "windspeed_mean": [49, 51, 276], "temperature_mean": [49, 51, 276], "pressure_mean": [49, 51, 276], "entri": [49, 51, 69, 74, 76, 77, 78, 83, 86, 91, 98, 102, 177, 178, 196, 199, 200, 201, 204, 209, 276, 286, 297], "stop": [49, 51, 80, 81, 84, 129, 276, 297, 300], "inclus": [49, 51, 59, 74, 83, 84, 91, 98, 102, 164, 184, 185, 190, 191, 192, 193, 194, 199, 200, 201, 204, 268, 276, 291], "four": [49, 51, 207, 276, 290], "15": [49, 51, 113, 276, 297, 303, 304], "270": [49, 51, 276], "arug": [49, 164, 182, 183, 184, 185, 192, 199, 200, 201, 203, 204], "layer_dset_nam": [49, 51, 182, 183, 184, 185, 192, 199, 200, 201, 203, 204, 276, 291], "supply_curv": [49, 51, 164, 165, 276, 291], "layermask": [49, 51, 164, 182, 183, 184, 185, 191, 192, 193, 199, 200, 201, 203, 204, 276, 291], "mask": [49, 51, 59, 159, 164, 165, 167, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 199, 200, 201, 203, 204, 276, 291], "exclud": [49, 51, 59, 111, 184, 189, 191, 192, 193, 194, 199, 200, 201, 204, 276, 281, 291], "against": [49, 51, 69, 71, 87, 199, 200, 201, 204, 276, 291], "layer": [49, 51, 106, 107, 164, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 207, 209, 276, 291, 294, 300], "anoth": [49, 199, 200, 201, 203, 204, 211, 271], "dset": [49, 51, 109, 110, 111, 113, 159, 164, 165, 169, 196, 199, 200, 201, 203, 204, 209, 267, 276, 281, 282, 291], "fpath": [49, 51, 159, 162, 165, 199, 200, 201, 203, 204, 276, 284, 291, 303], "along": [49, 133, 134, 135, 196, 198, 199, 200, 201], "axi": [49, 91, 98, 102, 133, 134, 135, 196, 198, 199, 200, 201, 304], "area": [49, 51, 56, 57, 59, 107, 164, 165, 182, 183, 184, 185, 191, 192, 199, 200, 201, 203, 204, 276, 291], "pixel": [49, 51, 59, 102, 107, 184, 185, 198, 199, 200, 201, 204, 209, 276, 279, 291, 302], "km2": [49, 107, 165, 184, 185, 199, 200, 201, 203, 204], "try": [49, 145, 147, 177, 184, 185, 199, 200, 201, 204, 286, 297, 305], "infer": [49, 51, 136, 184, 185, 194, 199, 200, 201, 203, 204, 276, 277, 291, 306], "excl_fpath": [49, 51, 165, 182, 183, 184, 185, 192, 199, 200, 201, 203, 204, 209, 276, 291], "extent": [49, 51, 107, 184, 185, 194, 198, 199, 200, 201, 204, 209, 276, 291, 294, 302], "col": [49, 109, 113, 184, 185, 191, 192, 193, 196, 198, 199, 200, 201, 204, 284], "thing": [49, 199, 200, 201, 297], "consider": [49, 51, 102, 199, 200, 201, 276, 279], "baselin": [49, 51, 179, 276], "economi": [49, 51, 92, 93, 200, 204, 276, 291], "eo": [49, 51, 276], "divid": [49, 51, 276], "align": [49, 51, 102, 200, 276, 279], "atb": [49, 51, 276], "here": [49, 51, 113, 132, 276, 297, 302, 305, 306], "tinyurl": [49, 51, 140, 212, 276], "com": [49, 51, 140, 212, 276, 294, 297, 308], "y85hnu6h": [49, 51, 276], "belong": [49, 51, 83, 84, 91, 98, 102, 196, 276, 300], "prior": [49, 51, 111, 159, 276, 277, 281, 282, 294, 308], "turbine_x_coord": [49, 51, 276], "turbine_y_coord": [49, 51, 276], "techmap": [49, 51, 107, 182, 183, 184, 185, 192, 196, 200, 201, 203, 204, 276, 291], "forecast": [49, 51, 102, 276, 279], "ecmwf": [49, 51, 102, 276, 279], "histor": [49, 51, 102, 276, 279, 302], "meteorologi": [49, 51, 102, 276, 279], "exit": [49, 199, 200, 201, 274, 283, 284], "open": [49, 107, 109, 113, 191, 192, 193, 199, 200, 201, 203, 294, 304], "bias_correct_w": 49, "h5_gid": [49, 199, 200, 201], "provid": [49, 56, 69, 71, 74, 76, 77, 78, 86, 102, 109, 113, 132, 138, 144, 145, 147, 159, 184, 185, 194, 199, 200, 201, 204, 207, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 303, 304], "windspeed_100m": [49, 304], "temperature_100m": [49, 304], "pressure_100m": [49, 304], "someth": [49, 177, 286, 297], "similar": [49, 183, 271, 296, 297], "its": [49, 51, 60, 102, 200, 212, 276, 279, 294, 297, 303, 307, 308], "get_weighted_res_t": 49, "n_time": 49, "get_weighted_res_dir": 49, "mean_wind_dir": [49, 199, 200, 201], "degre": [49, 74, 204], "north": [49, 294], "include_mask": [49, 59, 199, 200, 201], "pixel_side_length": [49, 59], "side": [49, 51, 59, 204, 276, 291], "original_sam_sys_input": 49, "yet": [49, 297], "wind_plant_pd": 49, "final": [49, 51, 84, 91, 98, 102, 109, 113, 164, 167, 182, 183, 184, 185, 191, 192, 194, 203, 204, 276, 279, 291, 294, 300], "sc_point": [49, 189, 204, 207, 209, 290, 291], "aggscpoint": 49, "basic": [49, 297, 303], "res_df": 49, "compliant": 49, "pressur": [49, 50, 140, 304], "sort": [49, 51, 80, 81, 145, 189, 207, 290], "annual_time_index": 49, "order": [49, 59, 69, 71, 74, 76, 77, 78, 80, 81, 86, 107, 132, 137, 145, 159, 206, 282], "wind_plant_t": 49, "corresond": 49, "normal": [49, 86, 109, 113, 192, 199, 200, 201, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "sum": [49, 51, 120, 122, 123, 170, 184, 199, 200, 201, 204, 207, 276, 290, 291], "initialize_wind_plant_t": 49, "windpowerpd": [49, 59], "plant_optim": 49, "placement": 49, "placeturbin": [49, 60], "recalc_lco": [49, 200, 204, 291], "recalcul": 49, "get_lcoe_kwarg": 49, "namespac": [49, 69, 71, 74, 76, 77, 78, 84, 86, 93, 98, 102, 203, 279], "lcoe_kwarg": 49, "These": [49, 51, 74, 137, 140, 144, 204, 207, 276, 278, 279, 286, 290, 291, 297, 300], "fixed_operating_co": 49, "prioriti": [49, 91, 110, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 299], "check_depend": 49, "run_wind_plant_t": 49, "export": [49, 159, 282, 302], "run_plant_optim": 49, "agg_data_lay": [49, 199, 200, 201], "bsp": 49, "data_ind": 50, "wind_dir": [50, 189, 207, 290], "temp": 50, "relative_humid": 50, "bespokesinglepl": [50, 51], "dimens": [50, 51, 102, 276, 279], "oftemperatur": 50, "expos": 50, "directli": [50, 51, 93, 102, 159, 176, 177, 178, 179, 276, 279, 282, 286, 294, 295, 305, 306, 308], "cannot": [50, 91, 98, 102, 184, 199, 200, 297], "queri": 50, "sam_fil": [51, 84, 91, 102, 159, 276, 278, 279, 282, 284, 296, 303, 304, 305, 306], "area_filter_kernel": [51, 165, 182, 183, 184, 185, 192, 203, 204, 276, 291], "queen": [51, 164, 165, 182, 183, 184, 185, 191, 192, 203, 204, 276, 291], "min_area": [51, 164, 165, 182, 183, 184, 185, 191, 192, 203, 204, 276, 291], "pre_extract_inclus": [51, 184, 185, 204, 276, 291, 297], "prior_run": [51, 276], "pre_load_data": [51, 276], "baseaggreg": [51, 184, 204], "much": [51, 276, 297, 306], "pipe": [51, 102, 276, 279, 300], "usual": [51, 102, 158, 159, 200, 276, 279, 282, 297, 302], "grid": [51, 184, 196, 198, 199, 200, 201, 204, 207, 276, 290, 291, 302], "everi": [51, 102, 145, 179, 196, 199, 200, 201, 204, 209, 215, 275, 276, 279, 283, 289, 291, 297], "public": [51, 276, 297], "methodologi": [51, 276], "more": [51, 91, 102, 109, 113, 126, 128, 132, 133, 134, 135, 144, 145, 147, 165, 182, 183, 184, 185, 191, 192, 203, 204, 274, 276, 278, 279, 280, 288, 291, 294, 296, 297, 298, 306], "spread": [51, 102, 204, 275, 276, 279, 291], "across": [51, 133, 134, 135, 137, 179, 204, 215, 275, 276, 277, 278, 279, 291, 294], "defin": [51, 59, 63, 109, 113, 126, 128, 159, 184, 185, 192, 194, 200, 204, 209, 275, 276, 280, 282, 283, 291, 303], "appear": [51, 204, 276, 291, 297], "onc": [51, 80, 81, 91, 98, 102, 110, 204, 274, 276, 291, 298, 306], "h5_dir": [51, 91, 98, 102, 276, 279, 284], "prefix": [51, 91, 93, 98, 102, 110, 126, 128, 275, 276, 279, 280, 284], "suffix": [51, 91, 98, 102, 110, 276, 279, 284, 300], "wai": [51, 102, 109, 113, 194, 204, 276, 291, 297, 299, 303], "coordin": [51, 57, 59, 62, 84, 107, 109, 113, 191, 192, 193, 196, 199, 200, 201, 204, 209, 276, 284, 291, 303, 305, 306], "differ": [51, 57, 65, 98, 102, 109, 134, 135, 145, 159, 204, 207, 271, 276, 282, 283, 290], "conform": [51, 102, 276, 279], "observ": [51, 102, 276, 279], "00": [51, 102, 113, 276, 279], "1st": [51, 102, 276, 279], "under": [51, 74, 102, 111, 159, 204, 276, 279, 281, 282, 291, 294], "link": [51, 204, 276, 291], "metric": [51, 177, 204, 276, 286, 291], "custom": [51, 102, 158, 222, 276, 279, 297], "coupl": [51, 204, 276, 291], "high": [51, 198, 199, 200, 201, 204, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 296, 297, 299, 301], "lower": [51, 54, 84, 91, 98, 102, 126, 128, 204, 276, 279, 280, 283, 291], "separ": [51, 62, 111, 204, 276, 277, 281, 288, 291, 298], "written": [51, 91, 102, 109, 113, 126, 159, 177, 218, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "express": [51, 167, 171, 172, 276], "slice": [51, 84, 91, 98, 102, 109, 113, 147, 184, 185, 196, 198, 199, 200, 201, 204, 209, 267, 276, 278, 279, 303], "below": [51, 74, 91, 102, 132, 136, 142, 204, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 297, 298, 304, 305, 306, 308], "do": [51, 69, 71, 74, 76, 77, 78, 86, 91, 98, 102, 115, 116, 145, 159, 194, 207, 209, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297, 304, 305], "capital_cost_multipli": [51, 91, 99, 102, 276, 278, 279], "fixed_operating_cost_multipli": [51, 276], "variable_operating_cost_multipli": [51, 276], "balance_of_system_cost_multipli": [51, 276], "treat": [51, 109, 113, 132, 133, 134, 135, 276, 297, 302], "guidelin": [51, 91, 102, 276, 278, 279], "supplycurveext": [51, 204, 276, 291], "import": [51, 59, 84, 86, 102, 113, 204, 276, 291, 297, 298, 300, 303, 304, 305, 306], "valid_sc_point": [51, 196, 204, 276, 291], "tolist": [51, 204, 276, 291], "choic": [51, 147, 276], "them": [51, 80, 81, 147, 274, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "cli": [51, 52, 72, 89, 100, 104, 105, 118, 157, 161, 174, 186, 187, 212, 216, 218, 249, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 297, 298, 300, 307, 308], "usag": [51, 276, 302], "to_csv": [51, 276], "id": [51, 84, 86, 91, 98, 102, 115, 116, 159, 276, 278, 279, 282, 297], "onshor": [51, 91, 102, 159, 276, 278, 279, 282, 302, 303], "sam_config": [51, 84, 91, 98, 102, 109, 113, 159, 276, 278, 279, 282, 304], "yaml": [51, 86, 91, 102, 159, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 292], "offshor": [51, 91, 102, 156, 158, 159, 189, 199, 200, 207, 244, 245, 276, 278, 279, 282, 290, 295, 303], "sam_key_1": [51, 91, 102, 159, 276, 278, 279, 282], "sam_value_1": [51, 91, 102, 159, 276, 278, 279, 282], "sam_key_2": [51, 91, 102, 159, 276, 278, 279, 282], "sam_value_2": [51, 91, 102, 159, 276, 278, 279, 282], "select": [51, 54, 91, 102, 147, 177, 276, 278, 279, 286, 297], "typical_exclus": [51, 204, 276, 291], "exclude_valu": [51, 194, 204, 276, 291], "255": [51, 204, 276, 291], "another_exclus": [51, 204, 276, 291], "exclusion_with_nodata": [51, 204, 276, 291], "exclude_rang": [51, 194, 204, 276, 291], "exclude_nodata": [51, 194, 204, 276, 291], "nodata_valu": [51, 194, 204, 276, 291], "partial_setback": [51, 204, 276, 291], "use_as_weight": [51, 194, 204, 276, 291], "height_limit": [51, 204, 276, 291], "slope": [51, 204, 276, 291], "include_rang": [51, 194, 204, 276, 291], "developable_land": [51, 204, 276, 291], "force_include_valu": [51, 194, 204, 276, 291], "more_developable_land": [51, 204, 276, 291], "force_include_rang": [51, 194, 204, 276, 291], "rook": [51, 165, 204, 276, 291], "contigu": [51, 164, 182, 183, 184, 185, 191, 192, 203, 204, 276, 291], "filter": [51, 164, 165, 182, 183, 184, 185, 191, 192, 203, 204, 276, 289, 291], "cluster": [51, 204, 276, 291, 295, 306], "compar": [51, 74, 132, 137, 179, 204, 276, 291], "than": [51, 109, 113, 126, 128, 132, 133, 134, 135, 144, 177, 199, 204, 276, 278, 279, 280, 283, 286, 291, 297], "km": [51, 115, 116, 164, 182, 183, 184, 185, 191, 192, 199, 200, 201, 203, 204, 207, 276, 291], "keep": [51, 145, 147, 204, 207, 276, 290, 291, 297, 300], "isol": [51, 204, 276, 291], "land": [51, 204, 276, 291, 294], "within": [51, 91, 109, 113, 137, 153, 159, 164, 169, 177, 204, 207, 276, 278, 282, 286, 290, 291], "mark": [51, 204, 276, 291], "explan": [51, 140, 204, 276, 291], "mani": [51, 91, 98, 102, 134, 204, 209, 276, 278, 279, 291, 297], "cell": [51, 177, 184, 204, 276, 286, 291], "64x64": [51, 177, 204, 276, 286, 291], "output_layer_nam": [51, 204, 276, 291], "layer_nam": [51, 191, 192, 193, 194, 204, 276, 291], "another_output_layer_nam": [51, 204, 276, 291], "input_layer_nam": [51, 204, 276, 291], "mode": [51, 109, 113, 204, 276, 291], "omit": [51, 102, 204, 276, 279, 291, 298], "one": [51, 91, 98, 102, 109, 111, 113, 122, 123, 126, 128, 133, 134, 135, 136, 137, 138, 152, 159, 176, 177, 182, 183, 184, 185, 191, 192, 194, 203, 204, 211, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 294, 297, 300], "min": [51, 170, 179, 194, 204, 276, 291], "max": [51, 136, 137, 147, 162, 170, 194, 204, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "categori": [51, 204, 276, 291], "describ": [51, 204, 276, 291], "exist": [51, 69, 71, 74, 76, 77, 78, 86, 111, 122, 123, 127, 137, 159, 204, 207, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 298], "faster": [51, 109, 113, 184, 185, 204, 276, 291], "fly": [51, 184, 185, 204, 276, 291], "worker": [51, 76, 77, 78, 83, 84, 91, 98, 102, 162, 164, 169, 177, 184, 185, 204, 207, 209, 276, 278, 279, 285, 286, 290, 291], "satisfi": [51, 276, 300], "represent": [51, 133, 134, 135, 177, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294], "x": [51, 56, 59, 62, 64, 91, 98, 102, 107, 133, 134, 135, 204, 276, 303], "bottom": [51, 276], "y": [51, 56, 62, 64, 107, 276], "previou": [51, 91, 110, 159, 207, 219, 276, 277, 278, 282, 290], "consid": [51, 60, 86, 91, 102, 159, 204, 207, 276, 278, 279, 282, 290, 297], "consum": [51, 276], "front": [51, 276], "drastic": [51, 276], "signific": [51, 276], "overal": [51, 276], "speedup": [51, 276], "o": [51, 84, 91, 102, 276, 278, 279, 300, 303, 304, 305, 306], "capabl": [51, 276, 294], "amount": [51, 134, 276, 305, 306], "ram": [51, 276], "sure": [51, 69, 71, 74, 76, 77, 78, 86, 145, 147, 159, 276, 282, 288, 294, 297, 308], "split": [51, 83, 84, 91, 98, 102, 150, 276, 278, 279], "node": [51, 76, 77, 78, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 295, 297, 307, 309], "36": [51, 276, 303], "conu": [51, 276, 294, 300, 305, 306, 308], "larg": [51, 137, 145, 147, 204, 276, 277, 291, 294, 297, 301], "memori": [51, 76, 77, 78, 91, 98, 102, 204, 265, 270, 271, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297, 299], "smaller": [51, 133, 135, 276], "completed_gid": 51, "slice_lookup": 51, "sc_point_gid": [51, 189, 196, 198, 199, 200, 201, 204], "sam_sys_inputs_with_site_data": 51, "becom": 51, "site_data": [51, 91, 98, 102, 159, 278, 279, 282, 296], "save_output": 51, "out_fpath": [51, 91, 102, 111, 159, 184, 189, 204, 207], "parent": [51, 54], "directori": [51, 69, 71, 74, 76, 77, 78, 86, 91, 98, 102, 110, 162, 164, 165, 167, 169, 170, 171, 172, 218, 219, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 297, 298, 300, 306, 307, 308], "alreadi": [51, 111, 122, 123, 147, 281, 298], "desir": [51, 59, 69, 71, 74, 76, 77, 78, 86, 102, 136, 138, 145, 147, 153, 154, 155, 209, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297], "extens": 51, "run_seri": [51, 184, 204], "0081": [51, 184, 204], "standalon": [51, 184, 204], "serial": [51, 69, 71, 76, 77, 78, 169, 177, 274, 286], "take": [51, 54, 84, 91, 102, 110, 144, 145, 147, 177, 207, 278, 279, 286, 297, 302], "variant": [51, 296], "run_parallel": [51, 184, 204], "max_work": [51, 76, 77, 78, 91, 102, 162, 164, 169, 177, 184, 204, 207, 209, 276, 278, 279, 285, 286, 290, 291, 297, 304, 305, 306], "core": [51, 91, 98, 102, 162, 169, 184, 204, 208, 209, 276, 285, 291, 297], "summari": [51, 126, 127, 128, 164, 176, 177, 178, 184, 185, 189, 196, 199, 200, 201, 203, 204, 207, 215, 280, 286, 290, 291, 294, 297], "cpu": [51, 162, 184, 204, 207, 209, 285, 290, 291, 297], "were": [51, 91, 93, 102, 159, 200, 203, 297], "raster": [51, 184, 185, 196, 204], "simpl": [53, 54, 102, 132, 182, 204, 207, 268, 290, 291, 295, 304], "genet": [53, 54, 59], "algorithm": [53, 54, 56, 59], "bit": 54, "bound": [54, 126, 128, 132, 133, 134, 135, 209, 280], "variable_typ": 54, "max_gener": 54, "population_s": 54, "crossover_r": 54, "mutation_r": 54, "01": [54, 113, 303, 306], "tol": 54, "1e": 54, "06": [54, 113], "convergence_it": 54, "max_tim": 54, "3600": 54, "design": [54, 59, 113, 297], "discret": 54, "n": [54, 83, 113, 125, 177, 178, 179, 289, 294, 308], "upper": [54, 126, 128, 149, 150, 153, 154, 155, 209, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 304], "maximum": [54, 57, 84, 115, 116, 126, 128, 194, 204, 207, 280, 290], "popul": [54, 111, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "crossov": 54, "phase": 54, "mutat": 54, "toler": 54, "converg": 54, "initialize_design_vari": 54, "randomli": [54, 145, 147], "initialize_bit": 54, "initialize_popul": 54, "offspr": 54, "initialize_fit": 54, "fit": [54, 132, 133, 134, 135, 137, 138], "member": [54, 211, 215], "chromosome_2_vari": 54, "chromosom": 54, "individu": [54, 120], "optimize_ga": 54, "pack": [55, 56, 59, 260], "safe_polygon": [56, 59], "weight_x": 56, "0013547": 56, "maxim": [56, 59], "polygon": [56, 61, 62, 63], "multipolygon": [56, 59, 63], "safe": [56, 69, 71, 74, 76, 77, 78, 86, 277], "place": [56, 58, 59, 80, 81, 98, 102, 150, 274, 279], "without": [56, 91, 98, 102, 109, 110, 113, 204, 207, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 298, 305], "violat": [56, 91, 98, 102], "boundari": [56, 61, 62, 63, 64, 134, 135, 204, 291], "setback": [56, 294], "constraint": [56, 113], "pack_turbines_poli": 56, "fast": 56, "turbine_x": [56, 59], "turbine_i": [56, 59], "clear": [56, 69, 71, 74, 76, 77, 78, 80, 81, 86], "reset": [56, 273, 294, 308], "_summary_": 57, "help": [57, 125, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 308], "ti": [57, 91, 98, 102, 200], "two": [57, 74, 80, 81, 83, 91, 98, 102, 125, 126, 128, 145, 194, 196, 200, 204, 211, 280, 283, 288, 297, 298, 306], "geometri": 57, "exterior": [57, 62], "_type_": 57, "coord": [57, 62, 196], "element": [57, 80, 81], "southwest": 57, "northeast": 57, "everyth": [59, 158, 159, 282, 297, 301], "define_exclus": 59, "initialize_pack": 59, "gentic": 59, "optimization_object": 59, "capacity_mw": 59, "exact": 59, "best": [59, 297], "charg": [59, 93, 95, 207, 290, 297], "nturb": 59, "convex_hul": 59, "convex_hull_area": [59, 215], "full_cell_area": 59, "capacity_dens": 59, "convex_hull_capacity_dens": 59, "full_cell_capacity_dens": 59, "func": 60, "decor": 60, "until": [60, 300, 302], "meant": [60, 132, 204, 291, 302], "subclass": [60, 132, 211], "optimized_design_vari": 60, "callabl": 60, "plot": [61, 63, 64, 65, 164, 165, 166, 167, 168, 171, 172, 295, 304], "exteroir": 62, "geom": 63, "ax": [63, 64, 65], "color": [63, 64, 65, 167, 171], "black": 63, "linestyl": 63, "linewidth": 63, "matplotlib": [63, 64, 65, 171, 304], "pyplot": [63, 64, 65, 304], "figur": [63, 64, 65], "rose": [63, 64, 65, 189, 207, 290], "width": 63, "r": [64, 69, 71, 74, 76, 77, 78, 86, 109, 113, 137, 283, 284, 289, 297, 304], "c0": 64, "num": [64, 129], "radiu": 64, "py": [64, 65, 288, 297], "show": [64, 274, 284, 296, 297, 298, 304], "next": [64, 294, 298, 300, 306], "wind_direct": 65, "wind_frequ": 65, "windros": 65, "command": [66, 76, 77, 78, 91, 102, 110, 159, 177, 204, 207, 212, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 309], "run_preflight": 69, "check_kei": [69, 71], "baseconfig": [69, 74, 76, 86], "disabl": [69, 113, 204], "preflight": 69, "analysis_year": [69, 91, 102, 177, 217, 278, 279, 286], "code": [69, 158, 212, 283, 294, 308], "anticip": 69, "log_directori": [69, 218, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "log": [69, 71, 74, 76, 77, 78, 86, 137, 142, 218, 265, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 297, 300], "execution_control": [69, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297, 299], "_ec": 69, "baseexecutionconfig": [69, 77], "eagleconfig": 69, "job": [69, 71, 74, 76, 77, 78, 86, 247, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 295, 296, 297, 298, 307], "_name": [69, 194], "str_rep": [69, 71, 74, 76, 77, 78, 86], "revdir": [69, 71, 74, 76, 77, 78, 86], "home": [69, 71, 74, 76, 77, 78, 86, 294, 297, 308], "runner": [69, 71, 74, 76, 77, 78, 86], "testdatadir": [69, 71, 74, 76, 77, 78, 84, 86, 102, 303, 304, 305, 306], "test": [69, 71, 74, 76, 77, 78, 86, 113, 211, 267, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 295, 302, 303, 306], "demarc": [69, 71, 74, 76, 77, 78, 86], "check_fil": [69, 71, 74, 76, 77, 78, 86], "flist": [69, 71, 74, 76, 77, 78, 86], "make": [69, 71, 74, 76, 77, 78, 86, 159, 207, 218, 267, 275, 282, 288, 290, 294, 297, 307, 308], "check_overwrite_kei": [69, 71, 74, 76, 77, 78, 86], "primary_kei": [69, 71, 74, 76, 77, 78, 86], "overwrite_kei": [69, 71, 74, 76, 77, 78, 86], "overwrit": [69, 71, 74, 76, 77, 78, 86], "configerror": [69, 71, 74, 76, 77, 78, 86], "primari": [69, 71, 74, 76, 77, 78, 84, 86, 134, 177, 286, 302], "messag": [69, 71, 74, 76, 77, 78, 86, 144, 265, 300], "item": [69, 71, 74, 76, 77, 78, 80, 81, 86, 194, 271, 275], "d": [69, 71, 74, 76, 77, 78, 84, 86, 109, 113, 165, 297], "config_dir": [69, 71, 74, 76, 77, 78, 86], "config_kei": [69, 71, 74, 76, 77, 78, 86, 219], "copi": [69, 71, 74, 76, 77, 78, 80, 81, 86, 110, 122, 123, 159, 282, 297, 298, 306], "shallow": [69, 71, 74, 76, 77, 78, 80, 81, 86, 302], "fromkei": [69, 71, 74, 76, 77, 78, 86], "els": [69, 71, 74, 76, 77, 78, 86], "view": [69, 71, 74, 76, 77, 78, 86], "log_level": [69, 71, 74, 76, 77, 78, 86, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 297, 306], "debug": [69, 71, 74, 76, 77, 78, 86, 137, 142, 218, 265, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 288, 290, 291, 297, 306], "pop": [69, 71, 74, 76, 77, 78, 80, 81, 86, 304], "k": [69, 71, 74, 76, 77, 78, 86], "v": [69, 71, 74, 76, 77, 78, 86, 172, 179, 268, 274, 284], "keyerror": [69, 71, 74, 76, 77, 78, 86, 235], "popitem": [69, 71, 74, 76, 77, 78, 86], "lifo": [69, 71, 74, 76, 77, 78, 86], "first": [69, 71, 74, 76, 77, 78, 80, 81, 86, 102, 109, 113, 129, 151, 158, 196, 207, 275, 279, 290, 294, 296, 297], "resolve_path": [69, 71, 74, 76, 77, 78, 86], "resolv": [69, 71, 74, 76, 77, 78, 86], "resembl": [69, 71, 74, 76, 77, 78, 86, 177, 286], "somewher": [69, 71, 74, 76, 77, 78, 86], "bodi": [69, 71, 74, 76, 77, 78, 86, 297], "unchang": [69, 71, 74, 76, 77, 78, 86], "ones": [69, 71, 74, 76, 77, 78, 86, 113], "deleg": [69, 71, 74, 76, 77, 78, 86], "logic": [69, 71, 74, 76, 77, 78, 80, 86], "pathlib": [69, 71, 74, 76, 77, 78, 86], "made": [69, 71, 74, 76, 77, 78, 86, 149, 298], "symlink": [69, 71, 74, 76, 77, 78, 86], "compon": [69, 71, 74, 76, 77, 78, 86], "elimin": [69, 71, 74, 76, 77, 78, 86], "t": [69, 71, 74, 76, 77, 78, 86, 110, 133, 134, 135, 137, 292, 297], "set_self_dict": [69, 71, 74, 76, 77, 78, 86], "dictlik": [69, 71, 74, 76, 77, 78, 86], "emul": [69, 71, 74, 76, 77, 78, 86, 271], "setdefault": [69, 71, 74, 76, 77, 78, 86], "insert": [69, 71, 74, 76, 77, 78, 80, 81, 86, 298], "str_replace_and_resolv": [69, 71, 74, 76, 77, 78, 86], "deep": [69, 71, 74, 76, 77, 78, 86], "search": [69, 71, 74, 76, 77, 78, 86, 110, 284, 289], "f": [69, 71, 74, 76, 77, 78, 86, 113, 284, 287, 289, 297, 306], "lack": [69, 71, 74, 76, 77, 78, 86], "perform_str_rep": 71, "jan": [73, 152], "28": [73, 303], "11": [73, 154, 155, 303], "43": 73, "27": [73, 297, 303], "2019": [73, 79, 175, 202, 208, 220, 294, 308], "curtailment_paramet": 74, "could": [74, 147, 158, 159, 271, 282, 297, 305], "content": [74, 84, 297], "threshold": [74, 194], "_wind_spe": 74, "dawn_dusk": 74, "zenith": 74, "angl": 74, "dawn": 74, "dusk": 74, "_dawn_dusk": 74, "nautic": 74, "horizon": 74, "sza": [74, 102, 279], "102": 74, "date_rang": [74, 113, 268], "date": [74, 212, 297], "rang": [74, 80, 81, 83, 91, 98, 102, 138, 144, 145, 147, 192, 194, 199, 200, 201, 204, 291, 294, 297], "end": [74, 80, 81, 83, 84, 91, 98, 102, 151, 159, 194, 207, 297], "mmdd": 74, "pad": 74, "nonetyp": [74, 77, 78, 84, 98, 102, 109, 113, 164, 191, 192, 207, 221], "precipit": 74, "precip": 74, "mm": 74, "precipitationrate_0m": 74, "scenario": [74, 204, 291, 294], "precipitation_r": 74, "solar_zenith_angl": 74, "signal": 74, "screen": [74, 294, 308], "criteria": 74, "met": [74, 200], "alwai": [74, 111, 113, 126, 128, 145, 147, 280, 281, 288, 302], "random_se": [74, 221], "config_dict": [76, 77, 78], "hardwar": [76, 77, 78, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "peregrin": [76, 77, 78, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "eagl": [76, 77, 78, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 295, 309], "sites_per_work": [76, 77, 78, 91, 98, 102, 184, 204, 278, 279, 291, 297], "scheme": [76, 77, 78], "memory_utilization_limit": [76, 77, 78, 91, 98, 102, 278, 279], "mem_util_lim": [76, 77, 78], "sh_script": [76, 77, 78, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297], "script": [76, 77, 78, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 290, 291, 294, 297, 308], "hpc": [77, 78, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 297], "alloc": [77, 78, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 299], "hpc_alloc": [77, 78], "state": [77, 78, 177, 178, 199, 200, 204, 286, 294, 296, 297, 303, 305, 306, 308], "job_id": [77, 78], "conda_env": [77, 78, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "conda": [77, 78, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 297, 308], "environ": [77, 78, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 297, 308], "activ": [77, 78, 159, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 297, 308], "hpcconfig": 78, "slurm": [78, 257, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297, 298, 299], "gb": [78, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 299], "_hpc_node_mem": 78, "walltim": [78, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 299, 308], "_hpc_walltim": 78, "alias": [79, 211], "typo": 79, "jul": [79, 149, 152], "09": [79, 113, 297], "37": [79, 297], "23": [79, 113, 175, 297, 303], "inp": [80, 81], "__add__": [80, 81, 129], "__mul__": [80, 81, 129], "append": [80, 81, 91, 278], "occurr": [80, 81, 129], "extend": [80, 81, 288], "9223372036854775807": [80, 81, 129], "indexerror": [80, 81], "revers": [80, 81], "IN": [80, 81], "ascend": [80, 81], "itself": [80, 81, 126, 144, 277], "stabl": [80, 81], "descend": [80, 81], "accord": [80, 81, 147], "outputrequest": 81, "sites_per_split": 83, "manag": [83, 84, 182, 183, 203, 208, 294, 297, 298, 300, 308], "__next__": 83, "_sites_per_split": 83, "increment": 83, "_project_point": 83, "split_rang": [83, 91, 98, 102], "_split_rang": 83, "finish": [83, 300], "dunder": 83, "i0": [83, 84], "i1": [83, 84], "begin": [83, 136, 151, 274, 294], "sub": [83, 84, 103, 165, 275, 283, 298], "subset": [83, 84, 184, 185, 204], "curtail": [84, 98, 102, 132, 279], "join": [84, 102, 159, 282, 303, 304, 305, 306], "naris_pv_1axis_inv13": [84, 102, 303, 305, 306], "pp": [84, 140, 303, 304, 305, 306], "config_id_site0": 84, "sam_config_dict_site0": 84, "site_list_or_slic": 84, "get_sites_from_config": 84, "config_id": 84, "projectpoints_sub": 84, "h_list": 84, "h": [84, 120, 121, 122, 123, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "samconfig": [84, 91, 98, 102], "pvwattsv7": [84, 91, 98, 102, 297, 305, 306], "tcsmoltensalt": [84, 91, 98, 102], "solarwaterheat": [84, 91, 98, 102], "troughphysicalheat": [84, 91, 98, 102], "lineardirectsteam": [84, 91, 98, 102], "_": [84, 91, 98, 102, 304], "find": [84, 109, 137, 147, 177, 179, 286, 297, 303], "pointer": [84, 98, 102, 279], "_df": 84, "sam_config_id": 84, "sam_config_obj": 84, "_sam_config_obj": 84, "sam_input": 84, "all_sam_input_kei": 84, "gcr": 84, "wind_turbine_hub_ht": 84, "sites_as_slic": 84, "sequenti": [84, 98, 102], "_tech": 84, "_h": 84, "taken": [84, 91, 93, 98, 102, 144, 199, 200, 201], "_d": 84, "_curtail": 84, "being": [84, 86, 91, 102, 109, 113, 142, 165, 179, 198, 199, 200, 201, 204, 278, 279, 283, 294, 297], "assess": [84, 294], "ind": [84, 209], "join_df": 84, "df2": 84, "sitedatafield": [84, 98, 102, 159], "pkei": 84, "advantag": [84, 137], "relev": [84, 91, 98, 102, 138, 277, 306], "recogn": 84, "necessarili": [84, 204], "struct": 84, "lat_lon_coord": [84, 284, 303, 304, 305, 306], "lat_lon": [84, 109, 113, 196, 303, 304, 305, 306], "fine": [84, 297], "region": [84, 91, 102, 115, 116, 133, 134, 135, 137, 176, 177, 178, 194, 200, 207, 273, 278, 279, 286, 290, 294, 297, 303, 305, 306], "form": [84, 87, 126, 128, 207, 280, 290, 303], "region_column": [84, 303], "section": [86, 136], "irrad": 86, "irradi": 86, "sky": 86, "bifaci": 86, "panel": 86, "_ice": 86, "en_icing_cutoff": 86, "downscal": 86, "higher": [86, 102, 204, 279, 291], "5min": 86, "variability_kwarg": 86, "var_frac": 86, "05": [86, 113, 207, 208, 209, 290, 304, 305, 306], "uniform": 86, "json5": [86, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 292], "toml": [86, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 292], "bad": [87, 226, 230, 242, 243, 244, 249, 256], "check_pv": 87, "4": [91, 98, 102, 113, 194, 268, 278, 279, 294, 297, 299, 303, 308], "basegen": [91, 102], "though": [91, 149, 274, 277, 278], "simpli": [91, 277, 278, 288, 294, 308], "those": [91, 149, 207, 278, 290, 300], "reli": [91, 278], "your": [91, 102, 113, 132, 136, 159, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 295, 298, 305, 306, 308], "unless": [91, 102, 113, 177, 278, 279, 286], "vari": [91, 102, 110, 145, 275, 278, 279, 294], "independ": [91, 93, 102, 200, 204, 278, 279, 291], "wind_turbine_rotor_diamet": [91, 102, 278, 279], "bracket": [91, 102, 177, 278, 279, 286, 297], "fill": [91, 102, 126, 128, 177, 274, 278, 279, 280, 286, 297], "pipelin": [91, 110, 111, 159, 177, 204, 207, 219, 248, 273, 274, 275, 277, 278, 281, 282, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 302, 308], "pars": [91, 93, 109, 113, 159, 177, 204, 207, 219, 277, 278, 282, 286, 290, 291], "duplic": [91, 159, 177, 204, 207, 278, 282, 283, 286, 290, 291], "invalid": [91, 159, 177, 189, 204, 207, 278, 282, 286, 290, 291], "manual": [91, 140, 159, 177, 204, 207, 278, 282, 286, 290, 291], "rest": [91, 102, 278, 279], "instead": [91, 98, 102, 109, 113, 159, 184, 185, 194, 204, 274, 278, 279, 282, 283, 291, 304], "chunk": [91, 98, 102, 107, 109, 113, 209, 267, 269, 278, 279], "store": [91, 98, 102, 109, 111, 113, 138, 144, 159, 204, 278, 279, 281, 282, 291, 294, 300, 305], "flush": [91, 98, 102, 278, 279], "project_return_aftertax_npv": 91, "filenam": [91, 102, 277], "_meta": 91, "get_pc": [91, 98, 102], "points_rang": [91, 98, 102], "fulli": [91, 98, 102, 194, 199, 200, 201], "instanti": [91, 98, 102, 109, 113, 132], "pc": [91, 98, 102], "add_site_data_to_pp": [91, 98, 102], "_out_fpath": [91, 98, 102], "_fpath": [91, 98, 102], "get_sites_per_work": [91, 98, 102], "concept": [91, 98, 102], "most": [91, 98, 102, 137, 176, 177, 179, 189, 204, 212, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 303], "effici": [91, 98, 102, 189, 297], "twice": [91, 98, 102, 297], "redundantli": [91, 98, 102], "handle_leap_ti": [91, 98, 102], "gen": [91, 97, 98, 127, 159, 176, 177, 178, 200, 203, 204, 209, 279, 295, 303, 304], "out_chunk": [91, 98, 102], "_out_chunk": [91, 98, 102], "indici": [91, 98, 102], "timeout": [91, 102, 278, 279, 297], "1800": [91, 102, 278, 279], "pool_siz": [91, 102, 278, 279], "smart": [91, 102], "wait": [91, 102, 278, 279, 297, 300], "submit": [91, 102, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 298, 300], "pool": [91, 102, 278, 279], "cpu_count": [91, 102, 278, 279], "run_attr": [91, 98, 102, 109, 113], "__init__": [91, 98, 102], "runtim": [91, 98, 102, 109, 113], "sam_meta": [91, 98, 102], "sam_modul": [91, 98, 102], "_site_data": [91, 98, 102], "site_index": [91, 98, 102], "site_gid": [91, 98, 102], "out_index": [91, 98, 102], "global": [91, 98, 102, 109, 113], "site_limit": [91, 98, 102], "_site_limit": [91, 98, 102], "site_mem": [91, 98, 102], "mb": [91, 98, 102], "_site_mem": [91, 98, 102], "unpack_futur": [91, 98, 102], "compil": [91, 98, 102], "unpack_output": [91, 98, 102], "site_output": [91, 98, 102], "unpack": [91, 98, 102], "siteoutput": [91, 98, 102], "_year": [91, 98, 102], "larger": [92, 93, 133, 135, 144, 276, 278, 279, 297, 299], "eqn": 93, "capacity_factor": 93, "unitless": [93, 95, 204], "annual_energy_product": [93, 95, 204], "is_num": 93, "is_method": 93, "builtin": 93, "var": 93, "capital_cost_scalar": 93, "raw_capital_cost": 93, "unscal": [93, 109, 113], "scaled_capital_cost": 93, "foc": 93, "voc": 93, "back": 93, "raw_cap_cost": 93, "raw_lco": 93, "scaled_lco": 93, "electr": 95, "rage": 95, "aka": [95, 109, 113], "expenditur": 95, "scale_output": [98, 102, 279], "immedi": [98, 102, 279], "upon": [98, 102, 279, 307], "_time_index": [98, 102], "base_capital_cost": [99, 102], "base_fixed_operating_cost": [99, 102], "base_variable_operating_cost": [99, 102], "low_res_resource_fil": [102, 279], "write_mapped_gid": [102, 279], "bundl": [102, 134, 279], "commonli": [102, 279], "refer": [102, 140, 159, 274, 282, 301, 306], "clone": [102, 297, 309], "repositori": [102, 297], "pip": [102, 297, 305, 306, 309], "sam_tech": 102, "fp_sam": 102, "fp_re": 102, "ri_100_nsrdb_2013": 102, "16966143": 102, "dtype": [102, 109, 113], "7": [102, 204, 297, 303, 305, 306], "req": 102, "096": 102, "39767200": 102, "260000": 102, "17859147": 102, "17869979": 102, "1834818": 102, "18646291": 102, "130": 102, "32126": 102, "24226": 102, "126": 102, "84782": 102, "124": 102, "81981": 102, "underscor": [102, 212, 275, 279], "multi_file_resourc": [102, 279], "multifileresourc": [102, 107, 279], "exactli": [102, 111, 194, 279, 281, 283], "sup3rcc": [102, 279], "organ": [102, 179, 279], "least": [102, 126, 128, 136, 177, 178, 207, 275, 279, 290, 297], "relationship": [102, 279], "co": [102, 279], "dc_ac_ratio": [102, 111, 200, 279, 281], "detect": [102, 133, 134, 135, 136, 200, 279], "often": [102, 177, 279, 286], "ingest": [102, 279], "give": [102, 115, 116, 279], "chang": [102, 268, 279, 297], "handle_lifetime_index": 102, "h5_file": [107, 109, 113, 164, 169], "hsd": [107, 109, 113, 164, 191, 192, 193, 294, 295, 305, 308], "h5pyd": [107, 109, 113, 164, 191, 192, 193, 295, 306], "host": [107, 109, 113, 164, 191, 192, 193, 306], "aw": [107, 109, 113, 164, 191, 192, 193, 295, 306], "h5py": [107, 109, 113, 265], "iarr": 107, "flatten": [107, 196, 199, 200, 201, 269], "uint": 107, "geotiff": 107, "cr": 107, "pixel_area": [107, 199, 200, 201], "appropri": [107, 109, 113, 200, 274, 297], "get_layer_profil": 107, "get_layer_cr": 107, "get_layer_valu": 107, "band": 107, "get_layer_descript": 107, "get_nodata_valu": 107, "nodata": [107, 191, 192, 193, 194], "str_decod": [109, 113], "standard": [109, 113, 177, 204, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 299], "deviat": 109, "coeffici": 109, "variat": 109, "decod": [109, 113], "bytestr": [109, 113], "parse_source_files_pattern": 109, "source_fil": [109, 110, 111, 281], "except": [109, 125, 139, 146, 297], "pertain": 109, "pass_through": 109, "modif": [109, 297, 302], "stdev": [109, 110, 170], "interest": [109, 115, 116, 169, 198, 199, 200, 201, 284, 306], "my_mean": 109, "my_stdev": 109, "cv": 109, "my_cv": 109, "is_profil": 109, "my_fil": 109, "ident": [109, 110, 302], "collect_mean": 109, "collect_profil": 109, "add_dataset": [109, 113], "dset_nam": [109, 113], "dset_data": [109, 113], "scale_factor": [109, 113], "offset": [109, 113, 204], "data_vers": [109, 113], "df_str_decod": [109, 113], "byte": [109, 113], "ordinari": [109, 113], "full_version_record": [109, 113], "record": [109, 113, 283], "get_sam_df": [109, 113], "get_attr": [109, 113], "get_config": [109, 113], "config_nam": [109, 113], "get_dset_properti": [109, 113], "get_meta_arr": [109, 113], "rec_nam": [109, 113], "meta_arr": [109, 113], "get_scale_factor": [109, 113], "get_unit": [109, 113], "global_attr": [109, 113], "_group": [109, 113], "init_h5": [109, 113], "init": [109, 113, 144], "impli": [109, 113], "is_hsds_fil": [109, 113], "file_path": [109, 113], "One": [109, 113, 165, 204, 291], "is_s3_fil": [109, 113], "s3": [109, 113, 294, 295, 305, 306, 308], "open_dataset": [109, 113], "ds_name": [109, 113, 169], "resourcedataset": [109, 113, 199, 200, 201], "open_fil": [109, 113], "hsds_kwarg": [109, 113], "now": [109, 113, 297, 305], "redund": [109, 113], "bucket": [109, 113, 297], "usernam": [109, 113, 297], "password": [109, 113, 297], "fsspec": [109, 113], "preload_sam": [109, 113], "synonym": [109, 113], "res_arrai": [109, 113], "sam_r": [109, 113], "res_dset": [109, 113], "resource_dataset": [109, 113], "set_config": [109, 113], "set_version_attr": [109, 113], "update_dset": [109, 113], "dset_arrai": [109, 113], "dset_slic": [109, 113], "writabl": [109, 113], "is_writ": [109, 113], "write_dataset": [109, 113], "write_mean": [109, 113], "identifi": [109, 113, 159, 176, 177, 178, 179, 196, 207, 282, 286], "write_profil": [109, 113], "out_dir": [110, 111, 162, 164, 167, 169, 170, 171, 172, 219, 281], "source_dir": [110, 111, 281], "source_prefix": [110, 111, 281], "source_pattern": 110, "pass_through_dset": [110, 111, 281], "OR": 110, "statu": [110, 219, 273, 274, 294, 297, 298, 300, 307, 308], "explicitli": [110, 299], "don": [110, 297], "_dset": 110, "clobber": [111, 277, 281], "word": [111, 211, 281, 283], "multiyeargroup": [111, 281], "ghi_mean": [111, 281], "solar_group": [111, 281], "what": [111, 194, 207, 281, 290], "want": [111, 159, 177, 207, 274, 275, 281, 282, 283, 286, 290, 294, 297, 306, 308], "purg": [111, 277, 281], "freshli": [111, 281], "overwritten": [111, 271, 281], "supplycurvefield": [113, 164, 172, 176, 177, 178, 207, 286], "20210101": 113, "20220101": 113, "freq": 113, "1h": 113, "right": 113, "print": [113, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 297, 304, 305, 306], "head": [113, 294, 297], "2021": [113, 297], "02": [113, 177, 275, 286], "03": 113, "04": [113, 275], "07": 113, "08": [113, 297], "31": [113, 175, 202, 303], "16": [113, 208, 297, 303], "17": [113, 303], "19": [113, 275, 303], "21": [113, 202, 208, 297, 303], "22": [113, 297, 303], "datetime64": 113, "few": [113, 297], "we": [113, 209, 297, 304], "earlier": 113, "explicityli": 113, "storag": [113, 297, 306], "big": [113, 145, 147, 300], "float64": 113, "dset1": 113, "int32": 113, "4242": 113, "spatiotempor": [113, 158, 159, 282, 301], "intial": 113, "furthermor": 113, "whose": 113, "bad_shap": 113, "handlervalueerror": 113, "proper": [113, 297], "trans_tabl": [115, 116, 207, 290], "line_tie_in_cost": [115, 116, 207, 290], "14000": [115, 116], "line_cost": [115, 116, 207, 290], "2279": [115, 116], "station_tie_in_cost": [115, 116, 207, 290], "center_tie_in_cost": [115, 116, 207, 290], "sink_tie_in_cost": [115, 116, 207, 290], "1000000000": [115, 116], "avail_cap_frac": [115, 116, 207, 290], "line_limit": [115, 116, 207, 290], "transmissionfeatur": [115, 207], "build": [115, 116, 207, 290, 297], "substat": [115, 116, 207, 290], "synthet": [115, 116], "infinit": [115, 116], "sink": [115, 116], "1e9": [115, 116], "attach": [115, 116, 207, 290], "legaci": [115, 116, 194, 207, 215, 290], "available_capac": [115, 116], "avail_cap": [115, 116], "feature_cost": 115, "check_avail": [115, 116], "availabl": [115, 116], "check_feature_depend": [115, 116], "miss": [115, 116, 120, 121, 159, 204, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "intern": [115, 116, 294], "accordingli": [115, 116, 298], "intereset": [115, 116], "transmission_multipli": [115, 116, 207], "lcot": [115, 116, 205, 207, 290], "line_multipli": [115, 116], "increas": [115, 116, 134, 137], "feature_capac": [115, 116], "feature_cap": [115, 116], "rep": [119, 126, 127, 128, 176, 177, 178, 204, 273, 274, 280, 283, 291, 294, 308], "ppinchuk": [119, 124], "capciti": [120, 121, 122, 123, 305], "hybrid_meta": [120, 121, 122, 123, 126, 128], "mean_cf": [121, 200, 204, 207, 290, 291], "hybrid_solar_capac": [122, 123], "No": [122, 123, 149], "hybrid_wind_capac": 123, "helper": 125, "fmt": 125, "excess": 125, "char": 125, "whitespac": [125, 149, 150, 153, 154, 155], "merg": [125, 126, 127, 128, 207, 271, 280, 290], "charact": 125, "ascii": 125, "strip": [125, 151], "lowercas": [125, 212], "solar_fpath": [126, 127, 280], "wind_fpath": [126, 127, 280], "allow_solar_onli": [126, 128, 280], "allow_wind_onli": [126, 128, 280], "fillna": [126, 128, 280], "ratio_bound": [126, 128, 280], "solar_capac": [126, 128, 280], "wind_capac": [126, 128, 280], "variou": [126, 204, 280, 291], "column_nam": [126, 128, 280], "fill_valu": [126, 128, 280], "colum_nam": [126, 128, 280], "max_valu": [126, 128, 194, 280], "half": [126, 128, 209, 280], "doubl": [126, 128, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "numerator_column": [126, 280], "denominator_column": [126, 280], "noth": [126, 128, 280], "solar_meta": [126, 127], "wind_meta": [126, 127], "At": [126, 128, 177, 178, 297, 303], "veri": [126, 128, 177, 178, 297], "solar_time_index": [126, 127], "wind_time_index": [126, 127], "hybrid_time_index": [126, 127], "fout": [126, 177, 178, 179], "save_hybrid_meta": [126, 280], "disc": [126, 177, 184], "run_meta": 126, "run_profil": 126, "save_profil": [126, 177, 178], "contains_col": 127, "col_nam": 127, "overlap": [127, 144, 145, 147, 204], "hybridsdata": 128, "numerator_column_nam": 128, "denominator_column_nam": 128, "validate_input": 128, "correctli": [128, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "solar_profile_indices_map": 128, "hybrid_indic": 128, "solar_indic": 128, "wind_profile_indices_map": 128, "wind_indic": 128, "denom": 129, "realist": [132, 134, 137, 302], "certain": [132, 137], "haircut": [132, 137, 304], "transformation_var": [132, 133, 134, 135], "strength": 132, "powercurveloss": [132, 142], "incur": [132, 137], "notimplementederror": 132, "did": [132, 137, 297], "_transformed_gener": 132, "protect": 132, "Then": 132, "super": 132, "cutout": [132, 142], "horizont": [132, 134, 137, 304], "optm_bound": [132, 133, 134, 135], "scipi": [132, 133, 134, 135, 265], "sometim": [132, 133, 134, 135, 298], "enforc": [132, 133, 134, 135], "abstractpowercurvetransform": [133, 134, 135], "exponenti": 133, "stretch": [133, 135], "mathemat": [133, 134, 135], "p_": [133, 134, 135], "expon": 133, "primarili": [133, 134, 135, 137], "closer": [133, 135], "cut": [133, 135, 136], "cutoff": [133, 134, 135, 136], "translat": [134, 137, 196, 304], "kind": 134, "simplist": 134, "hand": [134, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297], "applic": [134, 297], "blade": [134, 137], "steep": [134, 137], "almost": [134, 137, 297], "portion": [134, 137, 145, 147, 275, 283], "rapidli": [134, 137], "togeth": [134, 294], "extrem": 134, "unrealist": [134, 207, 290], "posit": [136, 204], "attempt": [136, 137, 147, 203, 204, 306], "transit": 136, "highest": 136, "adher": 136, "array_lik": [136, 137, 140], "cutin_wind_spe": 136, "cutoff_wind_spe": 136, "inf": 136, "rated_pow": 136, "__call__": 136, "wind_resourc": 137, "underli": [137, 198, 199, 200, 201], "approach": [137, 297], "realiz": 137, "board": 137, "uniformli": 137, "overli": 137, "simplifi": 137, "abl": [137, 200, 296, 297], "reach": 137, "albeit": 137, "greater": 137, "measur": 137, "annual_losses_with_transformed_power_curv": 137, "transformed_power_curv": 137, "closest": [137, 177, 209, 286], "powercurvetransform": [137, 138], "revlosseswarn": [137, 147], "meet": [137, 142, 304], "guarante": [137, 215], "especi": [137, 302], "abnorm": 137, "power_gen_no_loss": 137, "about": [138, 144, 145, 147, 149, 275, 297, 306], "horizontal_transl": [138, 141, 304], "sting": 138, "required_kei": [138, 144], "mixin": [139, 146], "anyth": [139, 146, 159, 194, 282, 298, 300], "unexpect": [139, 146], "pa": 140, "atm": 140, "wind_resource_for_sit": 140, "air": 140, "2uzjawp": 140, "densiti": [140, 200, 203, 204, 291], "2p8fjba6": 140, "exponentialstretch": 141, "horizontaltransl": 141, "linear_stretch": 141, "linearstretch": 141, "resource_data": [142, 304], "target_loss": [142, 304], "investig": 142, "cutin": 142, "consecut": 144, "unformat": [144, 149], "letter": [144, 149, 151], "abbrevi": [144, 149, 152], "whenev": [144, 145, 147], "flexibl": 144, "percent": [144, 147, 204], "total_available_hour": 144, "leverag": [145, 301], "routin": 145, "singleoutageschedul": 145, "produc": [145, 207], "reproduc": [145, 221], "perfectli": 145, "total_loss": [145, 147], "can_schedule_mor": [145, 147], "track": [145, 147, 207, 290, 300], "conflict": [145, 307], "happen": [145, 147], "enough": [145, 147, 207], "avoid": [145, 147, 189, 207, 277, 290, 307], "issu": [145, 147, 298], "long": [145, 147, 207, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "largest": [145, 297], "outageschedul": 147, "max_it": 147, "10000": 147, "main": [147, 294, 308], "termin": [147, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292], "successfulli": [147, 294, 297, 300, 308], "exce": 147, "update_when_can_schedule_from_month": 147, "update_when_can_schedul": 147, "wherev": [147, 288], "caus": 147, "find_random_outage_slic": 147, "slot": 147, "verifi": [147, 297], "entir": [147, 191, 192, 193, 200, 292, 294], "schedule_loss": 147, "outage_slic": 147, "equival": [147, 189], "month_nam": [149, 150, 151, 152, 153, 154, 155], "calendar": [149, 150, 151, 153, 154, 155], "input_nam": 149, "april": [149, 151], "jun": [149, 152, 154, 202, 208], "june": [149, 151, 152, 154], "juli": [149, 154], "known": [150, 215], "unknown": [150, 155], "unknown_month": 150, "known_month": 150, "titl": 151, "uppercas": 151, "aug": [151, 152], "mar": [152, 220], "apr": 152, "sep": 152, "oct": [152, 175], "nov": [152, 297], "dec": 152, "unabbrevi": 152, "understood": [152, 154], "abcdef": 152, "sinc": [158, 207, 290, 297], "refactor": 158, "gen_fpath": [159, 176, 177, 178, 200, 203, 204, 282, 286, 291], "nrwal_config": [159, 282], "save_raw": [159, 282], "meta_gid_col": [159, 282], "site_meta_col": [159, 282], "rep_profil": [159, 282], "manipul": [159, 282], "nrwal_key_1": [159, 282], "nrwal_value_1": [159, 282], "nrwal_key_2": [159, 282], "nrwal_value_2": [159, 282], "cf_mean_raw": [159, 282], "archiv": [159, 282], "default_meta_col": [159, 282], "gen_dset": 159, "meta_sourc": 159, "meta_out": 159, "analysis_mask": 159, "analysis_gid": 159, "run_nrwal": 159, "check_output": 159, "save_raw_dset": 159, "write_to_gen_fpath": 159, "write_meta_to_csv": 159, "csv_output": [159, 282], "dimension": [159, 204, 282, 291], "fir": [159, 282], "input_dataset_name_raw": [159, 282], "qualiti": [160, 162, 163, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "assur": [160, 162, 163, 285], "qa": [161, 162, 164, 165, 167, 168, 169, 171, 172, 273, 274, 283, 294, 308], "qc": [161, 162, 164, 165, 167, 168, 169, 171, 172, 273, 274, 283, 294, 308], "qaqcmodul": [162, 285], "too": [164, 199, 200, 201, 297, 300, 306], "create_scatter_plot": 164, "plot_typ": [164, 165, 167, 171, 172], "plotli": [164, 165, 167, 171, 172], "cmap": [164, 165, 167, 171], "viridi": [164, 167, 171], "scatter": [164, 171, 172], "colormap": [164, 165, 167, 171], "process_s": [164, 165, 169], "stat": [164, 171, 297], "summar": [164, 169, 170, 200, 204, 291], "sc_tabl": [164, 170, 172], "mean_lco": [164, 172, 200, 204, 207], "sc_plot_kwarg": 164, "scatter_plot_kwarg": 164, "exclusions_mask": 164, "excl_h5": [164, 191, 192, 193], "layers_dict": [164, 192], "kernel": [164, 165, 191, 192], "plot_step": [164, 165, 167], "sq": [164, 182, 183, 184, 185, 191, 192, 203, 204], "module_nam": 165, "out_root": 165, "sub_dir": 165, "rev_h5": 165, "excl_mask": 167, "plotbas": [167, 171, 172], "npy": 167, "exclusions_plot": 167, "out_path": [167, 169, 170, 171, 172], "seaborn": [167, 171, 172], "heatmap": 167, "px": [167, 171], "continu": [167, 171, 275, 283, 300], "imag": [167, 171, 172, 297], "heatmap_plot": 167, "exclusions_plotli": 167, "imshow": 167, "summarize_dset": 169, "statist": [169, 170], "summarize_mean": 169, "supply_curve_summari": 170, "sc_summari": 170, "median": [170, 177, 179, 286], "scatter_plot": 171, "versu": 171, "df_scatter": [171, 172], "scatter_plotli": 171, "dist_plot": 171, "distplot": 171, "dist_plotli": 171, "histogram": 171, "summary_csv": 171, "scatter_al": 171, "supply_curve_plot": 172, "cumul": 172, "supply_curve_plotli": 172, "thu": [175, 196], "49": [175, 303], "rev_summari": [176, 177, 178, 286], "cf_dset": [176, 177, 178, 200, 204, 286, 291], "rep_method": [176, 177, 178, 179, 286], "meanoid": [176, 177, 178, 179, 286], "err_method": [176, 177, 178, 179, 286], "rmse": [176, 177, 178, 179, 286], "gid_count": [176, 177, 178, 199, 200, 204, 286], "n_profil": [176, 177, 178, 179, 286], "trim": 176, "res_gid": [176, 177, 178, 200, 204, 286], "gen_gid": [176, 177, 178, 200, 204, 286], "mae": [176, 177, 178, 179, 286], "mbe": [176, 177, 178, 179, 286], "medianoid": [176, 177, 178, 179, 286], "source_profil": 176, "i_rep": [176, 179], "rep_gen_gid": 176, "rep_res_gid": 176, "get_region_rep_profil": 176, "calc": [176, 199, 200, 201], "gen_gid_rep": 176, "res_gid_rep": 176, "reg_col": [177, 178, 286], "aggregate_profil": [177, 286], "repprofilesbas": 177, "preced": [177, 204, 207, 286, 290, 291], "categor": [177, 178, 286], "ll": [177, 286], "4095": [177, 286], "99": [177, 286, 304], "98": [177, 286, 303], "90m": [177, 196, 204, 286, 291], "contribut": [177, 286], "lieu": [177, 286], "forcibli": [177, 286], "save_rev_summari": [177, 178, 286], "scaled_precis": [177, 178, 286], "uint16": [177, 178, 286], "ness": 179, "nargmin": 179, "nth": 179, "2nd": 179, "i_profil": 179, "represnt": 179, "context": [182, 183, 203], "_excl": [182, 183, 196, 199, 200, 201, 203], "h5_fpath": [183, 184], "h5_handler": 183, "abstractaggfilehandl": [183, 203], "default_h5_handl": 183, "_h5": [183, 199, 200], "agg_dset": [184, 199, 200], "concret": 184, "aggreat": [184, 199, 200], "prefer": [184, 185, 204, 300], "agg_method": [184, 199, 200], "gen_index": [184, 199, 200, 204], "agg_out": 184, "squar": [184, 199, 200, 201], "agg": [184, 198, 199, 200, 201, 204], "save_agg_to_h5": 184, "competit": [188, 189, 207, 290], "n_dir": [189, 207, 290], "revx": [189, 207, 290, 294], "winddir": [189, 207], "cardin": [189, 207, 290], "promin": [189, 207, 290], "un": [189, 191, 192, 193], "map_sc_point_gid_to_sc_gid": 189, "map_sc_gid_to_sc_point_gid": 189, "check_sc_gid": 189, "map_upwind": 189, "upwind": [189, 207, 290], "map_downwind": 189, "downwind": [189, 207, 290], "exclude_sc_point_gid": 189, "elsewher": 189, "remove_noncompetitive_farm": 189, "sort_on": [189, 207, 290], "total_lco": [189, 207, 290], "compet": 189, "check_lay": [191, 192, 193], "flight": [191, 192, 193], "exclusionlay": [191, 192, 193, 196, 294], "_excl_h5": [191, 192, 193], "excl_lay": [191, 192, 193], "_excl_lay": [191, 192, 193], "domain": [191, 192, 193, 200], "add_lay": [191, 192, 193], "nodata_lookup": [191, 192, 193], "extract_inclusion_mask": 192, "fric_h5": 193, "fric_dset": 193, "friction": [193, 200, 203, 204, 207, 291], "include_valu": 194, "include_weight": 194, "mutual": 194, "eee": 194, "50": 194, "turn": [194, 274, 284, 306], "partial": [194, 204], "suppos": 194, "input_dict": 194, "viewsh": [194, 204, 291], "federal_park": [194, 204, 291], "feder": 194, "park": 194, "thrown": [194, 217, 277], "inclusion_": 194, "include_": 194, "min_valu": 194, "_exclude_valu": 194, "_include_valu": 194, "force_includ": 194, "_force_includ": 194, "mask_typ": 194, "f_excl": 196, "dictat": [196, 200, 204], "n_row": 196, "n_col": 196, "_re": 196, "excl_shap": 196, "excl_row": 196, "excl_col": 196, "rows_of_excl": 196, "_rows_of_excl": 196, "cols_of_excl": 196, "_cols_of_excl": 196, "excl_row_slic": [196, 209], "_excl_row_slic": 196, "excl_col_slic": [196, 209], "_excl_col_slic": 196, "row_indic": 196, "That": 196, "col_indic": 196, "_point": 196, "get_sc_row_col_ind": 196, "row_ind": 196, "col_ind": 196, "get_excl_slic": 196, "row_slic": [196, 198, 199, 200, 201], "col_slic": [196, 198, 199, 200, 201], "get_flat_excl_ind": 196, "excl_ind": 196, "get_excl_point": 196, "__getitem__": 196, "excl_point": 196, "get_coord": 196, "centroid": [196, 199, 200, 201, 204], "valid_gid": 196, "gi": 196, "get_slice_lookup": 196, "sc_row_ind": [198, 199, 200, 201, 204], "sc_col_ind": [198, 199, 200, 201, 204], "get_agg_slic": [198, 199, 200, 201], "agg_h5": [199, 200], "apply_exclus": [199, 200], "supplycurvepoint": 199, "countri": [199, 200, 204], "counti": [199, 200, 204, 303], "n_gid": [199, 200, 201, 204], "bool_mask": [199, 200, 201], "exclusion_weighted_mean": [199, 200, 201], "drop_nan": [199, 201], "h5_gid_set": [199, 200, 201], "include_mask_flat": [199, 200, 201], "sc_mean": [199, 200, 201], "sc_sum": [199, 200, 201], "res_class_dset": [200, 204, 291], "res_class_bin": [200, 204, 291], "power_dens": [200, 203, 204, 291], "lcoe_dset": [200, 203, 204, 291], "h5_dset": [200, 204, 291], "friction_lay": [200, 203], "aggregationsupplycurvepoint": 200, "vsersion": 200, "frictionmask": [200, 203], "enter": [200, 203], "sever": [200, 204, 274, 291, 296, 297, 300], "flat_arr": 200, "_gen_gid": 200, "_gen": [200, 203], "res_gid_set": 200, "gen_gid_set": 200, "res_data": 200, "_res_data": 200, "gen_data": 200, "_gen_data": 200, "gen_ac_data": 200, "lcoe_data": 200, "_lcoe_data": 200, "mean_cf_ac": 200, "mean_cf_dc": 200, "mean_r": [200, 204, 291], "mean_lcoe_frict": [200, 203, 204, 207, 290, 291], "mean_frict": [200, 204], "friction_data": 200, "estim": [200, 209, 294, 295, 301], "_power_dens": [200, 203], "power_density_ac": 200, "condit": 200, "_power_density_ac": 200, "capacity_ac": [200, 207, 290], "capacity_dc": 200, "sc_point_annual_energi": 200, "h5_dsets_data": 200, "supplement": 200, "regional_multipli": 200, "mean_h5_dsets_data": 200, "point_summari": 200, "economies_of_scal": 200, "cap_cost_scal": [200, 204, 291], "abstractsupplycurvepoint": 201, "fri": [202, 208, 220], "13": [202, 220, 303], "econ_fpath": [203, 204, 291], "friction_fpath": [203, 204, 291], "friction_dset": [203, 204, 291], "surfac": [203, 204, 291, 301], "_data_lay": 203, "2km": [204, 291, 297, 302], "onto": [204, 291], "128": [204, 209, 291], "coars": [204, 291], "complementari": [204, 291], "character": [204, 291], "classif": [204, 291], "wish": [204, 291, 297], "enumer": [204, 213, 214, 215], "geograph": [204, 284, 303], "stringifi": 204, "arithmet": 204, "recalc": 204, "conting": 204, "area_sq_km": 204, "common": [204, 207, 283, 290, 301, 306], "determinist": 204, "res_class": 204, "mean_": 204, "sc_point_method": 204, "f_gen": 204, "creation": 205, "trans_gid": [206, 207, 290], "trans_typ": [206, 207, 290], "count_num_parallel_tran": [206, 207, 290], "dist_spur_km": [206, 207, 290], "cost_total_trans_usd_per_mw": [206, 207, 290], "lcot_usd_per_mwh": [206, 207, 290], "lcoe_all_in_usd_per_mwh": [206, 207, 290], "dist_export_km": [206, 207, 290], "dist_reinforcement_km": [206, 207, 290], "cost_spur_usd_per_mw": [206, 207, 290], "cost_poi_usd_per_mw": [206, 207, 290], "cost_export_usd_per_mw": [206, 207, 290], "cost_reinforcement_usd_per_mw": [206, 207, 290], "latitude_poi": [206, 207, 290], "longitude_poi": [206, 207, 290], "latitude_reinforcement_poi": [206, 207, 290], "longitude_reinforcement_poi": [206, 207, 290], "chain": 206, "sc_featur": [207, 290], "sc_capacity_col": [207, 290], "capacity_ac_mw": [207, 290], "transmiss": [207, 290, 294, 300, 302], "cheapest": [207, 290], "permut": [207, 290], "bespok": [207, 215, 273, 274, 283, 290, 294, 308], "voltag": [207, 290], "trans_sc_tabl": [207, 290], "built": [207, 209, 290, 294], "reinforc": [207, 290], "sc_aggreg": 207, "supplycurveaggreg": [207, 291], "tie": 207, "trans_capac": 207, "tranmiss": [207, 302], "translin": 207, "trans_cap_cost_per_mw": 207, "dist_km": 207, "total_lcoe_frict": [207, 290], "compute_total_lco": 207, "transmission_cost": [207, 290], "consider_frict": [207, 290], "ac_cap": [207, 290], "add_sum_col": 207, "sum_col": 207, "summat": 207, "total_cap_cost": 207, "cap_cost1": 207, "cap_cost2": 207, "full_sort": 207, "total_trans_cap_cost_per_mw": 207, "offshore_compet": [207, 290], "preserv": [207, 290], "competitivewindfarm": 207, "simple_sort": 207, "default_column": [207, 290], "decim": [207, 290], "trans_cap_cost": [207, 290], "spur": [207, 290], "prominentwinddirect": [207, 290], "ckdtree": [208, 209], "47": [208, 220], "sc_resolut": 209, "2560": 209, "dist_margin": 209, "margin": 209, "distance_threshold": 209, "nn": 209, "diagon": 209, "map_resource_gid": 209, "sc_row_indic": 209, "sc_col_indic": 209, "tree": 209, "dist_thresh": 209, "dist_tresh": 209, "save_tech_map": 209, "fpath_out": 209, "map_resourc": 209, "points_per_work": 209, "enum": [211, 212, 215], "map_to": 211, "renam": 211, "ONE": 211, "__members__": 211, "test1": 211, "one_x": 211, "test2": 211, "one_i": 211, "three": [211, 296, 298, 301], "map_from": 211, "old": 211, "two_i": 211, "click": [212, 297], "invok": [212, 297], "dash": 212, "4rehbsvf": 212, "all_nam": 212, "fieldenum": [213, 214, 215], "map_from_legaci": 215, "configwarn": 217, "never": 217, "verbos": [218, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291], "logger": [218, 265, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297], "target_modul": 219, "out_fil": [219, 269, 288, 303], "modulenam": 219, "pipelineerror": 219, "sam_resourc": 221, "psuedo": 221, "runtimeerror": [223, 236], "unclear": [227, 240], "mismatch": 228, "failur": [231, 248, 289], "extrapol": 232, "danger": 245, "suspect": 246, "poorli": 252, "problemat": 254, "stuck": 260, "loop": 260, "deprec": 261, "pytest": 266, "td": [267, 304], "shuffl": 267, "fake": 267, "tempfil": [267, 304], "temporarydirectori": [267, 304], "out_pattern": 267, "s_slice": 267, "slotted_dict": 271, "rev": [273, 295, 296, 298, 299, 300, 307, 309], "templat": [273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 294, 308], "batch": [273, 274, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 294, 295, 296, 301, 308], "hybrid": [273, 274, 283, 294, 308], "nrwal": [273, 274, 283, 294, 301, 302, 308], "good": [274, 297], "page": [274, 294, 297, 308], "our": [274, 297, 306], "config_pipelin": [274, 294, 297, 300, 308], "sequenc": 274, "report": [274, 289, 294], "progress": [274, 287], "parameter": [274, 275, 296, 298], "config_batch": [274, 296, 298], "gap": [274, 294], "guid": [274, 294, 297], "structur": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292], "parametr": 275, "config_fil": [275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291], "log_fil": [275, 283, 298, 300], "null": [275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291], "pipeline_config": 275, "set_tag": 275, "set1": 275, "set2": 275, "init_logg": [275, 283, 297, 306], "ever": [275, 283], "necessari": [275, 283, 299, 300], "input_constant_1": 275, "path_to_a_fil": 275, "third": 275, "six": 275, "rememb": 275, "config_run": 275, "config_analyz": 275, "tag": [275, 297], "concaten": 275, "dry": [275, 298], "dir": [275, 294, 297, 308], "cancel": [275, 283, 298, 300], "batch_job": 275, "monitor": [275, 283, 297, 298, 300], "background": [275, 283, 298, 300], "stdout": [275, 283, 298, 300], "stderr": [275, 283, 298, 300], "captur": [275, 283, 298, 300], "IF": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "ON": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "qo": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 299], "queue": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297], "num_test_nod": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "kestrel": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "awspc": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "au": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "catchal": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "servic": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 295, 306], "standbi": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "unspecifi": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "bigmem": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 299], "250gb": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "pb": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "short": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 299], "test_queu": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "p": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 289, 290, 291, 297, 299], "submiss": [276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291], "sumbit": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "reason": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 297], "seen": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291, 302], "suitabl": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "moder": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "yourself": [276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 291], "purge_chunk": 277, "collect_pattern": 277, "wil": 277, "surpris": 277, "byproduct": 277, "config_bespok": 283, "config_gener": 283, "config_econ": [283, 296], "config_collect": 283, "config_multi_year": 283, "config_supply_curve_aggreg": 283, "config_supply_curv": 283, "config_rep_profil": 283, "config_hybrid": 283, "config_nrw": 283, "config_qa_qc": 283, "config_script": 283, "_unique_": 283, "kick": [283, 298], "recurs": [283, 289, 298], "therein": 283, "skip": [283, 300], "rf": 284, "sf": 284, "llf": 284, "lat_lon_fpath": 284, "llc": 284, "reg": 284, "region_col": [284, 303], "queu": 287, "after_step": 287, "unaffect": 287, "cmd": 288, "my_script": 288, "ineffici": 288, "processor": 288, "period": 288, "multiprocess": 288, "share": [288, 297], "txt": [288, 297], "wget": [288, 297], "websit": 288, "org": [288, 294, 301, 308], "latest": [288, 297], "zip": 288, "download": [288, 306], "web": [288, 306], "displai": [289, 303], "folder": [289, 297, 298], "pipe_step": 289, "step1": 289, "step2": 289, "insensit": [289, 292], "sb": 289, "pend": 289, "success": [289, 297, 300], "unsubmit": 289, "not_submit": 289, "status1": 289, "status2": 289, "key1": 289, "key2": 289, "yml": [292, 297], "geospati": [294, 308], "techno": 294, "technic": [294, 308], "research": 294, "natur": 294, "highli": [294, 306], "contin": 294, "five": 294, "span": 294, "decad": 294, "broad": 294, "coverag": 294, "america": 294, "south": 294, "central": 294, "asia": 294, "middl": 294, "east": [294, 302], "africa": 294, "nation": [294, 301, 308], "analys": [294, 296], "suit": 294, "infrastructur": [294, 306], "deploy": 294, "plan": [294, 297], "consist": [294, 303], "strung": 294, "workflow": [294, 295, 297], "sent": 294, "visual": 294, "go": [294, 297], "filesystem": [294, 297, 308], "git": [294, 297, 308], "github": [294, 297, 300, 308], "env": [294, 297, 308], "cd": [294, 297, 308], "branch": [294, 308], "dev": [294, 308], "multiyear": [294, 308], "tip": [294, 308], "session": [294, 308], "scratch": [294, 307, 308], "consol": [294, 297, 308], "config_gen": [294, 297, 308], "pleas": [294, 298, 306, 308], "cite": [294, 308], "paper": [294, 308], "softwar": [294, 306, 308], "doi": [294, 301, 308], "maclaurin": [294, 308], "galen": [294, 308], "j": [294, 308], "nichola": [294, 308], "grue": [294, 308], "anthoni": [294, 308], "lopez": [294, 308], "donna": [294, 308], "heimil": [294, 308], "michael": [294, 308], "rossol": [294, 308], "grant": [294, 308], "buster": [294, 308], "travi": [294, 308], "william": [294, 308], "platform": [294, 308], "golden": [294, 308], "colorado": [294, 308], "laboratori": [294, 301, 308], "tp": [294, 308], "6a20": [294, 308], "73067": [294, 308], "2172": [294, 308], "1563140": [294, 308], "paul": [294, 308], "pinchuk": [294, 308], "brandon": [294, 308], "benton": [294, 308], "robert": [294, 308], "spencer": [294, 308], "mike": [294, 308], "bannist": [294, 308], "v0": [294, 308], "zenodo": [294, 308], "5281": [294, 308], "8247528": [294, 308], "marin": 295, "treatment": 295, "server": [295, 305, 306], "kubernet": 295, "lambda": 295, "concert": 296, "complex": 296, "suffici": [296, 297], "header": [296, 297], "tech_config": 296, "live": 297, "ec2": [297, 306], "lot": 297, "easier": [297, 306], "api": [297, 306], "west": 297, "oregon": 297, "overview": 297, "cloud9": 297, "ini": 297, "choos": 297, "master_instance_typ": 297, "t2": 297, "micro": 297, "c5": 297, "xlarg": 297, "free": 297, "tier": 297, "elig": 297, "login": 297, "eb": 297, "volum": 297, "gp2": 297, "volume_typ": 297, "ssd": 297, "1gb": 297, "16tb": 297, "volume_s": 297, "seem": 297, "fsx": 297, "unnecessari": 297, "intens": 297, "ssh": 297, "pcluster_nam": 297, "lab": 297, "miniconda": 297, "repo": [297, 309], "anaconda": 297, "miniconda3": 297, "sh": 297, "bashrc": 297, "easi": 297, "setup": [297, 298, 305, 306], "better": 297, "aws_pclust": 297, "ship": 297, "pypi": 297, "cat": 297, "id_rsa": 297, "pub": 297, "put": 297, "squeue": 297, "sinfo": 297, "spin": 297, "certainli": 297, "503": 297, "vcpu": 297, "thread": 297, "disable_hyperthread": 297, "accept": 297, "2xlarg": 297, "fleet": 297, "thought": 297, "max_task_count": 297, "admin": 297, "docker": 297, "dn_ram": 297, "sn_ram": 297, "intact": 297, "doesn": 297, "readm": 297, "start_hsd": 297, "guidanc": 297, "hdfgroup": 297, "magic": 297, "cp": 297, "passwd": 297, "hscfg": [297, 306], "hs_endpoint": [297, 306], "localhost": 297, "5101": 297, "hs_usernam": [297, 306], "hs_password": [297, 306], "hs_api_kei": [297, 306], "hs_bucket": 297, "aws_access_key_id": 297, "aws_secret_access_kei": 297, "bucket_nam": 297, "iam": 297, "privileg": 297, "root": 297, "hsds_rangeget_1": 297, "hsds_sn_1": 297, "hsds_head_1": 297, "hsds_dn_": 297, "hsinfo": 297, "snippet": 297, "wtk_conus_": 297, "curli": 297, "trial": 297, "team": 297, "pursu": 297, "rout": 297, "ve": 297, "overhead": 297, "poster": 297, "_not_": 297, "ecr": 297, "bullet": 297, "push": 297, "privat": 297, "gatewai": 297, "relat": 297, "resiz": 297, "hslambda": 297, "sublist": 297, "stdin": 297, "aws_account_id": 297, "dkr": 297, "amazonaw": 297, "lambda_build": 297, "my": 297, "uri": 297, "upload": 297, "banner": 297, "sai": 297, "yai": 297, "tab": 297, "1024mb": 297, "feel": 297, "tune": 297, "later": 297, "workload": [297, 306], "role": 297, "aws_s3_gatewai": 297, "button": 297, "status_cod": 297, "isbase64encod": 297, "statuscod": 297, "charset": 297, "utf": [297, 304], "323": 297, "tue": 297, "gmt": 297, "aiohttp": 297, "start_tim": 297, "1637706428": 297, "readi": 297, "hsds_version": 297, "0beta": 297, "greet": 297, "welcom": 297, "webservic": 297, "hdf": [297, 306], "node_count": 297, "dn_url": 297, "2ftmp": 297, "2fhs1a1c917f": 297, "2fdn_1": 297, "sock": 297, "dn_id": 297, "001": 297, "anonym": 297, "isadmin": 297, "integr": [297, 301], "stage": 297, "auto": 297, "deploi": 297, "url": 297, "xxxxxxx": 297, "hdfcloud": 297, "v3": [297, 306], "nsrdb_": 297, "endpoint": [297, 306], "hit": 297, "woohoo": 297, "17520": 297, "obvious": 297, "__name__": 297, "__main__": 297, "getlogg": 297, "fp": 297, "nsrdb_2019": 297, "demand": 297, "34": 297, "rough": 297, "budget": 297, "significantli": 297, "spot": 297, "market": 297, "influenc": 297, "datum": 297, "hr": 297, "35088": 297, "1850": 297, "49e7": 297, "77e": 297, "17544": 297, "6268": 297, "10e8": 297, "79e": 297, "4km": 297, "30min": 297, "5e05": 297, "76e9": 297, "457": 297, "155": 297, "1hr": 297, "2e6": 297, "75e10": 297, "195": 297, "66": [297, 304, 305, 306], "nine": 298, "happi": 298, "confid": 298, "goe": [298, 300], "wrong": [298, 300], "repeatedli": 298, "clean": 298, "rerun": 298, "shown": 298, "config_multi": 298, "partit": 299, "chosen": 299, "192": 299, "receiv": 299, "demonstr": [300, 302, 306, 307], "nohup": 300, "plu": 300, "had": 300, "previous": 300, "beyond": 300, "conus_trans_lines_cache_064_sj_infsink": 300, "config_suppli": 300, "databas": 300, "rev_conus_exclus": 300, "config_aggreg": 300, "hydrokinet": 301, "mhk": 301, "atlant": 301, "pacif": 301, "ocean": 301, "dx": 301, "15473": 301, "1647329": 301, "coast": 302, "pure": 302, "fictiti": 302, "substructur": 302, "semi": 302, "submers": 302, "slightli": 302, "shore": 302, "seper": 302, "definit": 303, "varieti": 303, "fpp": 303, "pp_offshor": 303, "wind_gen_standard_losses_0": [303, 304, 305, 306], "wind_gen_standard_losses_1": 303, "2114919": 303, "2114920": 303, "2114921": 303, "2114922": 303, "2114923": 303, "124402": 303, "2239321": 303, "124403": 303, "2239322": 303, "124404": 303, "2239323": 303, "124405": 303, "2239324": 303, "124406": 303, "2239325": 303, "124407": 303, "mrossol": 303, "git_repo": 303, "wi": 303, "41": [303, 304, 305, 306], "77": 303, "71": [303, 304, 305, 306], "74": [303, 304, 305, 306], "73": 303, "97": [303, 304, 305, 306], "78": [303, 304, 305, 306], "ri_100_nsrdb_2012": [303, 305], "67": 303, "79": 303, "Of": 303, "rhode": [303, 305, 306], "island": [303, 305, 306], "kent": 303, "29": 303, "32": 303, "48": 303, "52": 303, "53": [303, 306], "55": 303, "69": 303, "82": 303, "83": 303, "94": 303, "96": 303, "25": [303, 304, 305, 306], "26": 303, "44": 303, "59": 303, "68": 303, "87": 303, "plt": 304, "ri_100_wtk_2012": [304, 305], "encod": 304, "fh": 304, "power_curve_loss_info": 304, "sam_fp": 304, "turb_generic_loss": 304, "133": 304, "202": 304, "184": 304, "045": 304, "242": 304, "508": 304, "119": 304, "319": [304, 305, 306], "688": 304, "628": 304, "power_curv": 304, "site_ind": 304, "pc_wind_spe": 304, "wind_turbine_powercurve_windspe": 304, "pc_gener": 304, "wind_turbine_powercurve_powerout": 304, "new_curv": 304, "legend": 304, "xlabel": 304, "ylabel": 304, "tell": 304, "wind_farm_losses_perc": 304, "744": 304, "67402536": 304, "6644584": 304, "stream": 305, "technolog": 305, "65": [305, 306], "v1": 305, "wtk_conus_2007": 305, "538": [305, 306], "287": [305, 306], "496": [305, 306], "579": [305, 306], "486": [305, 306], "382": [305, 306], "474": [305, 306], "595": [305, 306], "339": [305, 306], "601": [305, 306], "696": [305, 306], "814": [305, 306], "724": [305, 306], "466": [305, 306], "677": [305, 306], "833": [305, 306], "823": [305, 306], "782": [305, 306], "756": [305, 306], "801": [305, 306], "pvcapac": [305, 306], "nsrdb_2018": 305, "183": [305, 306], "166": [305, 306], "177": [305, 306], "175": [305, 306], "167": [305, 306], "176": [305, 306], "scalabl": 306, "cloud": 306, "amazon": 306, "elast": 306, "slide": 306, "deck": 306, "further": 306, "enhanc": 306, "experi": 306, "might": 306, "solut": 306, "although": 306, "hsconfigur": 306, "gov": 306, "your_api_key_her": 306, "visit": 306, "signup": 306, "purpos": 306, "oserror": 306, "busi": 306, "person": 306, "nsrdb_file": 306, "nsrdb_2013": 306, "meta_data": 306, "wtk_conus_2012": 306, "nsrdb_2012": 306, "module_config": 307, "rev_statu": 307, "addition": 307, "analyst": 309, "launch": 309, "citat": 309}, "objects": {"": [[0, 0, 0, "-", "reV"]], "reV": [[1, 0, 0, "-", "SAM"], [46, 0, 0, "-", "bespoke"], [66, 0, 0, "-", "cli"], [67, 0, 0, "-", "config"], [88, 0, 0, "-", "econ"], [96, 0, 0, "-", "generation"], [103, 0, 0, "-", "handlers"], [117, 0, 0, "-", "hybrids"], [130, 0, 0, "-", "losses"], [156, 0, 0, "-", "nrwal"], [160, 0, 0, "-", "qa_qc"], [173, 0, 0, "-", "rep_profiles"], [180, 0, 0, "-", "supply_curve"], [210, 0, 0, "-", "utilities"], [272, 0, 0, "-", "version"], [274, 8, 1, "cmdoption-reV-v", "--verbose"], [274, 8, 1, "cmdoption-reV-version", "--version"], [274, 8, 1, "cmdoption-reV-v", "-v"]], "reV.SAM": [[2, 0, 0, "-", "SAM"], [6, 0, 0, "-", "defaults"], [20, 0, 0, "-", "econ"], [24, 0, 0, "-", "generation"], [42, 0, 0, "-", "version_checker"], [44, 0, 0, "-", "windbos"]], "reV.SAM.SAM": [[3, 1, 1, "", "RevPySam"], [4, 1, 1, "", "Sam"], [5, 1, 1, "", "SamResourceRetriever"]], "reV.SAM.SAM.RevPySam": [[3, 2, 1, "", "PYSAM"], [3, 3, 1, "", "assign_inputs"], [3, 4, 1, "", "attr_dict"], [3, 3, 1, "", "collect_outputs"], [3, 3, 1, "", "default"], [3, 3, 1, "", "drop_leap"], [3, 3, 1, "", "ensure_res_len"], [3, 3, 1, "", "execute"], [3, 3, 1, "", "get_sam_res"], [3, 3, 1, "", "get_time_interval"], [3, 4, 1, "", "input_list"], [3, 3, 1, "", "make_datetime"], [3, 4, 1, "", "meta"], [3, 4, 1, "", "module"], [3, 3, 1, "", "outputs_to_utc_arr"], [3, 4, 1, "", "pysam"], [3, 4, 1, "", "site"]], "reV.SAM.SAM.Sam": [[4, 2, 1, "", "PYSAM"], [4, 3, 1, "", "assign_inputs"], [4, 4, 1, "", "attr_dict"], [4, 3, 1, "", "default"], [4, 3, 1, "", "execute"], [4, 4, 1, "", "input_list"], [4, 4, 1, "", "pysam"]], "reV.SAM.SAM.SamResourceRetriever": [[5, 3, 1, "", "get"]], "reV.SAM.defaults": [[7, 1, 1, "", "AbstractDefaultFromConfigFile"], [8, 1, 1, "", "DefaultGeothermal"], [9, 1, 1, "", "DefaultLCOE"], [10, 1, 1, "", "DefaultLinearFresnelDsgIph"], [11, 1, 1, "", "DefaultMhkWave"], [12, 1, 1, "", "DefaultPvSamv1"], [13, 1, 1, "", "DefaultPvWattsv5"], [14, 1, 1, "", "DefaultPvWattsv8"], [15, 1, 1, "", "DefaultSingleOwner"], [16, 1, 1, "", "DefaultSwh"], [17, 1, 1, "", "DefaultTcsMoltenSalt"], [18, 1, 1, "", "DefaultTroughPhysicalProcessHeat"], [19, 1, 1, "", "DefaultWindPower"]], "reV.SAM.defaults.AbstractDefaultFromConfigFile": [[7, 4, 1, "", "CONFIG_FILE_NAME"], [7, 4, 1, "", "PYSAM_MODULE"], [7, 3, 1, "", "init_default_pysam_obj"]], "reV.SAM.defaults.DefaultGeothermal": [[8, 2, 1, "", "PYSAM_MODULE"], [8, 3, 1, "", "default"], [8, 3, 1, "", "init_default_pysam_obj"]], "reV.SAM.defaults.DefaultLCOE": [[9, 3, 1, "", "default"]], "reV.SAM.defaults.DefaultLinearFresnelDsgIph": [[10, 3, 1, "", "default"]], "reV.SAM.defaults.DefaultMhkWave": [[11, 3, 1, "", "default"]], "reV.SAM.defaults.DefaultPvSamv1": [[12, 3, 1, "", "default"]], "reV.SAM.defaults.DefaultPvWattsv5": [[13, 2, 1, "", "PYSAM_MODULE"], [13, 3, 1, "", "default"], [13, 3, 1, "", "init_default_pysam_obj"]], "reV.SAM.defaults.DefaultPvWattsv8": [[14, 3, 1, "", "default"]], "reV.SAM.defaults.DefaultSingleOwner": [[15, 3, 1, "", "default"]], "reV.SAM.defaults.DefaultSwh": [[16, 3, 1, "", "default"]], "reV.SAM.defaults.DefaultTcsMoltenSalt": [[17, 3, 1, "", "default"]], "reV.SAM.defaults.DefaultTroughPhysicalProcessHeat": [[18, 3, 1, "", "default"]], "reV.SAM.defaults.DefaultWindPower": [[19, 3, 1, "", "default"]], "reV.SAM.econ": [[21, 1, 1, "", "Economic"], [22, 1, 1, "", "LCOE"], [23, 1, 1, "", "SingleOwner"]], "reV.SAM.econ.Economic": [[21, 2, 1, "", "PYSAM"], [21, 3, 1, "", "assign_inputs"], [21, 4, 1, "", "attr_dict"], [21, 3, 1, "", "collect_outputs"], [21, 3, 1, "", "default"], [21, 3, 1, "", "drop_leap"], [21, 3, 1, "", "ensure_res_len"], [21, 3, 1, "", "execute"], [21, 3, 1, "", "flip_actual_irr"], [21, 3, 1, "", "get_sam_res"], [21, 3, 1, "", "get_time_interval"], [21, 3, 1, "", "gross_revenue"], [21, 4, 1, "", "input_list"], [21, 3, 1, "", "lcoe_fcr"], [21, 3, 1, "", "lcoe_nom"], [21, 3, 1, "", "lcoe_real"], [21, 3, 1, "", "make_datetime"], [21, 4, 1, "", "meta"], [21, 4, 1, "", "module"], [21, 3, 1, "", "npv"], [21, 3, 1, "", "outputs_to_utc_arr"], [21, 3, 1, "", "ppa_price"], [21, 4, 1, "", "pysam"], [21, 3, 1, "", "reV_run"], [21, 4, 1, "", "site"]], "reV.SAM.econ.LCOE": [[22, 2, 1, "", "PYSAM"], [22, 3, 1, "", "assign_inputs"], [22, 4, 1, "", "attr_dict"], [22, 3, 1, "", "collect_outputs"], [22, 3, 1, "", "default"], [22, 3, 1, "", "drop_leap"], [22, 3, 1, "", "ensure_res_len"], [22, 3, 1, "", "execute"], [22, 3, 1, "", "flip_actual_irr"], [22, 3, 1, "", "get_sam_res"], [22, 3, 1, "", "get_time_interval"], [22, 3, 1, "", "gross_revenue"], [22, 4, 1, "", "input_list"], [22, 3, 1, "", "lcoe_fcr"], [22, 3, 1, "", "lcoe_nom"], [22, 3, 1, "", "lcoe_real"], [22, 3, 1, "", "make_datetime"], [22, 4, 1, "", "meta"], [22, 4, 1, "", "module"], [22, 3, 1, "", "npv"], [22, 3, 1, "", "outputs_to_utc_arr"], [22, 3, 1, "", "ppa_price"], [22, 4, 1, "", "pysam"], [22, 3, 1, "", "reV_run"], [22, 4, 1, "", "site"]], "reV.SAM.econ.SingleOwner": [[23, 2, 1, "", "PYSAM"], [23, 3, 1, "", "assign_inputs"], [23, 4, 1, "", "attr_dict"], [23, 3, 1, "", "collect_outputs"], [23, 3, 1, "", "default"], [23, 3, 1, "", "drop_leap"], [23, 3, 1, "", "ensure_res_len"], [23, 3, 1, "", "execute"], [23, 3, 1, "", "flip_actual_irr"], [23, 3, 1, "", "get_sam_res"], [23, 3, 1, "", "get_time_interval"], [23, 3, 1, "", "gross_revenue"], [23, 4, 1, "", "input_list"], [23, 3, 1, "", "lcoe_fcr"], [23, 3, 1, "", "lcoe_nom"], [23, 3, 1, "", "lcoe_real"], [23, 3, 1, "", "make_datetime"], [23, 4, 1, "", "meta"], [23, 4, 1, "", "module"], [23, 3, 1, "", "npv"], [23, 3, 1, "", "outputs_to_utc_arr"], [23, 3, 1, "", "ppa_price"], [23, 4, 1, "", "pysam"], [23, 3, 1, "", "reV_run"], [23, 4, 1, "", "site"]], "reV.SAM.generation": [[25, 1, 1, "", "AbstractSamGeneration"], [26, 1, 1, "", "AbstractSamGenerationFromWeatherFile"], [27, 1, 1, "", "AbstractSamPv"], [28, 1, 1, "", "AbstractSamSolar"], [29, 1, 1, "", "AbstractSamWind"], [30, 1, 1, "", "Geothermal"], [31, 1, 1, "", "LinearDirectSteam"], [32, 1, 1, "", "MhkWave"], [33, 1, 1, "", "PvSamv1"], [34, 1, 1, "", "PvWattsv5"], [35, 1, 1, "", "PvWattsv7"], [36, 1, 1, "", "PvWattsv8"], [37, 1, 1, "", "SolarWaterHeat"], [38, 1, 1, "", "TcsMoltenSalt"], [39, 1, 1, "", "TroughPhysicalHeat"], [40, 1, 1, "", "WindPower"], [41, 1, 1, "", "WindPowerPD"]], "reV.SAM.generation.AbstractSamGeneration": [[25, 2, 1, "", "OUTAGE_CONFIG_KEY"], [25, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [25, 2, 1, "", "PYSAM"], [25, 3, 1, "", "add_scheduled_losses"], [25, 3, 1, "", "annual_energy"], [25, 3, 1, "", "assign_inputs"], [25, 4, 1, "", "attr_dict"], [25, 3, 1, "", "cf_mean"], [25, 3, 1, "", "cf_profile"], [25, 3, 1, "", "check_resource_data"], [25, 3, 1, "", "collect_outputs"], [25, 3, 1, "", "default"], [25, 3, 1, "", "drop_leap"], [25, 3, 1, "", "energy_yield"], [25, 3, 1, "", "ensure_res_len"], [25, 3, 1, "", "execute"], [25, 3, 1, "", "gen_profile"], [25, 3, 1, "", "get_sam_res"], [25, 3, 1, "", "get_time_interval"], [25, 4, 1, "", "has_timezone"], [25, 4, 1, "", "input_list"], [25, 3, 1, "", "make_datetime"], [25, 4, 1, "", "meta"], [25, 4, 1, "", "module"], [25, 4, 1, "", "outage_seed"], [25, 3, 1, "", "outputs_to_utc_arr"], [25, 4, 1, "", "pysam"], [25, 3, 1, "", "reV_run"], [25, 3, 1, "", "run"], [25, 3, 1, "", "run_gen_and_econ"], [25, 3, 1, "", "set_resource_data"], [25, 4, 1, "", "site"], [25, 3, 1, "", "tz_elev_check"]], "reV.SAM.generation.AbstractSamGenerationFromWeatherFile": [[26, 2, 1, "", "OUTAGE_CONFIG_KEY"], [26, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [26, 2, 1, "", "PYSAM"], [26, 4, 1, "", "PYSAM_WEATHER_TAG"], [26, 3, 1, "", "add_scheduled_losses"], [26, 3, 1, "", "annual_energy"], [26, 3, 1, "", "assign_inputs"], [26, 4, 1, "", "attr_dict"], [26, 3, 1, "", "cf_mean"], [26, 3, 1, "", "cf_profile"], [26, 3, 1, "", "check_resource_data"], [26, 3, 1, "", "collect_outputs"], [26, 3, 1, "", "default"], [26, 3, 1, "", "drop_leap"], [26, 3, 1, "", "energy_yield"], [26, 3, 1, "", "ensure_res_len"], [26, 3, 1, "", "execute"], [26, 3, 1, "", "gen_profile"], [26, 3, 1, "", "get_sam_res"], [26, 3, 1, "", "get_time_interval"], [26, 4, 1, "", "has_timezone"], [26, 4, 1, "", "input_list"], [26, 3, 1, "", "make_datetime"], [26, 4, 1, "", "meta"], [26, 4, 1, "", "module"], [26, 4, 1, "", "outage_seed"], [26, 3, 1, "", "outputs_to_utc_arr"], [26, 4, 1, "", "pysam"], [26, 3, 1, "", "reV_run"], [26, 3, 1, "", "run"], [26, 3, 1, "", "run_gen_and_econ"], [26, 3, 1, "", "set_resource_data"], [26, 4, 1, "", "site"], [26, 3, 1, "", "tz_elev_check"]], "reV.SAM.generation.AbstractSamPv": [[27, 2, 1, "", "OUTAGE_CONFIG_KEY"], [27, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [27, 2, 1, "", "PYSAM"], [27, 3, 1, "", "ac"], [27, 3, 1, "", "add_scheduled_losses"], [27, 3, 1, "", "agg_albedo"], [27, 3, 1, "", "annual_energy"], [27, 3, 1, "", "assign_inputs"], [27, 4, 1, "", "attr_dict"], [27, 3, 1, "", "cf_mean"], [27, 3, 1, "", "cf_mean_ac"], [27, 3, 1, "", "cf_profile"], [27, 3, 1, "", "cf_profile_ac"], [27, 3, 1, "", "check_resource_data"], [27, 3, 1, "", "clipped_power"], [27, 3, 1, "", "collect_outputs"], [27, 3, 1, "", "dc"], [27, 3, 1, "", "default"], [27, 3, 1, "", "drop_leap"], [27, 3, 1, "", "energy_yield"], [27, 3, 1, "", "ensure_res_len"], [27, 3, 1, "", "execute"], [27, 3, 1, "", "gen_profile"], [27, 3, 1, "", "get_sam_res"], [27, 3, 1, "", "get_time_interval"], [27, 4, 1, "", "has_timezone"], [27, 4, 1, "", "input_list"], [27, 3, 1, "", "make_datetime"], [27, 4, 1, "", "meta"], [27, 4, 1, "", "module"], [27, 4, 1, "", "outage_seed"], [27, 3, 1, "", "outputs_to_utc_arr"], [27, 4, 1, "", "pysam"], [27, 3, 1, "", "reV_run"], [27, 3, 1, "", "run"], [27, 3, 1, "", "run_gen_and_econ"], [27, 3, 1, "", "set_latitude_tilt_az"], [27, 3, 1, "", "set_resource_data"], [27, 4, 1, "", "site"], [27, 3, 1, "", "system_capacity_ac"], [27, 3, 1, "", "tz_elev_check"]], "reV.SAM.generation.AbstractSamSolar": [[28, 2, 1, "", "OUTAGE_CONFIG_KEY"], [28, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [28, 2, 1, "", "PYSAM"], [28, 3, 1, "", "add_scheduled_losses"], [28, 3, 1, "", "agg_albedo"], [28, 3, 1, "", "annual_energy"], [28, 3, 1, "", "assign_inputs"], [28, 4, 1, "", "attr_dict"], [28, 3, 1, "", "cf_mean"], [28, 3, 1, "", "cf_profile"], [28, 3, 1, "", "check_resource_data"], [28, 3, 1, "", "collect_outputs"], [28, 3, 1, "", "default"], [28, 3, 1, "", "drop_leap"], [28, 3, 1, "", "energy_yield"], [28, 3, 1, "", "ensure_res_len"], [28, 3, 1, "", "execute"], [28, 3, 1, "", "gen_profile"], [28, 3, 1, "", "get_sam_res"], [28, 3, 1, "", "get_time_interval"], [28, 4, 1, "", "has_timezone"], [28, 4, 1, "", "input_list"], [28, 3, 1, "", "make_datetime"], [28, 4, 1, "", "meta"], [28, 4, 1, "", "module"], [28, 4, 1, "", "outage_seed"], [28, 3, 1, "", "outputs_to_utc_arr"], [28, 4, 1, "", "pysam"], [28, 3, 1, "", "reV_run"], [28, 3, 1, "", "run"], [28, 3, 1, "", "run_gen_and_econ"], [28, 3, 1, "", "set_resource_data"], [28, 4, 1, "", "site"], [28, 3, 1, "", "tz_elev_check"]], "reV.SAM.generation.AbstractSamWind": [[29, 2, 1, "", "OUTAGE_CONFIG_KEY"], [29, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [29, 2, 1, "", "POWER_CURVE_CONFIG_KEY"], [29, 2, 1, "", "PYSAM"], [29, 3, 1, "", "add_power_curve_losses"], [29, 3, 1, "", "add_scheduled_losses"], [29, 3, 1, "", "annual_energy"], [29, 3, 1, "", "assign_inputs"], [29, 4, 1, "", "attr_dict"], [29, 3, 1, "", "cf_mean"], [29, 3, 1, "", "cf_profile"], [29, 3, 1, "", "check_resource_data"], [29, 3, 1, "", "collect_outputs"], [29, 3, 1, "", "default"], [29, 3, 1, "", "drop_leap"], [29, 3, 1, "", "energy_yield"], [29, 3, 1, "", "ensure_res_len"], [29, 3, 1, "", "execute"], [29, 3, 1, "", "gen_profile"], [29, 3, 1, "", "get_sam_res"], [29, 3, 1, "", "get_time_interval"], [29, 4, 1, "", "has_timezone"], [29, 4, 1, "", "input_list"], [29, 4, 1, "", "input_power_curve"], [29, 3, 1, "", "make_datetime"], [29, 4, 1, "", "meta"], [29, 4, 1, "", "module"], [29, 4, 1, "", "outage_seed"], [29, 3, 1, "", "outputs_to_utc_arr"], [29, 4, 1, "", "pysam"], [29, 3, 1, "", "reV_run"], [29, 3, 1, "", "run"], [29, 3, 1, "", "run_gen_and_econ"], [29, 3, 1, "", "set_resource_data"], [29, 4, 1, "", "site"], [29, 3, 1, "", "tz_elev_check"], [29, 3, 1, "", "wind_resource_from_input"]], "reV.SAM.generation.Geothermal": [[30, 2, 1, "", "OUTAGE_CONFIG_KEY"], [30, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [30, 2, 1, "", "PYSAM"], [30, 3, 1, "", "add_scheduled_losses"], [30, 3, 1, "", "annual_energy"], [30, 3, 1, "", "assign_inputs"], [30, 4, 1, "", "attr_dict"], [30, 3, 1, "", "cf_mean"], [30, 3, 1, "", "cf_profile"], [30, 3, 1, "", "check_resource_data"], [30, 3, 1, "", "collect_outputs"], [30, 3, 1, "", "default"], [30, 3, 1, "", "drop_leap"], [30, 3, 1, "", "energy_yield"], [30, 3, 1, "", "ensure_res_len"], [30, 3, 1, "", "execute"], [30, 3, 1, "", "gen_profile"], [30, 3, 1, "", "get_sam_res"], [30, 3, 1, "", "get_time_interval"], [30, 4, 1, "", "has_timezone"], [30, 4, 1, "", "input_list"], [30, 3, 1, "", "make_datetime"], [30, 4, 1, "", "meta"], [30, 4, 1, "", "module"], [30, 4, 1, "", "outage_seed"], [30, 3, 1, "", "outputs_to_utc_arr"], [30, 4, 1, "", "pysam"], [30, 3, 1, "", "reV_run"], [30, 3, 1, "", "run"], [30, 3, 1, "", "run_gen_and_econ"], [30, 3, 1, "", "set_resource_data"], [30, 4, 1, "", "site"], [30, 3, 1, "", "tz_elev_check"]], "reV.SAM.generation.LinearDirectSteam": [[31, 2, 1, "", "OUTAGE_CONFIG_KEY"], [31, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [31, 2, 1, "", "PYSAM"], [31, 3, 1, "", "add_scheduled_losses"], [31, 3, 1, "", "annual_energy"], [31, 3, 1, "", "assign_inputs"], [31, 4, 1, "", "attr_dict"], [31, 3, 1, "", "cf_mean"], [31, 3, 1, "", "cf_profile"], [31, 3, 1, "", "check_resource_data"], [31, 3, 1, "", "collect_outputs"], [31, 3, 1, "", "default"], [31, 3, 1, "", "drop_leap"], [31, 3, 1, "", "energy_yield"], [31, 3, 1, "", "ensure_res_len"], [31, 3, 1, "", "execute"], [31, 3, 1, "", "gen_profile"], [31, 3, 1, "", "get_sam_res"], [31, 3, 1, "", "get_time_interval"], [31, 4, 1, "", "has_timezone"], [31, 4, 1, "", "input_list"], [31, 3, 1, "", "make_datetime"], [31, 4, 1, "", "meta"], [31, 4, 1, "", "module"], [31, 4, 1, "", "outage_seed"], [31, 3, 1, "", "outputs_to_utc_arr"], [31, 4, 1, "", "pysam"], [31, 3, 1, "", "reV_run"], [31, 3, 1, "", "run"], [31, 3, 1, "", "run_gen_and_econ"], [31, 3, 1, "", "set_resource_data"], [31, 4, 1, "", "site"], [31, 3, 1, "", "tz_elev_check"]], "reV.SAM.generation.MhkWave": [[32, 2, 1, "", "OUTAGE_CONFIG_KEY"], [32, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [32, 2, 1, "", "PYSAM"], [32, 3, 1, "", "add_scheduled_losses"], [32, 3, 1, "", "annual_energy"], [32, 3, 1, "", "assign_inputs"], [32, 4, 1, "", "attr_dict"], [32, 3, 1, "", "cf_mean"], [32, 3, 1, "", "cf_profile"], [32, 3, 1, "", "check_resource_data"], [32, 3, 1, "", "collect_outputs"], [32, 3, 1, "", "default"], [32, 3, 1, "", "drop_leap"], [32, 3, 1, "", "energy_yield"], [32, 3, 1, "", "ensure_res_len"], [32, 3, 1, "", "execute"], [32, 3, 1, "", "gen_profile"], [32, 3, 1, "", "get_sam_res"], [32, 3, 1, "", "get_time_interval"], [32, 4, 1, "", "has_timezone"], [32, 4, 1, "", "input_list"], [32, 3, 1, "", "make_datetime"], [32, 4, 1, "", "meta"], [32, 4, 1, "", "module"], [32, 4, 1, "", "outage_seed"], [32, 3, 1, "", "outputs_to_utc_arr"], [32, 4, 1, "", "pysam"], [32, 3, 1, "", "reV_run"], [32, 3, 1, "", "run"], [32, 3, 1, "", "run_gen_and_econ"], [32, 3, 1, "", "set_resource_data"], [32, 4, 1, "", "site"], [32, 3, 1, "", "tz_elev_check"]], "reV.SAM.generation.PvSamv1": [[33, 2, 1, "", "OUTAGE_CONFIG_KEY"], [33, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [33, 2, 1, "", "PYSAM"], [33, 3, 1, "", "ac"], [33, 3, 1, "", "add_scheduled_losses"], [33, 3, 1, "", "agg_albedo"], [33, 3, 1, "", "annual_energy"], [33, 3, 1, "", "assign_inputs"], [33, 4, 1, "", "attr_dict"], [33, 3, 1, "", "cf_mean"], [33, 3, 1, "", "cf_mean_ac"], [33, 3, 1, "", "cf_profile"], [33, 3, 1, "", "cf_profile_ac"], [33, 3, 1, "", "check_resource_data"], [33, 3, 1, "", "clipped_power"], [33, 3, 1, "", "collect_outputs"], [33, 3, 1, "", "dc"], [33, 3, 1, "", "default"], [33, 3, 1, "", "drop_leap"], [33, 3, 1, "", "energy_yield"], [33, 3, 1, "", "ensure_res_len"], [33, 3, 1, "", "execute"], [33, 3, 1, "", "gen_profile"], [33, 3, 1, "", "get_sam_res"], [33, 3, 1, "", "get_time_interval"], [33, 4, 1, "", "has_timezone"], [33, 4, 1, "", "input_list"], [33, 3, 1, "", "make_datetime"], [33, 4, 1, "", "meta"], [33, 4, 1, "", "module"], [33, 4, 1, "", "outage_seed"], [33, 3, 1, "", "outputs_to_utc_arr"], [33, 4, 1, "", "pysam"], [33, 3, 1, "", "reV_run"], [33, 3, 1, "", "run"], [33, 3, 1, "", "run_gen_and_econ"], [33, 3, 1, "", "set_latitude_tilt_az"], [33, 3, 1, "", "set_resource_data"], [33, 4, 1, "", "site"], [33, 3, 1, "", "system_capacity_ac"], [33, 3, 1, "", "tz_elev_check"]], "reV.SAM.generation.PvWattsv5": [[34, 2, 1, "", "OUTAGE_CONFIG_KEY"], [34, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [34, 2, 1, "", "PYSAM"], [34, 3, 1, "", "ac"], [34, 3, 1, "", "add_scheduled_losses"], [34, 3, 1, "", "agg_albedo"], [34, 3, 1, "", "annual_energy"], [34, 3, 1, "", "assign_inputs"], [34, 4, 1, "", "attr_dict"], [34, 3, 1, "", "cf_mean"], [34, 3, 1, "", "cf_mean_ac"], [34, 3, 1, "", "cf_profile"], [34, 3, 1, "", "cf_profile_ac"], [34, 3, 1, "", "check_resource_data"], [34, 3, 1, "", "clipped_power"], [34, 3, 1, "", "collect_outputs"], [34, 3, 1, "", "dc"], [34, 3, 1, "", "default"], [34, 3, 1, "", "drop_leap"], [34, 3, 1, "", "energy_yield"], [34, 3, 1, "", "ensure_res_len"], [34, 3, 1, "", "execute"], [34, 3, 1, "", "gen_profile"], [34, 3, 1, "", "get_sam_res"], [34, 3, 1, "", "get_time_interval"], [34, 4, 1, "", "has_timezone"], [34, 4, 1, "", "input_list"], [34, 3, 1, "", "make_datetime"], [34, 4, 1, "", "meta"], [34, 4, 1, "", "module"], [34, 4, 1, "", "outage_seed"], [34, 3, 1, "", "outputs_to_utc_arr"], [34, 4, 1, "", "pysam"], [34, 3, 1, "", "reV_run"], [34, 3, 1, "", "run"], [34, 3, 1, "", "run_gen_and_econ"], [34, 3, 1, "", "set_latitude_tilt_az"], [34, 3, 1, "", "set_resource_data"], [34, 4, 1, "", "site"], [34, 3, 1, "", "system_capacity_ac"], [34, 3, 1, "", "tz_elev_check"]], "reV.SAM.generation.PvWattsv7": [[35, 2, 1, "", "OUTAGE_CONFIG_KEY"], [35, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [35, 2, 1, "", "PYSAM"], [35, 3, 1, "", "ac"], [35, 3, 1, "", "add_scheduled_losses"], [35, 3, 1, "", "agg_albedo"], [35, 3, 1, "", "annual_energy"], [35, 3, 1, "", "assign_inputs"], [35, 4, 1, "", "attr_dict"], [35, 3, 1, "", "cf_mean"], [35, 3, 1, "", "cf_mean_ac"], [35, 3, 1, "", "cf_profile"], [35, 3, 1, "", "cf_profile_ac"], [35, 3, 1, "", "check_resource_data"], [35, 3, 1, "", "clipped_power"], [35, 3, 1, "", "collect_outputs"], [35, 3, 1, "", "dc"], [35, 3, 1, "", "default"], [35, 3, 1, "", "drop_leap"], [35, 3, 1, "", "energy_yield"], [35, 3, 1, "", "ensure_res_len"], [35, 3, 1, "", "execute"], [35, 3, 1, "", "gen_profile"], [35, 3, 1, "", "get_sam_res"], [35, 3, 1, "", "get_time_interval"], [35, 4, 1, "", "has_timezone"], [35, 4, 1, "", "input_list"], [35, 3, 1, "", "make_datetime"], [35, 4, 1, "", "meta"], [35, 4, 1, "", "module"], [35, 4, 1, "", "outage_seed"], [35, 3, 1, "", "outputs_to_utc_arr"], [35, 4, 1, "", "pysam"], [35, 3, 1, "", "reV_run"], [35, 3, 1, "", "run"], [35, 3, 1, "", "run_gen_and_econ"], [35, 3, 1, "", "set_latitude_tilt_az"], [35, 3, 1, "", "set_resource_data"], [35, 4, 1, "", "site"], [35, 3, 1, "", "system_capacity_ac"], [35, 3, 1, "", "tz_elev_check"]], "reV.SAM.generation.PvWattsv8": [[36, 2, 1, "", "OUTAGE_CONFIG_KEY"], [36, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [36, 2, 1, "", "PYSAM"], [36, 3, 1, "", "ac"], [36, 3, 1, "", "add_scheduled_losses"], [36, 3, 1, "", "agg_albedo"], [36, 3, 1, "", "annual_energy"], [36, 3, 1, "", "assign_inputs"], [36, 4, 1, "", "attr_dict"], [36, 3, 1, "", "cf_mean"], [36, 3, 1, "", "cf_mean_ac"], [36, 3, 1, "", "cf_profile"], [36, 3, 1, "", "cf_profile_ac"], [36, 3, 1, "", "check_resource_data"], [36, 3, 1, "", "clipped_power"], [36, 3, 1, "", "collect_outputs"], [36, 3, 1, "", "dc"], [36, 3, 1, "", "default"], [36, 3, 1, "", "drop_leap"], [36, 3, 1, "", "energy_yield"], [36, 3, 1, "", "ensure_res_len"], [36, 3, 1, "", "execute"], [36, 3, 1, "", "gen_profile"], [36, 3, 1, "", "get_sam_res"], [36, 3, 1, "", "get_time_interval"], [36, 4, 1, "", "has_timezone"], [36, 4, 1, "", "input_list"], [36, 3, 1, "", "make_datetime"], [36, 4, 1, "", "meta"], [36, 4, 1, "", "module"], [36, 4, 1, "", "outage_seed"], [36, 3, 1, "", "outputs_to_utc_arr"], [36, 4, 1, "", "pysam"], [36, 3, 1, "", "reV_run"], [36, 3, 1, "", "run"], [36, 3, 1, "", "run_gen_and_econ"], [36, 3, 1, "", "set_latitude_tilt_az"], [36, 3, 1, "", "set_resource_data"], [36, 4, 1, "", "site"], [36, 3, 1, "", "system_capacity_ac"], [36, 3, 1, "", "tz_elev_check"]], "reV.SAM.generation.SolarWaterHeat": [[37, 2, 1, "", "OUTAGE_CONFIG_KEY"], [37, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [37, 2, 1, "", "PYSAM"], [37, 3, 1, "", "add_scheduled_losses"], [37, 3, 1, "", "annual_energy"], [37, 3, 1, "", "assign_inputs"], [37, 4, 1, "", "attr_dict"], [37, 3, 1, "", "cf_mean"], [37, 3, 1, "", "cf_profile"], [37, 3, 1, "", "check_resource_data"], [37, 3, 1, "", "collect_outputs"], [37, 3, 1, "", "default"], [37, 3, 1, "", "drop_leap"], [37, 3, 1, "", "energy_yield"], [37, 3, 1, "", "ensure_res_len"], [37, 3, 1, "", "execute"], [37, 3, 1, "", "gen_profile"], [37, 3, 1, "", "get_sam_res"], [37, 3, 1, "", "get_time_interval"], [37, 4, 1, "", "has_timezone"], [37, 4, 1, "", "input_list"], [37, 3, 1, "", "make_datetime"], [37, 4, 1, "", "meta"], [37, 4, 1, "", "module"], [37, 4, 1, "", "outage_seed"], [37, 3, 1, "", "outputs_to_utc_arr"], [37, 4, 1, "", "pysam"], [37, 3, 1, "", "reV_run"], [37, 3, 1, "", "run"], [37, 3, 1, "", "run_gen_and_econ"], [37, 3, 1, "", "set_resource_data"], [37, 4, 1, "", "site"], [37, 3, 1, "", "tz_elev_check"]], "reV.SAM.generation.TcsMoltenSalt": [[38, 2, 1, "", "OUTAGE_CONFIG_KEY"], [38, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [38, 2, 1, "", "PYSAM"], [38, 3, 1, "", "add_scheduled_losses"], [38, 3, 1, "", "agg_albedo"], [38, 3, 1, "", "annual_energy"], [38, 3, 1, "", "assign_inputs"], [38, 4, 1, "", "attr_dict"], [38, 3, 1, "", "cf_mean"], [38, 3, 1, "", "cf_profile"], [38, 3, 1, "", "check_resource_data"], [38, 3, 1, "", "collect_outputs"], [38, 3, 1, "", "default"], [38, 3, 1, "", "drop_leap"], [38, 3, 1, "", "energy_yield"], [38, 3, 1, "", "ensure_res_len"], [38, 3, 1, "", "execute"], [38, 3, 1, "", "gen_profile"], [38, 3, 1, "", "get_sam_res"], [38, 3, 1, "", "get_time_interval"], [38, 4, 1, "", "has_timezone"], [38, 4, 1, "", "input_list"], [38, 3, 1, "", "make_datetime"], [38, 4, 1, "", "meta"], [38, 4, 1, "", "module"], [38, 4, 1, "", "outage_seed"], [38, 3, 1, "", "outputs_to_utc_arr"], [38, 4, 1, "", "pysam"], [38, 3, 1, "", "reV_run"], [38, 3, 1, "", "run"], [38, 3, 1, "", "run_gen_and_econ"], [38, 3, 1, "", "set_resource_data"], [38, 4, 1, "", "site"], [38, 3, 1, "", "tz_elev_check"]], "reV.SAM.generation.TroughPhysicalHeat": [[39, 2, 1, "", "OUTAGE_CONFIG_KEY"], [39, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [39, 2, 1, "", "PYSAM"], [39, 3, 1, "", "add_scheduled_losses"], [39, 3, 1, "", "annual_energy"], [39, 3, 1, "", "assign_inputs"], [39, 4, 1, "", "attr_dict"], [39, 3, 1, "", "cf_mean"], [39, 3, 1, "", "cf_profile"], [39, 3, 1, "", "check_resource_data"], [39, 3, 1, "", "collect_outputs"], [39, 3, 1, "", "default"], [39, 3, 1, "", "drop_leap"], [39, 3, 1, "", "energy_yield"], [39, 3, 1, "", "ensure_res_len"], [39, 3, 1, "", "execute"], [39, 3, 1, "", "gen_profile"], [39, 3, 1, "", "get_sam_res"], [39, 3, 1, "", "get_time_interval"], [39, 4, 1, "", "has_timezone"], [39, 4, 1, "", "input_list"], [39, 3, 1, "", "make_datetime"], [39, 4, 1, "", "meta"], [39, 4, 1, "", "module"], [39, 4, 1, "", "outage_seed"], [39, 3, 1, "", "outputs_to_utc_arr"], [39, 4, 1, "", "pysam"], [39, 3, 1, "", "reV_run"], [39, 3, 1, "", "run"], [39, 3, 1, "", "run_gen_and_econ"], [39, 3, 1, "", "set_resource_data"], [39, 4, 1, "", "site"], [39, 3, 1, "", "tz_elev_check"]], "reV.SAM.generation.WindPower": [[40, 2, 1, "", "OUTAGE_CONFIG_KEY"], [40, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [40, 2, 1, "", "POWER_CURVE_CONFIG_KEY"], [40, 2, 1, "", "PYSAM"], [40, 3, 1, "", "add_power_curve_losses"], [40, 3, 1, "", "add_scheduled_losses"], [40, 3, 1, "", "annual_energy"], [40, 3, 1, "", "assign_inputs"], [40, 4, 1, "", "attr_dict"], [40, 3, 1, "", "cf_mean"], [40, 3, 1, "", "cf_profile"], [40, 3, 1, "", "check_resource_data"], [40, 3, 1, "", "collect_outputs"], [40, 3, 1, "", "default"], [40, 3, 1, "", "drop_leap"], [40, 3, 1, "", "energy_yield"], [40, 3, 1, "", "ensure_res_len"], [40, 3, 1, "", "execute"], [40, 3, 1, "", "gen_profile"], [40, 3, 1, "", "get_sam_res"], [40, 3, 1, "", "get_time_interval"], [40, 4, 1, "", "has_timezone"], [40, 4, 1, "", "input_list"], [40, 4, 1, "", "input_power_curve"], [40, 3, 1, "", "make_datetime"], [40, 4, 1, "", "meta"], [40, 4, 1, "", "module"], [40, 4, 1, "", "outage_seed"], [40, 3, 1, "", "outputs_to_utc_arr"], [40, 4, 1, "", "pysam"], [40, 3, 1, "", "reV_run"], [40, 3, 1, "", "run"], [40, 3, 1, "", "run_gen_and_econ"], [40, 3, 1, "", "set_resource_data"], [40, 4, 1, "", "site"], [40, 3, 1, "", "tz_elev_check"], [40, 3, 1, "", "wind_resource_from_input"]], "reV.SAM.generation.WindPowerPD": [[41, 2, 1, "", "OUTAGE_CONFIG_KEY"], [41, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [41, 2, 1, "", "POWER_CURVE_CONFIG_KEY"], [41, 2, 1, "", "PYSAM"], [41, 3, 1, "", "add_power_curve_losses"], [41, 3, 1, "", "add_scheduled_losses"], [41, 3, 1, "", "annual_energy"], [41, 3, 1, "", "assign_inputs"], [41, 4, 1, "", "attr_dict"], [41, 3, 1, "", "cf_mean"], [41, 3, 1, "", "cf_profile"], [41, 3, 1, "", "check_resource_data"], [41, 3, 1, "", "collect_outputs"], [41, 3, 1, "", "default"], [41, 3, 1, "", "drop_leap"], [41, 3, 1, "", "energy_yield"], [41, 3, 1, "", "ensure_res_len"], [41, 3, 1, "", "execute"], [41, 3, 1, "", "gen_profile"], [41, 3, 1, "", "get_sam_res"], [41, 3, 1, "", "get_time_interval"], [41, 4, 1, "", "has_timezone"], [41, 4, 1, "", "input_list"], [41, 4, 1, "", "input_power_curve"], [41, 3, 1, "", "make_datetime"], [41, 4, 1, "", "meta"], [41, 4, 1, "", "module"], [41, 4, 1, "", "outage_seed"], [41, 3, 1, "", "outputs_to_utc_arr"], [41, 4, 1, "", "pysam"], [41, 3, 1, "", "reV_run"], [41, 3, 1, "", "run"], [41, 3, 1, "", "run_gen_and_econ"], [41, 3, 1, "", "set_resource_data"], [41, 4, 1, "", "site"], [41, 3, 1, "", "tz_elev_check"], [41, 3, 1, "", "wind_resource_from_input"]], "reV.SAM.version_checker": [[43, 1, 1, "", "PySamVersionChecker"]], "reV.SAM.version_checker.PySamVersionChecker": [[43, 4, 1, "", "pysam_version"], [43, 3, 1, "", "run"]], "reV.SAM.windbos": [[45, 1, 1, "", "WindBos"]], "reV.SAM.windbos.WindBos": [[45, 4, 1, "", "bos_cost"], [45, 4, 1, "", "hub_height"], [45, 4, 1, "", "machine_rating"], [45, 4, 1, "", "number_of_turbines"], [45, 4, 1, "", "output"], [45, 3, 1, "", "reV_run"], [45, 4, 1, "", "rotor_diameter"], [45, 4, 1, "", "sales_tax_cost"], [45, 4, 1, "", "sales_tax_mult"], [45, 4, 1, "", "total_installed_cost"], [45, 4, 1, "", "turbine_capital_cost"], [45, 4, 1, "", "turbine_cost"]], "reV.bespoke": [[47, 0, 0, "-", "bespoke"], [52, 0, 0, "-", "cli_bespoke"], [53, 0, 0, "-", "gradient_free"], [55, 0, 0, "-", "pack_turbs"], [58, 0, 0, "-", "place_turbines"], [61, 0, 0, "-", "plotting_functions"]], "reV.bespoke.bespoke": [[48, 1, 1, "", "BespokeMultiPlantData"], [49, 1, 1, "", "BespokeSinglePlant"], [50, 1, 1, "", "BespokeSinglePlantData"], [51, 1, 1, "", "BespokeWindPlants"]], "reV.bespoke.bespoke.BespokeMultiPlantData": [[48, 3, 1, "", "get_preloaded_data_for_gid"]], "reV.bespoke.bespoke.BespokeSinglePlant": [[49, 3, 1, "", "agg_data_layers"], [49, 4, 1, "", "annual_time_indexes"], [49, 3, 1, "", "bias_correct_ws"], [49, 3, 1, "", "check_dependencies"], [49, 3, 1, "", "close"], [49, 3, 1, "", "get_lcoe_kwargs"], [49, 3, 1, "", "get_weighted_res_dir"], [49, 3, 1, "", "get_weighted_res_ts"], [49, 4, 1, "", "gid"], [49, 4, 1, "", "hub_height"], [49, 4, 1, "", "include_mask"], [49, 3, 1, "", "initialize_wind_plant_ts"], [49, 4, 1, "", "meta"], [49, 4, 1, "", "original_sam_sys_inputs"], [49, 4, 1, "", "outputs"], [49, 4, 1, "", "pixel_side_length"], [49, 4, 1, "", "plant_optimizer"], [49, 3, 1, "", "recalc_lcoe"], [49, 4, 1, "", "res_df"], [49, 3, 1, "", "run"], [49, 3, 1, "", "run_plant_optimization"], [49, 3, 1, "", "run_wind_plant_ts"], [49, 4, 1, "", "sam_sys_inputs"], [49, 4, 1, "", "sc_point"], [49, 4, 1, "", "wind_dist"], [49, 4, 1, "", "wind_plant_pd"], [49, 4, 1, "", "wind_plant_ts"], [49, 4, 1, "", "years"]], "reV.bespoke.bespoke.BespokeWindPlants": [[51, 4, 1, "", "completed_gids"], [51, 4, 1, "", "gids"], [51, 4, 1, "", "meta"], [51, 4, 1, "", "outputs"], [51, 3, 1, "", "run"], [51, 3, 1, "", "run_parallel"], [51, 3, 1, "", "run_serial"], [51, 3, 1, "", "sam_sys_inputs_with_site_data"], [51, 3, 1, "", "save_outputs"], [51, 4, 1, "", "shape"], [51, 4, 1, "", "slice_lookup"]], "reV.bespoke.gradient_free": [[54, 1, 1, "", "GeneticAlgorithm"]], "reV.bespoke.gradient_free.GeneticAlgorithm": [[54, 3, 1, "", "chromosome_2_variables"], [54, 3, 1, "", "crossover"], [54, 3, 1, "", "initialize_bits"], [54, 3, 1, "", "initialize_design_variables"], [54, 3, 1, "", "initialize_fitness"], [54, 3, 1, "", "initialize_population"], [54, 3, 1, "", "mutate"], [54, 3, 1, "", "optimize_ga"]], "reV.bespoke.pack_turbs": [[56, 1, 1, "", "PackTurbines"], [57, 5, 1, "", "smallest_area_with_tiebreakers"]], "reV.bespoke.pack_turbs.PackTurbines": [[56, 3, 1, "", "clear"], [56, 3, 1, "", "pack_turbines_poly"]], "reV.bespoke.place_turbines": [[59, 1, 1, "", "PlaceTurbines"], [60, 5, 1, "", "none_until_optimized"]], "reV.bespoke.place_turbines.PlaceTurbines": [[59, 4, 1, "", "aep"], [59, 4, 1, "", "area"], [59, 4, 1, "", "avg_sl_dist_to_center_m"], [59, 4, 1, "", "avg_sl_dist_to_medoid_m"], [59, 4, 1, "", "balance_of_system_cost"], [59, 4, 1, "", "capacity"], [59, 4, 1, "", "capacity_density"], [59, 4, 1, "", "capital_cost"], [59, 3, 1, "", "capital_cost_per_kw"], [59, 4, 1, "", "convex_hull"], [59, 4, 1, "", "convex_hull_area"], [59, 4, 1, "", "convex_hull_capacity_density"], [59, 3, 1, "", "define_exclusions"], [59, 4, 1, "", "fixed_charge_rate"], [59, 4, 1, "", "fixed_operating_cost"], [59, 4, 1, "", "full_cell_area"], [59, 4, 1, "", "full_cell_capacity_density"], [59, 3, 1, "", "initialize_packing"], [59, 4, 1, "", "nn_conn_dist_m"], [59, 4, 1, "", "nturbs"], [59, 4, 1, "", "objective"], [59, 3, 1, "", "optimization_objective"], [59, 3, 1, "", "optimize"], [59, 3, 1, "", "place_turbines"], [59, 4, 1, "", "turbine_x"], [59, 4, 1, "", "turbine_y"], [59, 4, 1, "", "variable_operating_cost"]], "reV.bespoke.plotting_functions": [[62, 5, 1, "", "get_xy"], [63, 5, 1, "", "plot_poly"], [64, 5, 1, "", "plot_turbines"], [65, 5, 1, "", "plot_windrose"]], "reV.config": [[68, 0, 0, "-", "base_analysis_config"], [70, 0, 0, "-", "base_config"], [72, 0, 0, "-", "cli_project_points"], [73, 0, 0, "-", "curtailment"], [75, 0, 0, "-", "execution"], [79, 0, 0, "-", "output_request"], [82, 0, 0, "-", "project_points"], [85, 0, 0, "-", "sam_config"]], "reV.config.base_analysis_config": [[69, 1, 1, "", "AnalysisConfig"]], "reV.config.base_analysis_config.AnalysisConfig": [[69, 2, 1, "", "REQUIREMENTS"], [69, 2, 1, "", "STR_REP"], [69, 4, 1, "", "analysis_years"], [69, 3, 1, "", "check_files"], [69, 3, 1, "", "check_overwrite_keys"], [69, 3, 1, "", "clear"], [69, 4, 1, "", "config_dir"], [69, 4, 1, "", "config_keys"], [69, 3, 1, "", "copy"], [69, 4, 1, "", "execution_control"], [69, 3, 1, "", "fromkeys"], [69, 3, 1, "", "get"], [69, 3, 1, "", "items"], [69, 3, 1, "", "keys"], [69, 4, 1, "", "log_directory"], [69, 4, 1, "", "log_level"], [69, 4, 1, "", "name"], [69, 3, 1, "", "pop"], [69, 3, 1, "", "popitem"], [69, 3, 1, "", "resolve_path"], [69, 3, 1, "", "set_self_dict"], [69, 3, 1, "", "setdefault"], [69, 3, 1, "", "str_replace_and_resolve"], [69, 3, 1, "", "update"], [69, 3, 1, "", "values"]], "reV.config.base_config": [[71, 1, 1, "", "BaseConfig"]], "reV.config.base_config.BaseConfig": [[71, 2, 1, "", "REQUIREMENTS"], [71, 2, 1, "", "STR_REP"], [71, 3, 1, "", "check_files"], [71, 3, 1, "", "check_overwrite_keys"], [71, 3, 1, "", "clear"], [71, 4, 1, "", "config_dir"], [71, 4, 1, "", "config_keys"], [71, 3, 1, "", "copy"], [71, 3, 1, "", "fromkeys"], [71, 3, 1, "", "get"], [71, 3, 1, "", "items"], [71, 3, 1, "", "keys"], [71, 4, 1, "", "log_level"], [71, 4, 1, "", "name"], [71, 3, 1, "", "pop"], [71, 3, 1, "", "popitem"], [71, 3, 1, "", "resolve_path"], [71, 3, 1, "", "set_self_dict"], [71, 3, 1, "", "setdefault"], [71, 3, 1, "", "str_replace_and_resolve"], [71, 3, 1, "", "update"], [71, 3, 1, "", "values"]], "reV.config.curtailment": [[74, 1, 1, "", "Curtailment"]], "reV.config.curtailment.Curtailment": [[74, 2, 1, "", "REQUIREMENTS"], [74, 2, 1, "", "STR_REP"], [74, 3, 1, "", "check_files"], [74, 3, 1, "", "check_overwrite_keys"], [74, 3, 1, "", "clear"], [74, 4, 1, "", "config_dir"], [74, 4, 1, "", "config_keys"], [74, 3, 1, "", "copy"], [74, 4, 1, "", "date_range"], [74, 4, 1, "", "dawn_dusk"], [74, 4, 1, "", "equation"], [74, 3, 1, "", "fromkeys"], [74, 3, 1, "", "get"], [74, 3, 1, "", "items"], [74, 3, 1, "", "keys"], [74, 4, 1, "", "log_level"], [74, 4, 1, "", "months"], [74, 4, 1, "", "name"], [74, 3, 1, "", "pop"], [74, 3, 1, "", "popitem"], [74, 4, 1, "", "precipitation"], [74, 4, 1, "", "probability"], [74, 4, 1, "", "random_seed"], [74, 3, 1, "", "resolve_path"], [74, 3, 1, "", "set_self_dict"], [74, 3, 1, "", "setdefault"], [74, 3, 1, "", "str_replace_and_resolve"], [74, 4, 1, "", "temperature"], [74, 3, 1, "", "update"], [74, 3, 1, "", "values"], [74, 4, 1, "", "wind_speed"]], "reV.config.execution": [[76, 1, 1, "", "BaseExecutionConfig"], [77, 1, 1, "", "HPCConfig"], [78, 1, 1, "", "SlurmConfig"]], "reV.config.execution.BaseExecutionConfig": [[76, 2, 1, "", "REQUIREMENTS"], [76, 2, 1, "", "STR_REP"], [76, 3, 1, "", "check_files"], [76, 3, 1, "", "check_overwrite_keys"], [76, 3, 1, "", "clear"], [76, 4, 1, "", "config_dir"], [76, 4, 1, "", "config_keys"], [76, 3, 1, "", "copy"], [76, 3, 1, "", "fromkeys"], [76, 3, 1, "", "get"], [76, 3, 1, "", "items"], [76, 3, 1, "", "keys"], [76, 4, 1, "", "log_level"], [76, 4, 1, "", "max_workers"], [76, 4, 1, "", "memory_utilization_limit"], [76, 4, 1, "", "name"], [76, 4, 1, "", "nodes"], [76, 4, 1, "", "option"], [76, 3, 1, "", "pop"], [76, 3, 1, "", "popitem"], [76, 3, 1, "", "resolve_path"], [76, 3, 1, "", "set_self_dict"], [76, 3, 1, "", "setdefault"], [76, 4, 1, "", "sh_script"], [76, 4, 1, "", "sites_per_worker"], [76, 3, 1, "", "str_replace_and_resolve"], [76, 3, 1, "", "update"], [76, 3, 1, "", "values"]], "reV.config.execution.HPCConfig": [[77, 2, 1, "", "REQUIREMENTS"], [77, 2, 1, "", "STR_REP"], [77, 4, 1, "", "allocation"], [77, 3, 1, "", "check_files"], [77, 3, 1, "", "check_overwrite_keys"], [77, 3, 1, "", "clear"], [77, 4, 1, "", "conda_env"], [77, 4, 1, "", "config_dir"], [77, 4, 1, "", "config_keys"], [77, 3, 1, "", "copy"], [77, 4, 1, "", "feature"], [77, 3, 1, "", "fromkeys"], [77, 3, 1, "", "get"], [77, 3, 1, "", "items"], [77, 3, 1, "", "keys"], [77, 4, 1, "", "log_level"], [77, 4, 1, "", "max_workers"], [77, 4, 1, "", "memory_utilization_limit"], [77, 4, 1, "", "module"], [77, 4, 1, "", "name"], [77, 4, 1, "", "nodes"], [77, 4, 1, "", "option"], [77, 3, 1, "", "pop"], [77, 3, 1, "", "popitem"], [77, 3, 1, "", "resolve_path"], [77, 3, 1, "", "set_self_dict"], [77, 3, 1, "", "setdefault"], [77, 4, 1, "", "sh_script"], [77, 4, 1, "", "sites_per_worker"], [77, 3, 1, "", "str_replace_and_resolve"], [77, 3, 1, "", "update"], [77, 3, 1, "", "values"]], "reV.config.execution.SlurmConfig": [[78, 2, 1, "", "REQUIREMENTS"], [78, 2, 1, "", "STR_REP"], [78, 4, 1, "", "allocation"], [78, 3, 1, "", "check_files"], [78, 3, 1, "", "check_overwrite_keys"], [78, 3, 1, "", "clear"], [78, 4, 1, "", "conda_env"], [78, 4, 1, "", "config_dir"], [78, 4, 1, "", "config_keys"], [78, 3, 1, "", "copy"], [78, 4, 1, "", "feature"], [78, 3, 1, "", "fromkeys"], [78, 3, 1, "", "get"], [78, 3, 1, "", "items"], [78, 3, 1, "", "keys"], [78, 4, 1, "", "log_level"], [78, 4, 1, "", "max_workers"], [78, 4, 1, "", "memory"], [78, 4, 1, "", "memory_utilization_limit"], [78, 4, 1, "", "module"], [78, 4, 1, "", "name"], [78, 4, 1, "", "nodes"], [78, 4, 1, "", "option"], [78, 3, 1, "", "pop"], [78, 3, 1, "", "popitem"], [78, 3, 1, "", "resolve_path"], [78, 3, 1, "", "set_self_dict"], [78, 3, 1, "", "setdefault"], [78, 4, 1, "", "sh_script"], [78, 4, 1, "", "sites_per_worker"], [78, 3, 1, "", "str_replace_and_resolve"], [78, 3, 1, "", "update"], [78, 3, 1, "", "values"], [78, 4, 1, "", "walltime"]], "reV.config.output_request": [[80, 1, 1, "", "OutputRequest"], [81, 1, 1, "", "SAMOutputRequest"]], "reV.config.output_request.OutputRequest": [[80, 3, 1, "", "__add__"], [80, 3, 1, "", "__mul__"], [80, 3, 1, "", "append"], [80, 3, 1, "", "clear"], [80, 3, 1, "", "copy"], [80, 3, 1, "", "count"], [80, 3, 1, "", "extend"], [80, 3, 1, "", "index"], [80, 3, 1, "", "insert"], [80, 3, 1, "", "pop"], [80, 3, 1, "", "remove"], [80, 3, 1, "", "reverse"], [80, 3, 1, "", "sort"]], "reV.config.output_request.SAMOutputRequest": [[81, 3, 1, "", "__add__"], [81, 3, 1, "", "__mul__"], [81, 3, 1, "", "append"], [81, 3, 1, "", "clear"], [81, 3, 1, "", "copy"], [81, 3, 1, "", "count"], [81, 3, 1, "", "extend"], [81, 3, 1, "", "index"], [81, 3, 1, "", "insert"], [81, 3, 1, "", "pop"], [81, 3, 1, "", "remove"], [81, 3, 1, "", "reverse"], [81, 3, 1, "", "sort"]], "reV.config.project_points": [[83, 1, 1, "", "PointsControl"], [84, 1, 1, "", "ProjectPoints"]], "reV.config.project_points.PointsControl": [[83, 4, 1, "", "N"], [83, 4, 1, "", "project_points"], [83, 4, 1, "", "sites"], [83, 4, 1, "", "sites_per_split"], [83, 3, 1, "", "split"], [83, 4, 1, "", "split_range"]], "reV.config.project_points.ProjectPoints": [[84, 4, 1, "", "all_sam_input_keys"], [84, 4, 1, "", "curtailment"], [84, 4, 1, "", "d"], [84, 4, 1, "", "df"], [84, 3, 1, "", "get_sites_from_config"], [84, 4, 1, "", "gids"], [84, 4, 1, "", "h"], [84, 3, 1, "", "index"], [84, 3, 1, "", "join_df"], [84, 3, 1, "", "lat_lon_coords"], [84, 3, 1, "", "regions"], [84, 4, 1, "", "sam_config_ids"], [84, 4, 1, "", "sam_config_obj"], [84, 4, 1, "", "sam_inputs"], [84, 4, 1, "", "sites"], [84, 4, 1, "", "sites_as_slice"], [84, 3, 1, "", "split"], [84, 4, 1, "", "tech"]], "reV.config.sam_config": [[86, 1, 1, "", "SAMConfig"], [87, 1, 1, "", "SAMInputsChecker"]], "reV.config.sam_config.SAMConfig": [[86, 2, 1, "", "REQUIREMENTS"], [86, 2, 1, "", "STR_REP"], [86, 4, 1, "", "bifacial"], [86, 3, 1, "", "check_files"], [86, 3, 1, "", "check_overwrite_keys"], [86, 3, 1, "", "clear"], [86, 4, 1, "", "clearsky"], [86, 4, 1, "", "config_dir"], [86, 4, 1, "", "config_keys"], [86, 3, 1, "", "copy"], [86, 4, 1, "", "downscale"], [86, 3, 1, "", "fromkeys"], [86, 3, 1, "", "get"], [86, 4, 1, "", "icing"], [86, 4, 1, "", "inputs"], [86, 3, 1, "", "items"], [86, 3, 1, "", "keys"], [86, 4, 1, "", "log_level"], [86, 4, 1, "", "name"], [86, 3, 1, "", "pop"], [86, 3, 1, "", "popitem"], [86, 3, 1, "", "resolve_path"], [86, 3, 1, "", "set_self_dict"], [86, 3, 1, "", "setdefault"], [86, 3, 1, "", "str_replace_and_resolve"], [86, 4, 1, "", "time_index_step"], [86, 3, 1, "", "update"], [86, 3, 1, "", "values"]], "reV.config.sam_config.SAMInputsChecker": [[87, 3, 1, "", "check"], [87, 3, 1, "", "check_pv"]], "reV.econ": [[89, 0, 0, "-", "cli_econ"], [90, 0, 0, "-", "econ"], [92, 0, 0, "-", "economies_of_scale"], [94, 0, 0, "-", "utilities"]], "reV.econ.econ": [[91, 1, 1, "", "Econ"]], "reV.econ.econ.Econ": [[91, 2, 1, "", "OPTIONS"], [91, 3, 1, "", "add_site_data_to_pp"], [91, 4, 1, "", "cf_file"], [91, 3, 1, "", "flush"], [91, 3, 1, "", "get_pc"], [91, 3, 1, "", "get_sites_per_worker"], [91, 3, 1, "", "handle_leap_ti"], [91, 4, 1, "", "meta"], [91, 4, 1, "", "out"], [91, 4, 1, "", "out_chunk"], [91, 4, 1, "", "output_request"], [91, 4, 1, "", "points_control"], [91, 4, 1, "", "project_points"], [91, 3, 1, "", "run"], [91, 4, 1, "", "run_attrs"], [91, 4, 1, "", "sam_configs"], [91, 4, 1, "", "sam_metas"], [91, 4, 1, "", "sam_module"], [91, 4, 1, "", "site_data"], [91, 3, 1, "", "site_index"], [91, 4, 1, "", "site_limit"], [91, 4, 1, "", "site_mem"], [91, 4, 1, "", "tech"], [91, 4, 1, "", "time_index"], [91, 3, 1, "", "unpack_futures"], [91, 3, 1, "", "unpack_output"], [91, 4, 1, "", "year"]], "reV.econ.economies_of_scale": [[93, 1, 1, "", "EconomiesOfScale"]], "reV.econ.economies_of_scale.EconomiesOfScale": [[93, 4, 1, "", "aep"], [93, 4, 1, "", "capital_cost_scalar"], [93, 4, 1, "", "fcr"], [93, 4, 1, "", "foc"], [93, 3, 1, "", "is_method"], [93, 3, 1, "", "is_num"], [93, 4, 1, "", "raw_capital_cost"], [93, 4, 1, "", "raw_lcoe"], [93, 4, 1, "", "scaled_capital_cost"], [93, 4, 1, "", "scaled_lcoe"], [93, 4, 1, "", "vars"], [93, 4, 1, "", "voc"]], "reV.econ.utilities": [[95, 5, 1, "", "lcoe_fcr"]], "reV.generation": [[97, 0, 0, "-", "base"], [100, 0, 0, "-", "cli_gen"], [101, 0, 0, "-", "generation"]], "reV.generation.base": [[98, 1, 1, "", "BaseGen"], [99, 6, 1, "", "LCOE_REQUIRED_OUTPUTS"]], "reV.generation.base.BaseGen": [[98, 3, 1, "", "add_site_data_to_pp"], [98, 3, 1, "", "flush"], [98, 3, 1, "", "get_pc"], [98, 3, 1, "", "get_sites_per_worker"], [98, 3, 1, "", "handle_leap_ti"], [98, 4, 1, "", "meta"], [98, 4, 1, "", "out"], [98, 4, 1, "", "out_chunk"], [98, 4, 1, "", "output_request"], [98, 4, 1, "", "points_control"], [98, 4, 1, "", "project_points"], [98, 4, 1, "", "run_attrs"], [98, 4, 1, "", "sam_configs"], [98, 4, 1, "", "sam_metas"], [98, 4, 1, "", "sam_module"], [98, 4, 1, "", "site_data"], [98, 3, 1, "", "site_index"], [98, 4, 1, "", "site_limit"], [98, 4, 1, "", "site_mem"], [98, 4, 1, "", "tech"], [98, 4, 1, "", "time_index"], [98, 3, 1, "", "unpack_futures"], [98, 3, 1, "", "unpack_output"], [98, 4, 1, "", "year"]], "reV.generation.generation": [[102, 1, 1, "", "Gen"]], "reV.generation.generation.Gen": [[102, 2, 1, "", "OPTIONS"], [102, 3, 1, "", "add_site_data_to_pp"], [102, 3, 1, "", "flush"], [102, 3, 1, "", "get_pc"], [102, 3, 1, "", "get_sites_per_worker"], [102, 3, 1, "", "handle_leap_ti"], [102, 3, 1, "", "handle_lifetime_index"], [102, 4, 1, "", "lr_res_file"], [102, 4, 1, "", "meta"], [102, 4, 1, "", "out"], [102, 4, 1, "", "out_chunk"], [102, 4, 1, "", "output_request"], [102, 4, 1, "", "points_control"], [102, 4, 1, "", "project_points"], [102, 4, 1, "", "res_file"], [102, 3, 1, "", "run"], [102, 4, 1, "", "run_attrs"], [102, 4, 1, "", "sam_configs"], [102, 4, 1, "", "sam_metas"], [102, 4, 1, "", "sam_module"], [102, 4, 1, "", "site_data"], [102, 3, 1, "", "site_index"], [102, 4, 1, "", "site_limit"], [102, 4, 1, "", "site_mem"], [102, 4, 1, "", "tech"], [102, 4, 1, "", "time_index"], [102, 3, 1, "", "unpack_futures"], [102, 3, 1, "", "unpack_output"], [102, 4, 1, "", "year"]], "reV.handlers": [[104, 0, 0, "-", "cli_collect"], [105, 0, 0, "-", "cli_multi_year"], [106, 0, 0, "-", "exclusions"], [108, 0, 0, "-", "multi_year"], [112, 0, 0, "-", "outputs"], [114, 0, 0, "-", "transmission"]], "reV.handlers.exclusions": [[107, 1, 1, "", "ExclusionLayers"]], "reV.handlers.exclusions.ExclusionLayers": [[107, 4, 1, "", "chunks"], [107, 3, 1, "", "close"], [107, 4, 1, "", "crs"], [107, 3, 1, "", "get_layer_crs"], [107, 3, 1, "", "get_layer_description"], [107, 3, 1, "", "get_layer_profile"], [107, 3, 1, "", "get_layer_values"], [107, 3, 1, "", "get_nodata_value"], [107, 4, 1, "", "h5"], [107, 4, 1, "", "iarr"], [107, 4, 1, "", "latitude"], [107, 4, 1, "", "layers"], [107, 4, 1, "", "longitude"], [107, 4, 1, "", "pixel_area"], [107, 4, 1, "", "profile"], [107, 4, 1, "", "shape"]], "reV.handlers.multi_year": [[109, 1, 1, "", "MultiYear"], [110, 1, 1, "", "MultiYearGroup"], [111, 5, 1, "", "my_collect_groups"]], "reV.handlers.multi_year.MultiYear": [[109, 3, 1, "", "CV"], [109, 4, 1, "", "SAM_configs"], [109, 3, 1, "", "add_dataset"], [109, 4, 1, "", "adders"], [109, 4, 1, "", "attrs"], [109, 4, 1, "", "chunks"], [109, 3, 1, "", "close"], [109, 3, 1, "", "collect"], [109, 3, 1, "", "collect_means"], [109, 3, 1, "", "collect_profiles"], [109, 4, 1, "", "coordinates"], [109, 4, 1, "", "data_version"], [109, 4, 1, "", "datasets"], [109, 3, 1, "", "df_str_decode"], [109, 4, 1, "", "dsets"], [109, 4, 1, "", "dtypes"], [109, 4, 1, "", "full_version_record"], [109, 3, 1, "", "get_SAM_df"], [109, 3, 1, "", "get_attrs"], [109, 3, 1, "", "get_config"], [109, 3, 1, "", "get_dset_properties"], [109, 3, 1, "", "get_meta_arr"], [109, 3, 1, "", "get_scale_factor"], [109, 3, 1, "", "get_units"], [109, 4, 1, "", "global_attrs"], [109, 4, 1, "", "groups"], [109, 4, 1, "", "h5"], [109, 3, 1, "", "init_h5"], [109, 3, 1, "", "is_hsds_file"], [109, 3, 1, "", "is_profile"], [109, 3, 1, "", "is_s3_file"], [109, 4, 1, "", "lat_lon"], [109, 3, 1, "", "means"], [109, 4, 1, "", "meta"], [109, 3, 1, "", "open_dataset"], [109, 3, 1, "", "open_file"], [109, 4, 1, "", "package"], [109, 3, 1, "", "parse_source_files_pattern"], [109, 3, 1, "", "pass_through"], [109, 3, 1, "", "preload_SAM"], [109, 4, 1, "", "res_dsets"], [109, 4, 1, "", "resource_datasets"], [109, 4, 1, "", "run_attrs"], [109, 4, 1, "", "scale_factors"], [109, 3, 1, "", "set_configs"], [109, 3, 1, "", "set_version_attr"], [109, 4, 1, "", "shape"], [109, 4, 1, "", "shapes"], [109, 4, 1, "", "source"], [109, 3, 1, "", "stdev"], [109, 4, 1, "", "time_index"], [109, 4, 1, "", "units"], [109, 3, 1, "", "update_dset"], [109, 4, 1, "", "version"], [109, 4, 1, "", "writable"], [109, 3, 1, "", "write_dataset"], [109, 3, 1, "", "write_means"], [109, 3, 1, "", "write_profiles"]], "reV.handlers.multi_year.MultiYearGroup": [[110, 4, 1, "", "dsets"], [110, 4, 1, "", "name"], [110, 4, 1, "", "pass_through_dsets"], [110, 4, 1, "", "source_files"]], "reV.handlers.outputs": [[113, 1, 1, "", "Outputs"]], "reV.handlers.outputs.Outputs": [[113, 4, 1, "", "SAM_configs"], [113, 3, 1, "", "add_dataset"], [113, 4, 1, "", "adders"], [113, 4, 1, "", "attrs"], [113, 4, 1, "", "chunks"], [113, 3, 1, "", "close"], [113, 4, 1, "", "coordinates"], [113, 4, 1, "", "data_version"], [113, 4, 1, "", "datasets"], [113, 3, 1, "", "df_str_decode"], [113, 4, 1, "", "dsets"], [113, 4, 1, "", "dtypes"], [113, 4, 1, "", "full_version_record"], [113, 3, 1, "", "get_SAM_df"], [113, 3, 1, "", "get_attrs"], [113, 3, 1, "", "get_config"], [113, 3, 1, "", "get_dset_properties"], [113, 3, 1, "", "get_meta_arr"], [113, 3, 1, "", "get_scale_factor"], [113, 3, 1, "", "get_units"], [113, 4, 1, "", "global_attrs"], [113, 4, 1, "", "groups"], [113, 4, 1, "", "h5"], [113, 3, 1, "", "init_h5"], [113, 3, 1, "", "is_hsds_file"], [113, 3, 1, "", "is_s3_file"], [113, 4, 1, "", "lat_lon"], [113, 4, 1, "", "meta"], [113, 3, 1, "", "open_dataset"], [113, 3, 1, "", "open_file"], [113, 4, 1, "", "package"], [113, 3, 1, "", "preload_SAM"], [113, 4, 1, "", "res_dsets"], [113, 4, 1, "", "resource_datasets"], [113, 4, 1, "", "run_attrs"], [113, 4, 1, "", "scale_factors"], [113, 3, 1, "", "set_configs"], [113, 3, 1, "", "set_version_attr"], [113, 4, 1, "", "shape"], [113, 4, 1, "", "shapes"], [113, 4, 1, "", "source"], [113, 4, 1, "", "time_index"], [113, 4, 1, "", "units"], [113, 3, 1, "", "update_dset"], [113, 4, 1, "", "version"], [113, 4, 1, "", "writable"], [113, 3, 1, "", "write_dataset"], [113, 3, 1, "", "write_means"], [113, 3, 1, "", "write_profiles"]], "reV.handlers.transmission": [[115, 1, 1, "", "TransmissionCosts"], [116, 1, 1, "", "TransmissionFeatures"]], "reV.handlers.transmission.TransmissionCosts": [[115, 3, 1, "", "available_capacity"], [115, 3, 1, "", "check_availability"], [115, 3, 1, "", "check_feature_dependencies"], [115, 3, 1, "", "connect"], [115, 3, 1, "", "cost"], [115, 3, 1, "", "feature_capacity"], [115, 3, 1, "", "feature_costs"]], "reV.handlers.transmission.TransmissionFeatures": [[116, 3, 1, "", "available_capacity"], [116, 3, 1, "", "check_availability"], [116, 3, 1, "", "check_feature_dependencies"], [116, 3, 1, "", "connect"], [116, 3, 1, "", "cost"], [116, 3, 1, "", "feature_capacity"]], "reV.hybrids": [[118, 0, 0, "-", "cli_hybrids"], [119, 0, 0, "-", "hybrid_methods"], [124, 0, 0, "-", "hybrids"]], "reV.hybrids.hybrid_methods": [[120, 5, 1, "", "aggregate_capacity"], [121, 5, 1, "", "aggregate_capacity_factor"], [122, 5, 1, "", "aggregate_solar_capacity"], [123, 5, 1, "", "aggregate_wind_capacity"]], "reV.hybrids.hybrids": [[125, 1, 1, "", "ColNameFormatter"], [126, 1, 1, "", "Hybridization"], [127, 1, 1, "", "HybridsData"], [128, 1, 1, "", "MetaHybridizer"], [129, 1, 1, "", "RatioColumns"]], "reV.hybrids.hybrids.ColNameFormatter": [[125, 3, 1, "", "fmt"]], "reV.hybrids.hybrids.Hybridization": [[126, 4, 1, "", "hybrid_meta"], [126, 4, 1, "", "hybrid_time_index"], [126, 4, 1, "", "profiles"], [126, 3, 1, "", "run"], [126, 3, 1, "", "run_meta"], [126, 3, 1, "", "run_profiles"], [126, 3, 1, "", "save_profiles"], [126, 4, 1, "", "solar_meta"], [126, 4, 1, "", "solar_time_index"], [126, 4, 1, "", "wind_meta"], [126, 4, 1, "", "wind_time_index"]], "reV.hybrids.hybrids.HybridsData": [[127, 3, 1, "", "contains_col"], [127, 4, 1, "", "hybrid_time_index"], [127, 4, 1, "", "solar_meta"], [127, 4, 1, "", "solar_time_index"], [127, 3, 1, "", "validate"], [127, 4, 1, "", "wind_meta"], [127, 4, 1, "", "wind_time_index"]], "reV.hybrids.hybrids.MetaHybridizer": [[128, 4, 1, "", "hybrid_meta"], [128, 3, 1, "", "hybridize"], [128, 4, 1, "", "solar_profile_indices_map"], [128, 3, 1, "", "validate_input"], [128, 4, 1, "", "wind_profile_indices_map"]], "reV.hybrids.hybrids.RatioColumns": [[129, 3, 1, "", "__add__"], [129, 3, 1, "", "__mul__"], [129, 3, 1, "", "count"], [129, 2, 1, "", "denom"], [129, 2, 1, "", "fixed"], [129, 3, 1, "", "index"], [129, 2, 1, "", "num"]], "reV.losses": [[131, 0, 0, "-", "power_curve"], [143, 0, 0, "-", "scheduled"], [148, 0, 0, "-", "utils"]], "reV.losses.power_curve": [[132, 1, 1, "", "AbstractPowerCurveTransformation"], [133, 1, 1, "", "ExponentialStretching"], [134, 1, 1, "", "HorizontalTranslation"], [135, 1, 1, "", "LinearStretching"], [136, 1, 1, "", "PowerCurve"], [137, 1, 1, "", "PowerCurveLosses"], [138, 1, 1, "", "PowerCurveLossesInput"], [139, 1, 1, "", "PowerCurveLossesMixin"], [140, 1, 1, "", "PowerCurveWindResource"], [141, 6, 1, "", "TRANSFORMATIONS"], [142, 5, 1, "", "adjust_power_curve"]], "reV.losses.power_curve.AbstractPowerCurveTransformation": [[132, 3, 1, "", "apply"], [132, 4, 1, "", "bounds"], [132, 4, 1, "", "optm_bounds"], [132, 2, 1, "", "power_curve"]], "reV.losses.power_curve.ExponentialStretching": [[133, 3, 1, "", "apply"], [133, 4, 1, "", "bounds"], [133, 4, 1, "", "optm_bounds"], [133, 2, 1, "", "power_curve"]], "reV.losses.power_curve.HorizontalTranslation": [[134, 3, 1, "", "apply"], [134, 4, 1, "", "bounds"], [134, 4, 1, "", "optm_bounds"], [134, 2, 1, "", "power_curve"]], "reV.losses.power_curve.LinearStretching": [[135, 3, 1, "", "apply"], [135, 4, 1, "", "bounds"], [135, 4, 1, "", "optm_bounds"], [135, 2, 1, "", "power_curve"]], "reV.losses.power_curve.PowerCurve": [[136, 3, 1, "", "__call__"], [136, 4, 1, "", "cutin_wind_speed"], [136, 4, 1, "", "cutoff_wind_speed"], [136, 2, 1, "", "generation"], [136, 4, 1, "", "rated_power"], [136, 2, 1, "", "wind_speed"]], "reV.losses.power_curve.PowerCurveLosses": [[137, 3, 1, "", "annual_losses_with_transformed_power_curve"], [137, 3, 1, "", "fit"], [137, 2, 1, "", "power_curve"], [137, 4, 1, "", "power_gen_no_losses"], [137, 2, 1, "", "weights"], [137, 2, 1, "", "wind_resource"]], "reV.losses.power_curve.PowerCurveLossesInput": [[138, 2, 1, "", "REQUIRED_KEYS"], [138, 4, 1, "", "target"], [138, 4, 1, "", "transformation"]], "reV.losses.power_curve.PowerCurveLossesMixin": [[139, 2, 1, "", "POWER_CURVE_CONFIG_KEY"], [139, 3, 1, "", "add_power_curve_losses"], [139, 4, 1, "", "input_power_curve"], [139, 3, 1, "", "wind_resource_from_input"]], "reV.losses.power_curve.PowerCurveWindResource": [[140, 3, 1, "", "wind_resource_for_site"], [140, 4, 1, "", "wind_speeds"]], "reV.losses.scheduled": [[144, 1, 1, "", "Outage"], [145, 1, 1, "", "OutageScheduler"], [146, 1, 1, "", "ScheduledLossesMixin"], [147, 1, 1, "", "SingleOutageScheduler"]], "reV.losses.scheduled.Outage": [[144, 2, 1, "", "REQUIRED_KEYS"], [144, 4, 1, "", "allow_outage_overlap"], [144, 4, 1, "", "allowed_months"], [144, 4, 1, "", "count"], [144, 4, 1, "", "duration"], [144, 4, 1, "", "name"], [144, 4, 1, "", "percentage_of_capacity_lost"], [144, 4, 1, "", "total_available_hours"]], "reV.losses.scheduled.OutageScheduler": [[145, 3, 1, "", "calculate"], [145, 2, 1, "", "can_schedule_more"], [145, 2, 1, "", "outages"], [145, 2, 1, "", "seed"], [145, 2, 1, "", "total_losses"]], "reV.losses.scheduled.ScheduledLossesMixin": [[146, 2, 1, "", "OUTAGE_CONFIG_KEY"], [146, 2, 1, "", "OUTAGE_SEED_CONFIG_KEY"], [146, 3, 1, "", "add_scheduled_losses"], [146, 4, 1, "", "outage_seed"]], "reV.losses.scheduled.SingleOutageScheduler": [[147, 2, 1, "", "MAX_ITER"], [147, 3, 1, "", "calculate"], [147, 2, 1, "", "can_schedule_more"], [147, 3, 1, "", "find_random_outage_slice"], [147, 2, 1, "", "outage"], [147, 3, 1, "", "schedule_losses"], [147, 2, 1, "", "scheduler"], [147, 3, 1, "", "update_when_can_schedule"], [147, 3, 1, "", "update_when_can_schedule_from_months"]], "reV.losses.utils": [[149, 5, 1, "", "convert_to_full_month_names"], [150, 5, 1, "", "filter_unknown_month_names"], [151, 5, 1, "", "format_month_name"], [152, 5, 1, "", "full_month_name_from_abbr"], [153, 5, 1, "", "hourly_indices_for_months"], [154, 5, 1, "", "month_index"], [155, 5, 1, "", "month_indices"]], "reV.nrwal": [[157, 0, 0, "-", "cli_nrwal"], [158, 0, 0, "-", "nrwal"]], "reV.nrwal.nrwal": [[159, 1, 1, "", "RevNrwal"]], "reV.nrwal.nrwal.RevNrwal": [[159, 2, 1, "", "DEFAULT_META_COLS"], [159, 4, 1, "", "analysis_gids"], [159, 4, 1, "", "analysis_mask"], [159, 3, 1, "", "check_outputs"], [159, 4, 1, "", "gen_dsets"], [159, 4, 1, "", "meta_out"], [159, 4, 1, "", "meta_source"], [159, 4, 1, "", "outputs"], [159, 3, 1, "", "run"], [159, 3, 1, "", "run_nrwal"], [159, 3, 1, "", "save_raw_dsets"], [159, 4, 1, "", "time_index"], [159, 3, 1, "", "write_meta_to_csv"], [159, 3, 1, "", "write_to_gen_fpath"]], "reV.qa_qc": [[161, 0, 0, "-", "cli_qa_qc"], [163, 0, 0, "-", "qa_qc"], [166, 0, 0, "-", "summary"]], "reV.qa_qc.cli_qa_qc": [[162, 5, 1, "", "cli_qa_qc"]], "reV.qa_qc.qa_qc": [[164, 1, 1, "", "QaQc"], [165, 1, 1, "", "QaQcModule"]], "reV.qa_qc.qa_qc.QaQc": [[164, 3, 1, "", "create_scatter_plots"], [164, 3, 1, "", "exclusions_mask"], [164, 3, 1, "", "h5"], [164, 4, 1, "", "out_dir"], [164, 3, 1, "", "supply_curve"]], "reV.qa_qc.qa_qc.QaQcModule": [[165, 4, 1, "", "area_filter_kernel"], [165, 4, 1, "", "cmap"], [165, 4, 1, "", "columns"], [165, 4, 1, "", "dsets"], [165, 4, 1, "", "excl_dict"], [165, 4, 1, "", "excl_fpath"], [165, 4, 1, "", "fpath"], [165, 4, 1, "", "group"], [165, 4, 1, "", "lcoe"], [165, 4, 1, "", "min_area"], [165, 4, 1, "", "plot_step"], [165, 4, 1, "", "plot_type"], [165, 4, 1, "", "process_size"], [165, 4, 1, "", "sub_dir"]], "reV.qa_qc.summary": [[167, 1, 1, "", "ExclusionsMask"], [168, 1, 1, "", "PlotBase"], [169, 1, 1, "", "SummarizeH5"], [170, 1, 1, "", "SummarizeSupplyCurve"], [171, 1, 1, "", "SummaryPlots"], [172, 1, 1, "", "SupplyCurvePlot"]], "reV.qa_qc.summary.ExclusionsMask": [[167, 4, 1, "", "data"], [167, 3, 1, "", "exclusions_plot"], [167, 3, 1, "", "exclusions_plotly"], [167, 4, 1, "", "mask"], [167, 3, 1, "", "plot"]], "reV.qa_qc.summary.PlotBase": [[168, 4, 1, "", "data"]], "reV.qa_qc.summary.SummarizeH5": [[169, 4, 1, "", "h5_file"], [169, 3, 1, "", "run"], [169, 3, 1, "", "summarize_dset"], [169, 3, 1, "", "summarize_means"]], "reV.qa_qc.summary.SummarizeSupplyCurve": [[170, 3, 1, "", "run"], [170, 4, 1, "", "sc_table"], [170, 3, 1, "", "supply_curve_summary"]], "reV.qa_qc.summary.SummaryPlots": [[171, 4, 1, "", "columns"], [171, 4, 1, "", "data"], [171, 3, 1, "", "dist_plot"], [171, 3, 1, "", "dist_plotly"], [171, 3, 1, "", "scatter"], [171, 3, 1, "", "scatter_all"], [171, 3, 1, "", "scatter_plot"], [171, 3, 1, "", "scatter_plotly"], [171, 4, 1, "", "summary"]], "reV.qa_qc.summary.SupplyCurvePlot": [[172, 4, 1, "", "columns"], [172, 4, 1, "", "data"], [172, 3, 1, "", "plot"], [172, 4, 1, "", "sc_table"], [172, 3, 1, "", "supply_curve_plot"], [172, 3, 1, "", "supply_curve_plotly"]], "reV.rep_profiles": [[174, 0, 0, "-", "cli_rep_profiles"], [175, 0, 0, "-", "rep_profiles"]], "reV.rep_profiles.rep_profiles": [[176, 1, 1, "", "RegionRepProfile"], [177, 1, 1, "", "RepProfiles"], [178, 1, 1, "", "RepProfilesBase"], [179, 1, 1, "", "RepresentativeMethods"]], "reV.rep_profiles.rep_profiles.RegionRepProfile": [[176, 3, 1, "", "get_region_rep_profile"], [176, 4, 1, "", "i_reps"], [176, 4, 1, "", "rep_gen_gids"], [176, 4, 1, "", "rep_profiles"], [176, 4, 1, "", "rep_res_gids"], [176, 4, 1, "", "source_profiles"], [176, 4, 1, "", "weights"]], "reV.rep_profiles.rep_profiles.RepProfiles": [[177, 4, 1, "", "meta"], [177, 4, 1, "", "profiles"], [177, 3, 1, "", "run"], [177, 3, 1, "", "save_profiles"], [177, 4, 1, "", "time_index"]], "reV.rep_profiles.rep_profiles.RepProfilesBase": [[178, 4, 1, "", "meta"], [178, 4, 1, "", "profiles"], [178, 3, 1, "", "run"], [178, 3, 1, "", "save_profiles"], [178, 4, 1, "", "time_index"]], "reV.rep_profiles.rep_profiles.RepresentativeMethods": [[179, 4, 1, "", "err_methods"], [179, 3, 1, "", "mae"], [179, 3, 1, "", "mbe"], [179, 3, 1, "", "meanoid"], [179, 3, 1, "", "medianoid"], [179, 3, 1, "", "nargmin"], [179, 4, 1, "", "rep_methods"], [179, 3, 1, "", "rmse"], [179, 3, 1, "", "run"]], "reV.supply_curve": [[181, 0, 0, "-", "aggregation"], [186, 0, 0, "-", "cli_sc_aggregation"], [187, 0, 0, "-", "cli_supply_curve"], [188, 0, 0, "-", "competitive_wind_farms"], [190, 0, 0, "-", "exclusions"], [195, 0, 0, "-", "extent"], [197, 0, 0, "-", "points"], [202, 0, 0, "-", "sc_aggregation"], [205, 0, 0, "-", "supply_curve"], [208, 0, 0, "-", "tech_mapping"]], "reV.supply_curve.aggregation": [[182, 1, 1, "", "AbstractAggFileHandler"], [183, 1, 1, "", "AggFileHandler"], [184, 1, 1, "", "Aggregation"], [185, 1, 1, "", "BaseAggregation"]], "reV.supply_curve.aggregation.AbstractAggFileHandler": [[182, 3, 1, "", "close"], [182, 4, 1, "", "exclusions"], [182, 4, 1, "", "h5"]], "reV.supply_curve.aggregation.AggFileHandler": [[183, 2, 1, "", "DEFAULT_H5_HANDLER"], [183, 3, 1, "", "close"], [183, 4, 1, "", "exclusions"], [183, 4, 1, "", "h5"]], "reV.supply_curve.aggregation.Aggregation": [[184, 3, 1, "", "aggregate"], [184, 4, 1, "", "gids"], [184, 3, 1, "", "run"], [184, 3, 1, "", "run_parallel"], [184, 3, 1, "", "run_serial"], [184, 3, 1, "", "save_agg_to_h5"], [184, 4, 1, "", "shape"]], "reV.supply_curve.aggregation.BaseAggregation": [[185, 4, 1, "", "gids"], [185, 4, 1, "", "shape"]], "reV.supply_curve.competitive_wind_farms": [[189, 1, 1, "", "CompetitiveWindFarms"]], "reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms": [[189, 3, 1, "", "check_sc_gid"], [189, 3, 1, "", "exclude_sc_point_gid"], [189, 3, 1, "", "map_downwind"], [189, 3, 1, "", "map_sc_gid_to_sc_point_gid"], [189, 3, 1, "", "map_sc_point_gid_to_sc_gid"], [189, 3, 1, "", "map_upwind"], [189, 4, 1, "", "mask"], [189, 3, 1, "", "remove_noncompetitive_farm"], [189, 3, 1, "", "run"], [189, 4, 1, "", "sc_gids"], [189, 4, 1, "", "sc_point_gids"]], "reV.supply_curve.exclusions": [[191, 1, 1, "", "ExclusionMask"], [192, 1, 1, "", "ExclusionMaskFromDict"], [193, 1, 1, "", "FrictionMask"], [194, 1, 1, "", "LayerMask"]], "reV.supply_curve.exclusions.ExclusionMask": [[191, 3, 1, "", "add_layer"], [191, 3, 1, "", "close"], [191, 4, 1, "", "excl_h5"], [191, 4, 1, "", "excl_layers"], [191, 4, 1, "", "latitude"], [191, 4, 1, "", "layer_names"], [191, 4, 1, "", "layers"], [191, 4, 1, "", "longitude"], [191, 4, 1, "", "mask"], [191, 4, 1, "", "nodata_lookup"], [191, 3, 1, "", "run"], [191, 4, 1, "", "shape"]], "reV.supply_curve.exclusions.ExclusionMaskFromDict": [[192, 3, 1, "", "add_layer"], [192, 3, 1, "", "close"], [192, 4, 1, "", "excl_h5"], [192, 4, 1, "", "excl_layers"], [192, 3, 1, "", "extract_inclusion_mask"], [192, 4, 1, "", "latitude"], [192, 4, 1, "", "layer_names"], [192, 4, 1, "", "layers"], [192, 4, 1, "", "longitude"], [192, 4, 1, "", "mask"], [192, 4, 1, "", "nodata_lookup"], [192, 3, 1, "", "run"], [192, 4, 1, "", "shape"]], "reV.supply_curve.exclusions.FrictionMask": [[193, 3, 1, "", "add_layer"], [193, 3, 1, "", "close"], [193, 4, 1, "", "excl_h5"], [193, 4, 1, "", "excl_layers"], [193, 4, 1, "", "latitude"], [193, 4, 1, "", "layer_names"], [193, 4, 1, "", "layers"], [193, 4, 1, "", "longitude"], [193, 4, 1, "", "mask"], [193, 4, 1, "", "nodata_lookup"], [193, 3, 1, "", "run"], [193, 4, 1, "", "shape"]], "reV.supply_curve.exclusions.LayerMask": [[194, 4, 1, "", "exclude_values"], [194, 4, 1, "", "force_include"], [194, 4, 1, "", "include_values"], [194, 4, 1, "", "include_weights"], [194, 4, 1, "", "mask_type"], [194, 4, 1, "", "max_value"], [194, 4, 1, "", "min_value"], [194, 4, 1, "", "name"]], "reV.supply_curve.extent": [[196, 1, 1, "", "SupplyCurveExtent"]], "reV.supply_curve.extent.SupplyCurveExtent": [[196, 3, 1, "", "close"], [196, 4, 1, "", "col_indices"], [196, 4, 1, "", "cols_of_excl"], [196, 4, 1, "", "excl_col_slices"], [196, 4, 1, "", "excl_cols"], [196, 4, 1, "", "excl_row_slices"], [196, 4, 1, "", "excl_rows"], [196, 4, 1, "", "excl_shape"], [196, 4, 1, "", "exclusions"], [196, 3, 1, "", "get_coord"], [196, 3, 1, "", "get_excl_points"], [196, 3, 1, "", "get_excl_slices"], [196, 3, 1, "", "get_flat_excl_ind"], [196, 3, 1, "", "get_sc_row_col_ind"], [196, 3, 1, "", "get_slice_lookup"], [196, 4, 1, "", "lat_lon"], [196, 4, 1, "", "latitude"], [196, 4, 1, "", "longitude"], [196, 4, 1, "", "n_cols"], [196, 4, 1, "", "n_rows"], [196, 4, 1, "", "points"], [196, 4, 1, "", "resolution"], [196, 4, 1, "", "row_indices"], [196, 4, 1, "", "rows_of_excl"], [196, 4, 1, "", "shape"], [196, 3, 1, "", "valid_sc_points"]], "reV.supply_curve.points": [[198, 1, 1, "", "AbstractSupplyCurvePoint"], [199, 1, 1, "", "AggregationSupplyCurvePoint"], [200, 1, 1, "", "GenerationSupplyCurvePoint"], [201, 1, 1, "", "SupplyCurvePoint"]], "reV.supply_curve.points.AbstractSupplyCurvePoint": [[198, 4, 1, "", "cols"], [198, 3, 1, "", "get_agg_slices"], [198, 4, 1, "", "gid"], [198, 4, 1, "", "resolution"], [198, 4, 1, "", "rows"], [198, 4, 1, "", "sc_col_ind"], [198, 4, 1, "", "sc_point_gid"], [198, 4, 1, "", "sc_row_ind"]], "reV.supply_curve.points.AggregationSupplyCurvePoint": [[199, 3, 1, "", "agg_data_layers"], [199, 3, 1, "", "aggregate"], [199, 4, 1, "", "area"], [199, 4, 1, "", "bool_mask"], [199, 4, 1, "", "centroid"], [199, 3, 1, "", "close"], [199, 4, 1, "", "cols"], [199, 4, 1, "", "country"], [199, 4, 1, "", "county"], [199, 4, 1, "", "elevation"], [199, 3, 1, "", "exclusion_weighted_mean"], [199, 4, 1, "", "exclusions"], [199, 3, 1, "", "get_agg_slices"], [199, 4, 1, "", "gid"], [199, 4, 1, "", "gid_counts"], [199, 4, 1, "", "h5"], [199, 4, 1, "", "h5_gid_set"], [199, 4, 1, "", "include_mask"], [199, 4, 1, "", "include_mask_flat"], [199, 4, 1, "", "latitude"], [199, 4, 1, "", "longitude"], [199, 3, 1, "", "mean_wind_dirs"], [199, 4, 1, "", "n_gids"], [199, 4, 1, "", "offshore"], [199, 4, 1, "", "pixel_area"], [199, 4, 1, "", "resolution"], [199, 4, 1, "", "rows"], [199, 3, 1, "", "run"], [199, 4, 1, "", "sc_col_ind"], [199, 3, 1, "", "sc_mean"], [199, 4, 1, "", "sc_point_gid"], [199, 4, 1, "", "sc_row_ind"], [199, 3, 1, "", "sc_sum"], [199, 4, 1, "", "state"], [199, 4, 1, "", "summary"], [199, 4, 1, "", "timezone"]], "reV.supply_curve.points.GenerationSupplyCurvePoint": [[200, 3, 1, "", "agg_data_layers"], [200, 3, 1, "", "aggregate"], [200, 4, 1, "", "area"], [200, 4, 1, "", "bool_mask"], [200, 4, 1, "", "capacity"], [200, 4, 1, "", "capacity_ac"], [200, 4, 1, "", "capacity_dc"], [200, 4, 1, "", "centroid"], [200, 3, 1, "", "close"], [200, 4, 1, "", "cols"], [200, 4, 1, "", "country"], [200, 4, 1, "", "county"], [200, 3, 1, "", "economies_of_scale"], [200, 4, 1, "", "elevation"], [200, 3, 1, "", "exclusion_weighted_mean"], [200, 4, 1, "", "exclusions"], [200, 4, 1, "", "fixed_charge_rate"], [200, 4, 1, "", "friction_data"], [200, 4, 1, "", "gen"], [200, 4, 1, "", "gen_ac_data"], [200, 4, 1, "", "gen_data"], [200, 4, 1, "", "gen_gid_set"], [200, 3, 1, "", "get_agg_slices"], [200, 4, 1, "", "gid"], [200, 4, 1, "", "gid_counts"], [200, 4, 1, "", "h5"], [200, 4, 1, "", "h5_dsets_data"], [200, 4, 1, "", "h5_gid_set"], [200, 4, 1, "", "include_mask"], [200, 4, 1, "", "include_mask_flat"], [200, 4, 1, "", "latitude"], [200, 4, 1, "", "lcoe_data"], [200, 4, 1, "", "longitude"], [200, 4, 1, "", "mean_cf"], [200, 4, 1, "", "mean_cf_ac"], [200, 4, 1, "", "mean_cf_dc"], [200, 4, 1, "", "mean_friction"], [200, 4, 1, "", "mean_h5_dsets_data"], [200, 4, 1, "", "mean_lcoe"], [200, 4, 1, "", "mean_lcoe_friction"], [200, 4, 1, "", "mean_res"], [200, 3, 1, "", "mean_wind_dirs"], [200, 4, 1, "", "n_gids"], [200, 4, 1, "", "offshore"], [200, 4, 1, "", "pixel_area"], [200, 3, 1, "", "point_summary"], [200, 4, 1, "", "power_density"], [200, 4, 1, "", "power_density_ac"], [200, 4, 1, "", "regional_multiplier"], [200, 4, 1, "", "res_data"], [200, 4, 1, "", "res_gid_set"], [200, 4, 1, "", "resolution"], [200, 4, 1, "", "rows"], [200, 3, 1, "", "run"], [200, 4, 1, "", "sc_col_ind"], [200, 3, 1, "", "sc_mean"], [200, 4, 1, "", "sc_point_annual_energy"], [200, 4, 1, "", "sc_point_gid"], [200, 4, 1, "", "sc_row_ind"], [200, 3, 1, "", "sc_sum"], [200, 4, 1, "", "state"], [200, 3, 1, "", "summarize"], [200, 4, 1, "", "summary"], [200, 4, 1, "", "timezone"]], "reV.supply_curve.points.SupplyCurvePoint": [[201, 3, 1, "", "agg_data_layers"], [201, 3, 1, "", "aggregate"], [201, 4, 1, "", "area"], [201, 4, 1, "", "bool_mask"], [201, 4, 1, "", "centroid"], [201, 3, 1, "", "close"], [201, 4, 1, "", "cols"], [201, 3, 1, "", "exclusion_weighted_mean"], [201, 4, 1, "", "exclusions"], [201, 3, 1, "", "get_agg_slices"], [201, 4, 1, "", "gid"], [201, 4, 1, "", "h5"], [201, 4, 1, "", "h5_gid_set"], [201, 4, 1, "", "include_mask"], [201, 4, 1, "", "include_mask_flat"], [201, 4, 1, "", "latitude"], [201, 4, 1, "", "longitude"], [201, 3, 1, "", "mean_wind_dirs"], [201, 4, 1, "", "n_gids"], [201, 4, 1, "", "pixel_area"], [201, 4, 1, "", "resolution"], [201, 4, 1, "", "rows"], [201, 4, 1, "", "sc_col_ind"], [201, 3, 1, "", "sc_mean"], [201, 4, 1, "", "sc_point_gid"], [201, 4, 1, "", "sc_row_ind"], [201, 3, 1, "", "sc_sum"], [201, 4, 1, "", "summary"]], "reV.supply_curve.sc_aggregation": [[203, 1, 1, "", "SupplyCurveAggFileHandler"], [204, 1, 1, "", "SupplyCurveAggregation"]], "reV.supply_curve.sc_aggregation.SupplyCurveAggFileHandler": [[203, 3, 1, "", "close"], [203, 4, 1, "", "data_layers"], [203, 4, 1, "", "exclusions"], [203, 4, 1, "", "friction_layer"], [203, 4, 1, "", "gen"], [203, 4, 1, "", "h5"], [203, 4, 1, "", "power_density"]], "reV.supply_curve.sc_aggregation.SupplyCurveAggregation": [[204, 4, 1, "", "gids"], [204, 3, 1, "", "run"], [204, 3, 1, "", "run_parallel"], [204, 3, 1, "", "run_serial"], [204, 4, 1, "", "shape"], [204, 3, 1, "", "summarize"]], "reV.supply_curve.supply_curve": [[206, 6, 1, "", "DEFAULT_COLUMNS"], [207, 1, 1, "", "SupplyCurve"]], "reV.supply_curve.supply_curve.SupplyCurve": [[207, 3, 1, "", "add_sum_cols"], [207, 3, 1, "", "compute_total_lcoe"], [207, 3, 1, "", "full_sort"], [207, 3, 1, "", "run"], [207, 3, 1, "", "simple_sort"]], "reV.supply_curve.tech_mapping": [[209, 1, 1, "", "TechMapping"]], "reV.supply_curve.tech_mapping.TechMapping": [[209, 4, 1, "", "distance_threshold"], [209, 3, 1, "", "map_resource"], [209, 3, 1, "", "map_resource_gids"], [209, 3, 1, "", "run"], [209, 3, 1, "", "save_tech_map"]], "reV.utilities": [[211, 1, 1, "", "FieldEnum"], [212, 1, 1, "", "ModuleName"], [213, 1, 1, "", "ResourceMetaField"], [214, 1, 1, "", "SiteDataField"], [215, 1, 1, "", "SupplyCurveField"], [216, 0, 0, "-", "cli_functions"], [220, 0, 0, "-", "curtailment"], [222, 0, 0, "-", "exceptions"], [265, 5, 1, "", "log_versions"], [266, 0, 0, "-", "pytest_utils"], [270, 0, 0, "-", "slots"]], "reV.utilities.FieldEnum": [[211, 3, 1, "", "map_from"], [211, 3, 1, "", "map_to"]], "reV.utilities.ModuleName": [[212, 3, 1, "", "all_names"]], "reV.utilities.SupplyCurveField": [[215, 3, 1, "", "map_from_legacy"]], "reV.utilities.cli_functions": [[217, 5, 1, "", "format_analysis_years"], [218, 5, 1, "", "init_cli_logging"], [219, 5, 1, "", "parse_from_pipeline"]], "reV.utilities.curtailment": [[221, 5, 1, "", "curtail"]], "reV.utilities.exceptions": [[223, 7, 1, "", "CollectionRuntimeError"], [224, 7, 1, "", "CollectionValueError"], [225, 7, 1, "", "CollectionWarning"], [226, 7, 1, "", "ConfigError"], [227, 7, 1, "", "ConfigWarning"], [228, 7, 1, "", "DataShapeError"], [229, 7, 1, "", "EmptySupplyCurvePointError"], [230, 7, 1, "", "ExclusionLayerError"], [231, 7, 1, "", "ExecutionError"], [232, 7, 1, "", "ExtrapolationWarning"], [233, 7, 1, "", "FileInputError"], [234, 7, 1, "", "FileInputWarning"], [235, 7, 1, "", "HandlerKeyError"], [236, 7, 1, "", "HandlerRuntimeError"], [237, 7, 1, "", "HandlerValueError"], [238, 7, 1, "", "HandlerWarning"], [239, 7, 1, "", "InputError"], [240, 7, 1, "", "InputWarning"], [241, 7, 1, "", "JSONError"], [242, 7, 1, "", "MultiFileExclusionError"], [243, 7, 1, "", "NearestNeighborError"], [244, 7, 1, "", "OffshoreWindInputError"], [245, 7, 1, "", "OffshoreWindInputWarning"], [246, 7, 1, "", "OutputWarning"], [247, 7, 1, "", "ParallelExecutionWarning"], [248, 7, 1, "", "PipelineError"], [249, 7, 1, "", "ProjectPointsValueError"], [250, 7, 1, "", "PySAMVersionError"], [251, 7, 1, "", "PySAMVersionWarning"], [252, 7, 1, "", "ResourceError"], [253, 7, 1, "", "SAMExecutionError"], [254, 7, 1, "", "SAMExecutionWarning"], [255, 7, 1, "", "SAMInputError"], [256, 7, 1, "", "SAMInputWarning"], [257, 7, 1, "", "SlurmWarning"], [258, 7, 1, "", "SupplyCurveError"], [259, 7, 1, "", "SupplyCurveInputError"], [260, 7, 1, "", "WhileLoopPackingError"], [261, 7, 1, "", "reVDeprecationWarning"], [262, 7, 1, "", "reVError"], [263, 7, 1, "", "reVLossesValueError"], [264, 7, 1, "", "reVLossesWarning"]], "reV.utilities.pytest_utils": [[267, 5, 1, "", "make_fake_h5_chunks"], [268, 5, 1, "", "pd_date_range"], [269, 5, 1, "", "write_chunk"]], "reV.utilities.slots": [[271, 1, 1, "", "SlottedDict"]], "reV.utilities.slots.SlottedDict": [[271, 3, 1, "", "items"], [271, 3, 1, "", "keys"], [271, 3, 1, "", "update"], [271, 3, 1, "", "values"]], "reV-batch": [[275, 8, 1, "cmdoption-reV-batch-cancel", "--cancel"], [275, 8, 1, "cmdoption-reV-batch-c", "--config_file"], [275, 8, 1, "cmdoption-reV-batch-delete", "--delete"], [275, 8, 1, "cmdoption-reV-batch-dry", "--dry"], [275, 8, 1, "cmdoption-reV-batch-monitor-background", "--monitor-background"], [275, 8, 1, "cmdoption-reV-batch-c", "-c"]], "reV-bespoke": [[276, 8, 1, "cmdoption-reV-bespoke-c", "--config_file"], [276, 8, 1, "cmdoption-reV-bespoke-c", "-c"]], "reV-collect": [[277, 8, 1, "cmdoption-reV-collect-c", "--config_file"], [277, 8, 1, "cmdoption-reV-collect-c", "-c"]], "reV-econ": [[278, 8, 1, "cmdoption-reV-econ-c", "--config_file"], [278, 8, 1, "cmdoption-reV-econ-c", "-c"]], "reV-generation": [[279, 8, 1, "cmdoption-reV-generation-c", "--config_file"], [279, 8, 1, "cmdoption-reV-generation-c", "-c"]], "reV-hybrids": [[280, 8, 1, "cmdoption-reV-hybrids-c", "--config_file"], [280, 8, 1, "cmdoption-reV-hybrids-c", "-c"]], "reV-multi-year": [[281, 8, 1, "cmdoption-reV-multi-year-c", "--config_file"], [281, 8, 1, "cmdoption-reV-multi-year-c", "-c"]], "reV-nrwal": [[282, 8, 1, "cmdoption-reV-nrwal-c", "--config_file"], [282, 8, 1, "cmdoption-reV-nrwal-c", "-c"]], "reV-pipeline": [[283, 8, 1, "cmdoption-reV-pipeline-background", "--background"], [283, 8, 1, "cmdoption-reV-pipeline-cancel", "--cancel"], [283, 8, 1, "cmdoption-reV-pipeline-c", "--config_file"], [283, 8, 1, "cmdoption-reV-pipeline-monitor", "--monitor"], [283, 8, 1, "cmdoption-reV-pipeline-r", "--recursive"], [283, 8, 1, "cmdoption-reV-pipeline-c", "-c"], [283, 8, 1, "cmdoption-reV-pipeline-r", "-r"]], "reV-project-points-from-lat-lons": [[284, 8, 1, "cmdoption-reV-project-points-from-lat-lons-lat_lon_coords", "--lat_lon_coords"], [284, 8, 1, "cmdoption-reV-project-points-from-lat-lons-llf", "--lat_lon_fpath"], [284, 8, 1, "cmdoption-reV-project-points-from-lat-lons-lat_lon_coords", "--llc"], [284, 8, 1, "cmdoption-reV-project-points-from-lat-lons-llf", "-llf"]], "reV-project-points-from-regions": [[284, 8, 1, "cmdoption-reV-project-points-from-regions-r", "--region"], [284, 8, 1, "cmdoption-reV-project-points-from-regions-col", "--region_col"], [284, 8, 1, "cmdoption-reV-project-points-from-regions-regs", "--regions"], [284, 8, 1, "cmdoption-reV-project-points-from-regions-col", "-col"], [284, 8, 1, "cmdoption-reV-project-points-from-regions-r", "-r"], [284, 8, 1, "cmdoption-reV-project-points-from-regions-regs", "-regs"]], "reV-project-points": [[284, 8, 1, "cmdoption-reV-project-points-f", "--fpath"], [284, 8, 1, "cmdoption-reV-project-points-rf", "--res_file"], [284, 8, 1, "cmdoption-reV-project-points-sf", "--sam_file"], [284, 8, 1, "cmdoption-reV-project-points-v", "--verbose"], [284, 8, 1, "cmdoption-reV-project-points-version", "--version"], [284, 8, 1, "cmdoption-reV-project-points-f", "-f"], [284, 8, 1, "cmdoption-reV-project-points-rf", "-rf"], [284, 8, 1, "cmdoption-reV-project-points-sf", "-sf"], [284, 8, 1, "cmdoption-reV-project-points-v", "-v"]], "reV-qa-qc": [[285, 8, 1, "cmdoption-reV-qa-qc-c", "--config_file"], [285, 8, 1, "cmdoption-reV-qa-qc-c", "-c"]], "reV-rep-profiles": [[286, 8, 1, "cmdoption-reV-rep-profiles-c", "--config_file"], [286, 8, 1, "cmdoption-reV-rep-profiles-c", "-c"]], "reV-reset-status": [[287, 8, 1, "cmdoption-reV-reset-status-a", "--after-step"], [287, 8, 1, "cmdoption-reV-reset-status-f", "--force"], [287, 8, 1, "cmdoption-reV-reset-status-a", "-a"], [287, 8, 1, "cmdoption-reV-reset-status-f", "-f"], [287, 8, 1, "cmdoption-reV-reset-status-arg-DIRECTORY", "DIRECTORY"]], "reV-script": [[288, 8, 1, "cmdoption-reV-script-c", "--config_file"], [288, 8, 1, "cmdoption-reV-script-c", "-c"]], "reV-status": [[289, 8, 1, "cmdoption-reV-status-i", "--include"], [289, 8, 1, "cmdoption-reV-status-ps", "--pipe_steps"], [289, 8, 1, "cmdoption-reV-status-r", "--recursive"], [289, 8, 1, "cmdoption-reV-status-s", "--status"], [289, 8, 1, "cmdoption-reV-status-i", "-i"], [289, 8, 1, "cmdoption-reV-status-ps", "-ps"], [289, 8, 1, "cmdoption-reV-status-r", "-r"], [289, 8, 1, "cmdoption-reV-status-s", "-s"], [289, 8, 1, "cmdoption-reV-status-arg-FOLDER", "FOLDER"]], "reV-supply-curve-aggregation": [[291, 8, 1, "cmdoption-reV-supply-curve-aggregation-c", "--config_file"], [291, 8, 1, "cmdoption-reV-supply-curve-aggregation-c", "-c"]], "reV-supply-curve": [[290, 8, 1, "cmdoption-reV-supply-curve-c", "--config_file"], [290, 8, 1, "cmdoption-reV-supply-curve-c", "-c"]], "reV-template-configs": [[292, 8, 1, "cmdoption-reV-template-configs-t", "--type"], [292, 8, 1, "cmdoption-reV-template-configs-t", "-t"], [292, 8, 1, "cmdoption-reV-template-configs-arg-COMMANDS", "COMMANDS"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:data", "7": "py:exception", "8": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"], "8": ["std", "cmdoption", "program option"]}, "titleterms": {"rev": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 297, 301, 302, 303, 304, 305, 306, 308], "sam": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 296], "revpysam": 3, "samresourceretriev": 5, "default": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "abstractdefaultfromconfigfil": 7, "defaultgeotherm": 8, "defaultlco": 9, "defaultlinearfresneldsgiph": 10, "defaultmhkwav": 11, "defaultpvsamv1": 12, "defaultpvwattsv5": 13, "defaultpvwattsv8": 14, "defaultsingleown": 15, "defaultswh": 16, "defaulttcsmoltensalt": 17, "defaulttroughphysicalprocessheat": 18, "defaultwindpow": 19, "econ": [20, 21, 22, 23, 88, 89, 90, 91, 92, 93, 94, 95, 278], "econom": 21, "lcoe": 22, "singleown": 23, "gener": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 96, 97, 98, 99, 100, 101, 102, 279, 294, 308], "abstractsamgener": 25, "abstractsamgenerationfromweatherfil": 26, "abstractsampv": 27, "abstractsamsolar": 28, "abstractsamwind": 29, "geotherm": 30, "lineardirectsteam": 31, "mhkwave": 32, "pvsamv1": 33, "pvwattsv5": 34, "pvwattsv7": 35, "pvwattsv8": 36, "solarwaterheat": 37, "tcsmoltensalt": 38, "troughphysicalheat": 39, "windpow": [40, 305, 306], "windpowerpd": 41, "version_check": [42, 43], "pysamversioncheck": 43, "windbo": [44, 45], "bespok": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 276], "bespokemultiplantdata": 48, "bespokesinglepl": 49, "bespokesingleplantdata": 50, "bespokewindpl": 51, "cli_bespok": 52, "gradient_fre": [53, 54], "geneticalgorithm": 54, "pack_turb": [55, 56, 57], "packturbin": 56, "smallest_area_with_tiebreak": 57, "place_turbin": [58, 59, 60], "placeturbin": 59, "none_until_optim": 60, "plotting_funct": [61, 62, 63, 64, 65], "get_xi": 62, "plot_poli": 63, "plot_turbin": 64, "plot_windros": 65, "cli": [66, 273, 303, 305, 306], "config": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 292, 298], "base_analysis_config": [68, 69], "analysisconfig": 69, "base_config": [70, 71], "baseconfig": 71, "cli_project_point": 72, "curtail": [73, 74, 220, 221], "execut": [75, 76, 77, 78, 298, 300, 307], "baseexecutionconfig": 76, "hpcconfig": 77, "slurmconfig": 78, "output_request": [79, 80, 81], "outputrequest": 80, "samoutputrequest": 81, "project_point": [82, 83, 84], "pointscontrol": 83, "projectpoint": 84, "sam_config": [85, 86, 87], "samconfig": 86, "saminputscheck": 87, "cli_econ": 89, "economies_of_scal": [92, 93], "economiesofscal": 93, "unit": 93, "util": [94, 95, 148, 149, 150, 151, 152, 153, 154, 155, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271], "lcoe_fcr": 95, "base": [97, 98, 99], "basegen": 98, "lcoe_required_output": 99, "cli_gen": 100, "gen": [102, 305, 306], "handler": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "cli_collect": 104, "cli_multi_year": 105, "exclus": [106, 107, 190, 191, 192, 193, 194], "exclusionlay": 107, "multi_year": [108, 109, 110, 111], "multiyear": 109, "multiyeargroup": 110, "my_collect_group": 111, "output": [112, 113, 301, 302], "transmiss": [114, 115, 116], "transmissioncost": 115, "transmissionfeatur": 116, "hybrid": [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 280], "cli_hybrid": 118, "hybrid_method": [119, 120, 121, 122, 123], "aggregate_capac": 120, "aggregate_capacity_factor": 121, "aggregate_solar_capac": 122, "aggregate_wind_capac": 123, "colnameformatt": 125, "hybridsdata": 127, "metahybrid": 128, "ratiocolumn": 129, "loss": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 304], "power_curv": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "abstractpowercurvetransform": 132, "exponentialstretch": 133, "horizontaltransl": 134, "linearstretch": 135, "powercurv": 136, "powercurveloss": 137, "powercurvelossesinput": 138, "powercurvelossesmixin": 139, "powercurvewindresourc": 140, "transform": 141, "adjust_power_curv": 142, "schedul": [143, 144, 145, 146, 147], "outag": [144, 304], "outageschedul": 145, "scheduledlossesmixin": 146, "singleoutageschedul": 147, "convert_to_full_month_nam": 149, "filter_unknown_month_nam": 150, "format_month_nam": 151, "full_month_name_from_abbr": 152, "hourly_indices_for_month": 153, "month_index": 154, "month_indic": 155, "nrwal": [156, 157, 158, 159, 282], "cli_nrwal": 157, "revnrwal": 159, "qa_qc": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "cli_qa_qc": [161, 162], "qaqc": 164, "qaqcmodul": 165, "summari": [166, 167, 168, 169, 170, 171, 172], "exclusionsmask": 167, "plotbas": 168, "summarizeh5": 169, "summarizesupplycurv": 170, "summaryplot": 171, "supplycurveplot": 172, "rep_profil": [173, 174, 175, 176, 177, 178, 179], "cli_rep_profil": 174, "regionrepprofil": 176, "repprofil": 177, "repprofilesbas": 178, "representativemethod": 179, "supply_curv": [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209], "aggreg": [181, 182, 183, 184, 185, 291], "abstractaggfilehandl": 182, "aggfilehandl": 183, "baseaggreg": 185, "cli_sc_aggreg": 186, "cli_supply_curv": 187, "competitive_wind_farm": [188, 189], "competitivewindfarm": 189, "exclusionmask": 191, "exclusionmaskfromdict": 192, "frictionmask": 193, "layermask": 194, "extent": [195, 196], "supplycurveext": 196, "point": [197, 198, 199, 200, 201, 284, 302, 303], "abstractsupplycurvepoint": 198, "aggregationsupplycurvepoint": 199, "generationsupplycurvepoint": 200, "supplycurvepoint": 201, "sc_aggreg": [202, 203, 204], "supplycurveaggfilehandl": 203, "supplycurveaggreg": 204, "default_column": 206, "supplycurv": 207, "tech_map": [208, 209], "techmap": 209, "fieldenum": 211, "modulenam": 212, "refer": 212, "resourcemetafield": 213, "sitedatafield": 214, "supplycurvefield": 215, "cli_funct": [216, 217, 218, 219], "format_analysis_year": 217, "init_cli_log": 218, "parse_from_pipelin": 219, "except": [222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "collectionruntimeerror": 223, "collectionvalueerror": 224, "collectionwarn": 225, "configerror": 226, "configwarn": 227, "datashapeerror": 228, "emptysupplycurvepointerror": 229, "exclusionlayererror": 230, "executionerror": 231, "extrapolationwarn": 232, "fileinputerror": 233, "fileinputwarn": 234, "handlerkeyerror": 235, "handlerruntimeerror": 236, "handlervalueerror": 237, "handlerwarn": 238, "inputerror": 239, "inputwarn": 240, "jsonerror": 241, "multifileexclusionerror": 242, "nearestneighborerror": 243, "offshorewindinputerror": 244, "offshorewindinputwarn": 245, "outputwarn": 246, "parallelexecutionwarn": 247, "pipelineerror": 248, "projectpointsvalueerror": 249, "pysamversionerror": 250, "pysamversionwarn": 251, "resourceerror": 252, "samexecutionerror": 253, "samexecutionwarn": 254, "saminputerror": 255, "saminputwarn": 256, "slurmwarn": 257, "supplycurveerror": 258, "supplycurveinputerror": 259, "whilelooppackingerror": 260, "revdeprecationwarn": 261, "reverror": 262, "revlossesvalueerror": 263, "revlosseswarn": 264, "log_vers": 265, "pytest_util": [266, 267, 268, 269], "make_fake_h5_chunk": 267, "pd_date_rang": 268, "write_chunk": 269, "slot": [270, 271], "slotteddict": 271, "version": 272, "command": [273, 294, 303, 305, 306, 308], "line": [273, 294, 303, 305, 306, 308], "interfac": [273, 303, 305, 306], "batch": [275, 298], "paramet": [275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291], "collect": 277, "multi": 281, "year": 281, "pipelin": [283, 300], "project": [284, 303], "from": [284, 294, 308], "lat": 284, "lon": 284, "region": 284, "qa": 285, "qc": 285, "rep": 286, "profil": 286, "reset": 287, "statu": [287, 289], "script": 288, "suppli": [290, 291, 302], "curv": [290, 291, 302, 304], "templat": 292, "document": 294, "what": 294, "i": 294, "how": [294, 298], "doe": 294, "work": 294, "instal": [294, 308, 309], "option": [294, 308], "1": [294, 308], "pip": [294, 308], "recommend": [294, 308], "analyst": [294, 308], "2": [294, 308], "clone": [294, 308], "repo": [294, 308], "develop": [294, 308], "tool": [294, 308], "launch": [294, 308], "run": [294, 297, 298, 305, 306, 308], "time": [294, 308], "node": [294, 299, 308], "configur": [294, 308], "eagl": [294, 299, 308], "citat": [294, 308], "exampl": [295, 301, 302], "singl": [296, 304, 307], "owner": 296, "model": [296, 302], "workflow": 296, "descript": [296, 298, 302], "an": 297, "aw": 297, "parallel": 297, "cluster": 297, "set": [297, 306], "up": [297, 306], "note": 297, "us": [297, 306], "directli": 297, "s3": 297, "file": [297, 300], "hsd": [297, 306], "local": [297, 305], "server": 297, "your": 297, "comput": 297, "kubernet": 297, "servic": 297, "lambda": 297, "simpl": 297, "h5pyd": 297, "test": 297, "cost": 297, "estim": 297, "pcluster": 297, "empir": 297, "conu": 297, "request": 299, "full": 300, "input": 300, "requir": 300, "fail": 300, "job": 300, "marin": 301, "energi": 301, "plot": [301, 302], "offshor": 302, "wind": [302, 304], "modul": [302, 307], "treatment": 302, "power": 304, "onli": 304, "site": 304, "solar": 304, "pvwatt": [305, 306], "usag": 309}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"reV": [[0, "module-reV"], [274, "rev"]], "reV.SAM": [[1, "module-reV.SAM"]], "reV.SAM.SAM": [[2, "module-reV.SAM.SAM"]], "reV.SAM.SAM.RevPySam": [[3, "rev-sam-sam-revpysam"]], "reV.SAM.SAM.Sam": [[4, "rev-sam-sam-sam"]], "reV.SAM.SAM.SamResourceRetriever": [[5, "rev-sam-sam-samresourceretriever"]], "reV.SAM.defaults": [[6, "module-reV.SAM.defaults"]], "reV.SAM.defaults.AbstractDefaultFromConfigFile": [[7, "rev-sam-defaults-abstractdefaultfromconfigfile"]], "reV.SAM.defaults.DefaultGeothermal": [[8, "rev-sam-defaults-defaultgeothermal"]], "reV.SAM.defaults.DefaultLCOE": [[9, "rev-sam-defaults-defaultlcoe"]], "reV.SAM.defaults.DefaultLinearFresnelDsgIph": [[10, "rev-sam-defaults-defaultlinearfresneldsgiph"]], "reV.SAM.defaults.DefaultMhkWave": [[11, "rev-sam-defaults-defaultmhkwave"]], "reV.SAM.defaults.DefaultPvSamv1": [[12, "rev-sam-defaults-defaultpvsamv1"]], "reV.SAM.defaults.DefaultPvWattsv5": [[13, "rev-sam-defaults-defaultpvwattsv5"]], "reV.SAM.defaults.DefaultPvWattsv8": [[14, "rev-sam-defaults-defaultpvwattsv8"]], "reV.SAM.defaults.DefaultSingleOwner": [[15, "rev-sam-defaults-defaultsingleowner"]], "reV.SAM.defaults.DefaultSwh": [[16, "rev-sam-defaults-defaultswh"]], "reV.SAM.defaults.DefaultTcsMoltenSalt": [[17, "rev-sam-defaults-defaulttcsmoltensalt"]], "reV.SAM.defaults.DefaultTroughPhysicalProcessHeat": [[18, "rev-sam-defaults-defaulttroughphysicalprocessheat"]], "reV.SAM.defaults.DefaultWindPower": [[19, "rev-sam-defaults-defaultwindpower"]], "reV.SAM.econ": [[20, "module-reV.SAM.econ"]], "reV.SAM.econ.Economic": [[21, "rev-sam-econ-economic"]], "reV.SAM.econ.LCOE": [[22, "rev-sam-econ-lcoe"]], "reV.SAM.econ.SingleOwner": [[23, "rev-sam-econ-singleowner"]], "reV.SAM.generation": [[24, "module-reV.SAM.generation"]], "reV.SAM.generation.AbstractSamGeneration": [[25, "rev-sam-generation-abstractsamgeneration"]], "reV.SAM.generation.AbstractSamGenerationFromWeatherFile": [[26, "rev-sam-generation-abstractsamgenerationfromweatherfile"]], "reV.SAM.generation.AbstractSamPv": [[27, "rev-sam-generation-abstractsampv"]], "reV.SAM.generation.AbstractSamSolar": [[28, "rev-sam-generation-abstractsamsolar"]], "reV.SAM.generation.AbstractSamWind": [[29, "rev-sam-generation-abstractsamwind"]], "reV.SAM.generation.Geothermal": [[30, "rev-sam-generation-geothermal"]], "reV.SAM.generation.LinearDirectSteam": [[31, "rev-sam-generation-lineardirectsteam"]], "reV.SAM.generation.MhkWave": [[32, "rev-sam-generation-mhkwave"]], "reV.SAM.generation.PvSamv1": [[33, "rev-sam-generation-pvsamv1"]], "reV.SAM.generation.PvWattsv5": [[34, "rev-sam-generation-pvwattsv5"]], "reV.SAM.generation.PvWattsv7": [[35, "rev-sam-generation-pvwattsv7"]], "reV.SAM.generation.PvWattsv8": [[36, "rev-sam-generation-pvwattsv8"]], "reV.SAM.generation.SolarWaterHeat": [[37, "rev-sam-generation-solarwaterheat"]], "reV.SAM.generation.TcsMoltenSalt": [[38, "rev-sam-generation-tcsmoltensalt"]], "reV.SAM.generation.TroughPhysicalHeat": [[39, "rev-sam-generation-troughphysicalheat"]], "reV.SAM.generation.WindPower": [[40, "rev-sam-generation-windpower"]], "reV.SAM.generation.WindPowerPD": [[41, "rev-sam-generation-windpowerpd"]], "reV.SAM.version_checker": [[42, "module-reV.SAM.version_checker"]], "reV.SAM.version_checker.PySamVersionChecker": [[43, "rev-sam-version-checker-pysamversionchecker"]], "reV.SAM.windbos": [[44, "module-reV.SAM.windbos"]], "reV.SAM.windbos.WindBos": [[45, "rev-sam-windbos-windbos"]], "reV.bespoke": [[46, "module-reV.bespoke"]], "reV.bespoke.bespoke": [[47, "module-reV.bespoke.bespoke"]], "reV.bespoke.bespoke.BespokeMultiPlantData": [[48, "rev-bespoke-bespoke-bespokemultiplantdata"]], "reV.bespoke.bespoke.BespokeSinglePlant": [[49, "rev-bespoke-bespoke-bespokesingleplant"]], "reV.bespoke.bespoke.BespokeSinglePlantData": [[50, "rev-bespoke-bespoke-bespokesingleplantdata"]], "reV.bespoke.bespoke.BespokeWindPlants": [[51, "rev-bespoke-bespoke-bespokewindplants"]], "reV.bespoke.cli_bespoke": [[52, "module-reV.bespoke.cli_bespoke"]], "reV.bespoke.gradient_free": [[53, "module-reV.bespoke.gradient_free"]], "reV.bespoke.gradient_free.GeneticAlgorithm": [[54, "rev-bespoke-gradient-free-geneticalgorithm"]], "reV.bespoke.pack_turbs": [[55, "module-reV.bespoke.pack_turbs"]], "reV.bespoke.pack_turbs.PackTurbines": [[56, "rev-bespoke-pack-turbs-packturbines"]], "reV.bespoke.pack_turbs.smallest_area_with_tiebreakers": [[57, "rev-bespoke-pack-turbs-smallest-area-with-tiebreakers"]], "reV.bespoke.place_turbines": [[58, "module-reV.bespoke.place_turbines"]], "reV.bespoke.place_turbines.PlaceTurbines": [[59, "rev-bespoke-place-turbines-placeturbines"]], "reV.bespoke.place_turbines.none_until_optimized": [[60, "rev-bespoke-place-turbines-none-until-optimized"]], "reV.bespoke.plotting_functions": [[61, "module-reV.bespoke.plotting_functions"]], "reV.bespoke.plotting_functions.get_xy": [[62, "rev-bespoke-plotting-functions-get-xy"]], "reV.bespoke.plotting_functions.plot_poly": [[63, "rev-bespoke-plotting-functions-plot-poly"]], "reV.bespoke.plotting_functions.plot_turbines": [[64, "rev-bespoke-plotting-functions-plot-turbines"]], "reV.bespoke.plotting_functions.plot_windrose": [[65, "rev-bespoke-plotting-functions-plot-windrose"]], "reV.cli": [[66, "module-reV.cli"]], "reV.config": [[67, "module-reV.config"]], "reV.config.base_analysis_config": [[68, "module-reV.config.base_analysis_config"]], "reV.config.base_analysis_config.AnalysisConfig": [[69, "rev-config-base-analysis-config-analysisconfig"]], "reV.config.base_config": [[70, "module-reV.config.base_config"]], "reV.config.base_config.BaseConfig": [[71, "rev-config-base-config-baseconfig"]], "reV.config.cli_project_points": [[72, "module-reV.config.cli_project_points"]], "reV.config.curtailment": [[73, "module-reV.config.curtailment"]], "reV.config.curtailment.Curtailment": [[74, "rev-config-curtailment-curtailment"]], "reV.config.execution": [[75, "module-reV.config.execution"]], "reV.config.execution.BaseExecutionConfig": [[76, "rev-config-execution-baseexecutionconfig"]], "reV.config.execution.HPCConfig": [[77, "rev-config-execution-hpcconfig"]], "reV.config.execution.SlurmConfig": [[78, "rev-config-execution-slurmconfig"]], "reV.config.output_request": [[79, "module-reV.config.output_request"]], "reV.config.output_request.OutputRequest": [[80, "rev-config-output-request-outputrequest"]], "reV.config.output_request.SAMOutputRequest": [[81, "rev-config-output-request-samoutputrequest"]], "reV.config.project_points": [[82, "module-reV.config.project_points"]], "reV.config.project_points.PointsControl": [[83, "rev-config-project-points-pointscontrol"]], "reV.config.project_points.ProjectPoints": [[84, "rev-config-project-points-projectpoints"]], "reV.config.sam_config": [[85, "module-reV.config.sam_config"]], "reV.config.sam_config.SAMConfig": [[86, "rev-config-sam-config-samconfig"]], "reV.config.sam_config.SAMInputsChecker": [[87, "rev-config-sam-config-saminputschecker"]], "reV.econ": [[88, "module-reV.econ"]], "reV.econ.cli_econ": [[89, "module-reV.econ.cli_econ"]], "reV.econ.econ": [[90, "module-reV.econ.econ"]], "reV.econ.econ.Econ": [[91, "rev-econ-econ-econ"]], "reV.econ.economies_of_scale": [[92, "module-reV.econ.economies_of_scale"]], "reV.econ.economies_of_scale.EconomiesOfScale": [[93, "rev-econ-economies-of-scale-economiesofscale"]], "Units": [[93, "units"]], "reV.econ.utilities": [[94, "module-reV.econ.utilities"]], "reV.econ.utilities.lcoe_fcr": [[95, "rev-econ-utilities-lcoe-fcr"]], "reV.generation": [[96, "module-reV.generation"]], "reV.generation.base": [[97, "module-reV.generation.base"]], "reV.generation.base.BaseGen": [[98, "rev-generation-base-basegen"]], "reV.generation.base.LCOE_REQUIRED_OUTPUTS": [[99, "rev-generation-base-lcoe-required-outputs"]], "reV.generation.cli_gen": [[100, "module-reV.generation.cli_gen"]], "reV.generation.generation": [[101, "module-reV.generation.generation"]], "reV.generation.generation.Gen": [[102, "rev-generation-generation-gen"]], "reV.handlers": [[103, "module-reV.handlers"]], "reV.handlers.cli_collect": [[104, "module-reV.handlers.cli_collect"]], "reV.handlers.cli_multi_year": [[105, "module-reV.handlers.cli_multi_year"]], "reV.handlers.exclusions": [[106, "module-reV.handlers.exclusions"]], "reV.handlers.exclusions.ExclusionLayers": [[107, "rev-handlers-exclusions-exclusionlayers"]], "reV.handlers.multi_year": [[108, "module-reV.handlers.multi_year"]], "reV.handlers.multi_year.MultiYear": [[109, "rev-handlers-multi-year-multiyear"]], "reV.handlers.multi_year.MultiYearGroup": [[110, "rev-handlers-multi-year-multiyeargroup"]], "reV.handlers.multi_year.my_collect_groups": [[111, "rev-handlers-multi-year-my-collect-groups"]], "reV.handlers.outputs": [[112, "module-reV.handlers.outputs"]], "reV.handlers.outputs.Outputs": [[113, "rev-handlers-outputs-outputs"]], "reV.handlers.transmission": [[114, "module-reV.handlers.transmission"]], "reV.handlers.transmission.TransmissionCosts": [[115, "rev-handlers-transmission-transmissioncosts"]], "reV.handlers.transmission.TransmissionFeatures": [[116, "rev-handlers-transmission-transmissionfeatures"]], "reV.hybrids": [[117, "module-reV.hybrids"]], "reV.hybrids.cli_hybrids": [[118, "module-reV.hybrids.cli_hybrids"]], "reV.hybrids.hybrid_methods": [[119, "module-reV.hybrids.hybrid_methods"]], "reV.hybrids.hybrid_methods.aggregate_capacity": [[120, "rev-hybrids-hybrid-methods-aggregate-capacity"]], "reV.hybrids.hybrid_methods.aggregate_capacity_factor": [[121, "rev-hybrids-hybrid-methods-aggregate-capacity-factor"]], "reV.hybrids.hybrid_methods.aggregate_solar_capacity": [[122, "rev-hybrids-hybrid-methods-aggregate-solar-capacity"]], "reV.hybrids.hybrid_methods.aggregate_wind_capacity": [[123, "rev-hybrids-hybrid-methods-aggregate-wind-capacity"]], "reV.hybrids.hybrids": [[124, "module-reV.hybrids.hybrids"]], "reV.hybrids.hybrids.ColNameFormatter": [[125, "rev-hybrids-hybrids-colnameformatter"]], "reV.hybrids.hybrids.Hybridization": [[126, "rev-hybrids-hybrids-hybridization"]], "reV.hybrids.hybrids.HybridsData": [[127, "rev-hybrids-hybrids-hybridsdata"]], "reV.hybrids.hybrids.MetaHybridizer": [[128, "rev-hybrids-hybrids-metahybridizer"]], "reV.hybrids.hybrids.RatioColumns": [[129, "rev-hybrids-hybrids-ratiocolumns"]], "reV.losses": [[130, "module-reV.losses"]], "reV.losses.power_curve": [[131, "module-reV.losses.power_curve"]], "reV.losses.power_curve.AbstractPowerCurveTransformation": [[132, "rev-losses-power-curve-abstractpowercurvetransformation"]], "reV.losses.power_curve.ExponentialStretching": [[133, "rev-losses-power-curve-exponentialstretching"]], "reV.losses.power_curve.HorizontalTranslation": [[134, "rev-losses-power-curve-horizontaltranslation"]], "reV.losses.power_curve.LinearStretching": [[135, "rev-losses-power-curve-linearstretching"]], "reV.losses.power_curve.PowerCurve": [[136, "rev-losses-power-curve-powercurve"]], "reV.losses.power_curve.PowerCurveLosses": [[137, "rev-losses-power-curve-powercurvelosses"]], "reV.losses.power_curve.PowerCurveLossesInput": [[138, "rev-losses-power-curve-powercurvelossesinput"]], "reV.losses.power_curve.PowerCurveLossesMixin": [[139, "rev-losses-power-curve-powercurvelossesmixin"]], "reV.losses.power_curve.PowerCurveWindResource": [[140, "rev-losses-power-curve-powercurvewindresource"]], "reV.losses.power_curve.TRANSFORMATIONS": [[141, "rev-losses-power-curve-transformations"]], "reV.losses.power_curve.adjust_power_curve": [[142, "rev-losses-power-curve-adjust-power-curve"]], "reV.losses.scheduled": [[143, "module-reV.losses.scheduled"]], "reV.losses.scheduled.Outage": [[144, "rev-losses-scheduled-outage"]], "reV.losses.scheduled.OutageScheduler": [[145, "rev-losses-scheduled-outagescheduler"]], "reV.losses.scheduled.ScheduledLossesMixin": [[146, "rev-losses-scheduled-scheduledlossesmixin"]], "reV.losses.scheduled.SingleOutageScheduler": [[147, "rev-losses-scheduled-singleoutagescheduler"]], "reV.losses.utils": [[148, "module-reV.losses.utils"]], "reV.losses.utils.convert_to_full_month_names": [[149, "rev-losses-utils-convert-to-full-month-names"]], "reV.losses.utils.filter_unknown_month_names": [[150, "rev-losses-utils-filter-unknown-month-names"]], "reV.losses.utils.format_month_name": [[151, "rev-losses-utils-format-month-name"]], "reV.losses.utils.full_month_name_from_abbr": [[152, "rev-losses-utils-full-month-name-from-abbr"]], "reV.losses.utils.hourly_indices_for_months": [[153, "rev-losses-utils-hourly-indices-for-months"]], "reV.losses.utils.month_index": [[154, "rev-losses-utils-month-index"]], "reV.losses.utils.month_indices": [[155, "rev-losses-utils-month-indices"]], "reV.nrwal": [[156, "module-reV.nrwal"]], "reV.nrwal.cli_nrwal": [[157, "module-reV.nrwal.cli_nrwal"]], "reV.nrwal.nrwal": [[158, "module-reV.nrwal.nrwal"]], "reV.nrwal.nrwal.RevNrwal": [[159, "rev-nrwal-nrwal-revnrwal"]], "reV.qa_qc": [[160, "module-reV.qa_qc"]], "reV.qa_qc.cli_qa_qc": [[161, "module-reV.qa_qc.cli_qa_qc"]], "reV.qa_qc.cli_qa_qc.cli_qa_qc": [[162, "rev-qa-qc-cli-qa-qc-cli-qa-qc"]], "reV.qa_qc.qa_qc": [[163, "module-reV.qa_qc.qa_qc"]], "reV.qa_qc.qa_qc.QaQc": [[164, "rev-qa-qc-qa-qc-qaqc"]], "reV.qa_qc.qa_qc.QaQcModule": [[165, "rev-qa-qc-qa-qc-qaqcmodule"]], "reV.qa_qc.summary": [[166, "module-reV.qa_qc.summary"]], "reV.qa_qc.summary.ExclusionsMask": [[167, "rev-qa-qc-summary-exclusionsmask"]], "reV.qa_qc.summary.PlotBase": [[168, "rev-qa-qc-summary-plotbase"]], "reV.qa_qc.summary.SummarizeH5": [[169, "rev-qa-qc-summary-summarizeh5"]], "reV.qa_qc.summary.SummarizeSupplyCurve": [[170, "rev-qa-qc-summary-summarizesupplycurve"]], "reV.qa_qc.summary.SummaryPlots": [[171, "rev-qa-qc-summary-summaryplots"]], "reV.qa_qc.summary.SupplyCurvePlot": [[172, "rev-qa-qc-summary-supplycurveplot"]], "reV.rep_profiles": [[173, "module-reV.rep_profiles"]], "reV.rep_profiles.cli_rep_profiles": [[174, "module-reV.rep_profiles.cli_rep_profiles"]], "reV.rep_profiles.rep_profiles": [[175, "module-reV.rep_profiles.rep_profiles"]], "reV.rep_profiles.rep_profiles.RegionRepProfile": [[176, "rev-rep-profiles-rep-profiles-regionrepprofile"]], "reV.rep_profiles.rep_profiles.RepProfiles": [[177, "rev-rep-profiles-rep-profiles-repprofiles"]], "reV.rep_profiles.rep_profiles.RepProfilesBase": [[178, "rev-rep-profiles-rep-profiles-repprofilesbase"]], "reV.rep_profiles.rep_profiles.RepresentativeMethods": [[179, "rev-rep-profiles-rep-profiles-representativemethods"]], "reV.supply_curve": [[180, "module-reV.supply_curve"]], "reV.supply_curve.aggregation": [[181, "module-reV.supply_curve.aggregation"]], "reV.supply_curve.aggregation.AbstractAggFileHandler": [[182, "rev-supply-curve-aggregation-abstractaggfilehandler"]], "reV.supply_curve.aggregation.AggFileHandler": [[183, "rev-supply-curve-aggregation-aggfilehandler"]], "reV.supply_curve.aggregation.Aggregation": [[184, "rev-supply-curve-aggregation-aggregation"]], "reV.supply_curve.aggregation.BaseAggregation": [[185, "rev-supply-curve-aggregation-baseaggregation"]], "reV.supply_curve.cli_sc_aggregation": [[186, "module-reV.supply_curve.cli_sc_aggregation"]], "reV.supply_curve.cli_supply_curve": [[187, "module-reV.supply_curve.cli_supply_curve"]], "reV.supply_curve.competitive_wind_farms": [[188, "module-reV.supply_curve.competitive_wind_farms"]], "reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms": [[189, "rev-supply-curve-competitive-wind-farms-competitivewindfarms"]], "reV.supply_curve.exclusions": [[190, "module-reV.supply_curve.exclusions"]], "reV.supply_curve.exclusions.ExclusionMask": [[191, "rev-supply-curve-exclusions-exclusionmask"]], "reV.supply_curve.exclusions.ExclusionMaskFromDict": [[192, "rev-supply-curve-exclusions-exclusionmaskfromdict"]], "reV.supply_curve.exclusions.FrictionMask": [[193, "rev-supply-curve-exclusions-frictionmask"]], "reV.supply_curve.exclusions.LayerMask": [[194, "rev-supply-curve-exclusions-layermask"]], "reV.supply_curve.extent": [[195, "module-reV.supply_curve.extent"]], "reV.supply_curve.extent.SupplyCurveExtent": [[196, "rev-supply-curve-extent-supplycurveextent"]], "reV.supply_curve.points": [[197, "module-reV.supply_curve.points"]], "reV.supply_curve.points.AbstractSupplyCurvePoint": [[198, "rev-supply-curve-points-abstractsupplycurvepoint"]], "reV.supply_curve.points.AggregationSupplyCurvePoint": [[199, "rev-supply-curve-points-aggregationsupplycurvepoint"]], "reV.supply_curve.points.GenerationSupplyCurvePoint": [[200, "rev-supply-curve-points-generationsupplycurvepoint"]], "reV.supply_curve.points.SupplyCurvePoint": [[201, "rev-supply-curve-points-supplycurvepoint"]], "reV.supply_curve.sc_aggregation": [[202, "module-reV.supply_curve.sc_aggregation"]], "reV.supply_curve.sc_aggregation.SupplyCurveAggFileHandler": [[203, "rev-supply-curve-sc-aggregation-supplycurveaggfilehandler"]], "reV.supply_curve.sc_aggregation.SupplyCurveAggregation": [[204, "rev-supply-curve-sc-aggregation-supplycurveaggregation"]], "reV.supply_curve.supply_curve": [[205, "module-reV.supply_curve.supply_curve"]], "reV.supply_curve.supply_curve.DEFAULT_COLUMNS": [[206, "rev-supply-curve-supply-curve-default-columns"]], "reV.supply_curve.supply_curve.SupplyCurve": [[207, "rev-supply-curve-supply-curve-supplycurve"]], "reV.supply_curve.tech_mapping": [[208, "module-reV.supply_curve.tech_mapping"]], "reV.supply_curve.tech_mapping.TechMapping": [[209, "rev-supply-curve-tech-mapping-techmapping"]], "reV.utilities": [[210, "module-reV.utilities"]], "reV.utilities.FieldEnum": [[211, "rev-utilities-fieldenum"]], "reV.utilities.ModuleName": [[212, "rev-utilities-modulename"]], "Reference": [[212, "reference"]], "reV.utilities.ResourceMetaField": [[213, "rev-utilities-resourcemetafield"]], "reV.utilities.SiteDataField": [[214, "rev-utilities-sitedatafield"]], "reV.utilities.SupplyCurveField": [[215, "rev-utilities-supplycurvefield"]], "reV.utilities.cli_functions": [[216, "module-reV.utilities.cli_functions"]], "reV.utilities.cli_functions.format_analysis_years": [[217, "rev-utilities-cli-functions-format-analysis-years"]], "reV.utilities.cli_functions.init_cli_logging": [[218, "rev-utilities-cli-functions-init-cli-logging"]], "reV.utilities.cli_functions.parse_from_pipeline": [[219, "rev-utilities-cli-functions-parse-from-pipeline"]], "reV.utilities.curtailment": [[220, "module-reV.utilities.curtailment"]], "reV.utilities.curtailment.curtail": [[221, "rev-utilities-curtailment-curtail"]], "reV.utilities.exceptions": [[222, "module-reV.utilities.exceptions"]], "reV.utilities.exceptions.CollectionRuntimeError": [[223, "rev-utilities-exceptions-collectionruntimeerror"]], "reV.utilities.exceptions.CollectionValueError": [[224, "rev-utilities-exceptions-collectionvalueerror"]], "reV.utilities.exceptions.CollectionWarning": [[225, "rev-utilities-exceptions-collectionwarning"]], "reV.utilities.exceptions.ConfigError": [[226, "rev-utilities-exceptions-configerror"]], "reV.utilities.exceptions.ConfigWarning": [[227, "rev-utilities-exceptions-configwarning"]], "reV.utilities.exceptions.DataShapeError": [[228, "rev-utilities-exceptions-datashapeerror"]], "reV.utilities.exceptions.EmptySupplyCurvePointError": [[229, "rev-utilities-exceptions-emptysupplycurvepointerror"]], "reV.utilities.exceptions.ExclusionLayerError": [[230, "rev-utilities-exceptions-exclusionlayererror"]], "reV.utilities.exceptions.ExecutionError": [[231, "rev-utilities-exceptions-executionerror"]], "reV.utilities.exceptions.ExtrapolationWarning": [[232, "rev-utilities-exceptions-extrapolationwarning"]], "reV.utilities.exceptions.FileInputError": [[233, "rev-utilities-exceptions-fileinputerror"]], "reV.utilities.exceptions.FileInputWarning": [[234, "rev-utilities-exceptions-fileinputwarning"]], "reV.utilities.exceptions.HandlerKeyError": [[235, "rev-utilities-exceptions-handlerkeyerror"]], "reV.utilities.exceptions.HandlerRuntimeError": [[236, "rev-utilities-exceptions-handlerruntimeerror"]], "reV.utilities.exceptions.HandlerValueError": [[237, "rev-utilities-exceptions-handlervalueerror"]], "reV.utilities.exceptions.HandlerWarning": [[238, "rev-utilities-exceptions-handlerwarning"]], "reV.utilities.exceptions.InputError": [[239, "rev-utilities-exceptions-inputerror"]], "reV.utilities.exceptions.InputWarning": [[240, "rev-utilities-exceptions-inputwarning"]], "reV.utilities.exceptions.JSONError": [[241, "rev-utilities-exceptions-jsonerror"]], "reV.utilities.exceptions.MultiFileExclusionError": [[242, "rev-utilities-exceptions-multifileexclusionerror"]], "reV.utilities.exceptions.NearestNeighborError": [[243, "rev-utilities-exceptions-nearestneighborerror"]], "reV.utilities.exceptions.OffshoreWindInputError": [[244, "rev-utilities-exceptions-offshorewindinputerror"]], "reV.utilities.exceptions.OffshoreWindInputWarning": [[245, "rev-utilities-exceptions-offshorewindinputwarning"]], "reV.utilities.exceptions.OutputWarning": [[246, "rev-utilities-exceptions-outputwarning"]], "reV.utilities.exceptions.ParallelExecutionWarning": [[247, "rev-utilities-exceptions-parallelexecutionwarning"]], "reV.utilities.exceptions.PipelineError": [[248, "rev-utilities-exceptions-pipelineerror"]], "reV.utilities.exceptions.ProjectPointsValueError": [[249, "rev-utilities-exceptions-projectpointsvalueerror"]], "reV.utilities.exceptions.PySAMVersionError": [[250, "rev-utilities-exceptions-pysamversionerror"]], "reV.utilities.exceptions.PySAMVersionWarning": [[251, "rev-utilities-exceptions-pysamversionwarning"]], "reV.utilities.exceptions.ResourceError": [[252, "rev-utilities-exceptions-resourceerror"]], "reV.utilities.exceptions.SAMExecutionError": [[253, "rev-utilities-exceptions-samexecutionerror"]], "reV.utilities.exceptions.SAMExecutionWarning": [[254, "rev-utilities-exceptions-samexecutionwarning"]], "reV.utilities.exceptions.SAMInputError": [[255, "rev-utilities-exceptions-saminputerror"]], "reV.utilities.exceptions.SAMInputWarning": [[256, "rev-utilities-exceptions-saminputwarning"]], "reV.utilities.exceptions.SlurmWarning": [[257, "rev-utilities-exceptions-slurmwarning"]], "reV.utilities.exceptions.SupplyCurveError": [[258, "rev-utilities-exceptions-supplycurveerror"]], "reV.utilities.exceptions.SupplyCurveInputError": [[259, "rev-utilities-exceptions-supplycurveinputerror"]], "reV.utilities.exceptions.WhileLoopPackingError": [[260, "rev-utilities-exceptions-whilelooppackingerror"]], "reV.utilities.exceptions.reVDeprecationWarning": [[261, "rev-utilities-exceptions-revdeprecationwarning"]], "reV.utilities.exceptions.reVError": [[262, "rev-utilities-exceptions-reverror"]], "reV.utilities.exceptions.reVLossesValueError": [[263, "rev-utilities-exceptions-revlossesvalueerror"]], "reV.utilities.exceptions.reVLossesWarning": [[264, "rev-utilities-exceptions-revlosseswarning"]], "reV.utilities.log_versions": [[265, "rev-utilities-log-versions"]], "reV.utilities.pytest_utils": [[266, "module-reV.utilities.pytest_utils"]], "reV.utilities.pytest_utils.make_fake_h5_chunks": [[267, "rev-utilities-pytest-utils-make-fake-h5-chunks"]], "reV.utilities.pytest_utils.pd_date_range": [[268, "rev-utilities-pytest-utils-pd-date-range"]], "reV.utilities.pytest_utils.write_chunk": [[269, "rev-utilities-pytest-utils-write-chunk"]], "reV.utilities.slots": [[270, "module-reV.utilities.slots"]], "reV.utilities.slots.SlottedDict": [[271, "rev-utilities-slots-slotteddict"]], "reV.version": [[272, "module-reV.version"]], "Command Line Interfaces (CLIs)": [[273, "command-line-interfaces-clis"]], "reV batch": [[275, "rev-batch"]], "Parameters": [[275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [285, "parameters"], [286, "parameters"], [288, "parameters"], [290, "parameters"], [291, "parameters"]], "reV bespoke": [[276, "rev-bespoke"]], "reV collect": [[277, "rev-collect"]], "reV econ": [[278, "rev-econ"]], "reV generation": [[279, "rev-generation"]], "reV hybrids": [[280, "rev-hybrids"]], "reV multi-year": [[281, "rev-multi-year"]], "reV nrwal": [[282, "rev-nrwal"]], "reV pipeline": [[283, "rev-pipeline"]], "reV project-points": [[284, "rev-project-points"]], "from-lat-lons": [[284, "rev-project-points-from-lat-lons"]], "from-regions": [[284, "rev-project-points-from-regions"]], "reV qa-qc": [[285, "rev-qa-qc"]], "reV rep-profiles": [[286, "rev-rep-profiles"]], "reV reset-status": [[287, "rev-reset-status"]], "reV script": [[288, "rev-script"]], "reV status": [[289, "rev-status"]], "reV supply-curve": [[290, "rev-supply-curve"]], "reV supply-curve-aggregation": [[291, "rev-supply-curve-aggregation"]], "reV template-configs": [[292, "rev-template-configs"]], "reV documentation": [[294, "rev-documentation"]], "What is reV?": [[294, "what-is-rev"]], "How does reV work?": [[294, "how-does-rev-work"]], "Installing reV": [[294, "installing-rev"]], "Option 1: Install from PIP (recommended for analysts):": [[294, "option-1-install-from-pip-recommended-for-analysts"], [308, "option-1-install-from-pip-recommended-for-analysts"]], "Option 2: Clone repo (recommended for developers)": [[294, "option-2-clone-repo-recommended-for-developers"], [308, "option-2-clone-repo-recommended-for-developers"]], "reV command line tools": [[294, "rev-command-line-tools"], [308, "rev-command-line-tools"]], "Launching a run": [[294, "launching-a-run"], [308, "launching-a-run"]], "General Run times and Node configuration on Eagle": [[294, "general-run-times-and-node-configuration-on-eagle"], [308, "general-run-times-and-node-configuration-on-eagle"]], "Recommended Citation": [[294, "recommended-citation"], [308, "recommended-citation"]], "Examples": [[295, "examples"]], "SAM Single Owner Modeling": [[296, "sam-single-owner-modeling"]], "Workflow Description": [[296, "workflow-description"]], "Running reV on an AWS Parallel Cluster": [[297, "running-rev-on-an-aws-parallel-cluster"]], "Setting up an AWS Parallel Cluster": [[297, "setting-up-an-aws-parallel-cluster"]], "Notes on Running reV in the AWS Parallel Cluster": [[297, "notes-on-running-rev-in-the-aws-parallel-cluster"]], "Using reV Directly with S3 Files": [[297, "using-rev-directly-with-s3-files"]], "Setting up HSDS Local Servers on your Compute Cluster": [[297, "setting-up-hsds-local-servers-on-your-compute-cluster"]], "Setting up an HSDS Kubernetes Service": [[297, "setting-up-an-hsds-kubernetes-service"]], "Setting up an HSDS Lambda Service": [[297, "setting-up-an-hsds-lambda-service"]], "Simple H5PYD Test": [[297, "simple-h5pyd-test"]], "Compute Cost Estimates": [[297, "compute-cost-estimates"]], "reV PCluster Compute Costs (Empirical)": [[297, "id4"]], "CONUS Compute Costs (Estimated)": [[297, "id5"]], "Batched Execution": [[298, "batched-execution"]], "Batching Config Description": [[298, "batching-config-description"]], "How to Run": [[298, "how-to-run"]], "Eagle Node Requests": [[299, "eagle-node-requests"]], "Full Pipeline Execution": [[300, "full-pipeline-execution"]], "Pipeline Input Requirements": [[300, "pipeline-input-requirements"]], "Failed Jobs": [[300, "failed-jobs"]], "File Inputs": [[300, "file-inputs"]], "reV Marine Energy": [[301, "rev-marine-energy"]], "Plots of the Example Marine Energy Output": [[301, "plots-of-the-example-marine-energy-output"]], "Offshore Wind Modeling": [[302, "offshore-wind-modeling"]], "reV Offshore Module Description": [[302, "rev-offshore-module-description"]], "Treatment of Offshore Points in Supply Curve": [[302, "treatment-of-offshore-points-in-supply-curve"]], "Plots of the Example Offshore Output": [[302, "plots-of-the-example-offshore-output"]], "reV Project Points": [[303, "rev-project-points"]], "Command Line Interface (CLI)": [[303, "command-line-interface-cli"], [305, "command-line-interface-cli"], [306, "command-line-interface-cli"]], "reV Losses": [[304, "rev-losses"]], "Power Curve Losses (Wind only)": [[304, "power-curve-losses-wind-only"]], "Power Curve Losses for a single site": [[304, "power-curve-losses-for-a-single-site"]], "Outage Losses (Wind and Solar)": [[304, "outage-losses-wind-and-solar"]], "Run reV locally": [[305, "run-rev-locally"]], "reV Gen": [[305, "id1"], [306, "rev-gen"]], "windpower": [[305, "windpower"], [306, "windpower"]], "pvwatts": [[305, "pvwatts"], [306, "pvwatts"]], "Running with HSDS": [[306, "running-with-hsds"]], "Setting up HSDS": [[306, "setting-up-hsds"]], "Using HSDS with reV": [[306, "using-hsds-with-rev"]], "Single Module Execution": [[307, "single-module-execution"]], "Installation": [[308, "installation"]], "Command Line Tools": [[308, "command-line-tools"]], "Installation and Usage": [[309, "installation-and-usage"]]}, "indexentries": {"module": [[0, "module-reV"], [1, "module-reV.SAM"], [2, "module-reV.SAM.SAM"], [6, "module-reV.SAM.defaults"], [20, "module-reV.SAM.econ"], [24, "module-reV.SAM.generation"], [42, "module-reV.SAM.version_checker"], [44, "module-reV.SAM.windbos"], [46, "module-reV.bespoke"], [47, "module-reV.bespoke.bespoke"], [52, "module-reV.bespoke.cli_bespoke"], [53, "module-reV.bespoke.gradient_free"], [55, "module-reV.bespoke.pack_turbs"], [58, "module-reV.bespoke.place_turbines"], [61, "module-reV.bespoke.plotting_functions"], [66, "module-reV.cli"], [67, "module-reV.config"], [68, "module-reV.config.base_analysis_config"], [70, "module-reV.config.base_config"], [72, "module-reV.config.cli_project_points"], [73, "module-reV.config.curtailment"], [75, "module-reV.config.execution"], [79, "module-reV.config.output_request"], [82, "module-reV.config.project_points"], [85, "module-reV.config.sam_config"], [88, "module-reV.econ"], [89, "module-reV.econ.cli_econ"], [90, "module-reV.econ.econ"], [92, "module-reV.econ.economies_of_scale"], [94, "module-reV.econ.utilities"], [96, "module-reV.generation"], [97, "module-reV.generation.base"], [100, "module-reV.generation.cli_gen"], [101, "module-reV.generation.generation"], [103, "module-reV.handlers"], [104, "module-reV.handlers.cli_collect"], [105, "module-reV.handlers.cli_multi_year"], [106, "module-reV.handlers.exclusions"], [108, "module-reV.handlers.multi_year"], [112, "module-reV.handlers.outputs"], [114, "module-reV.handlers.transmission"], [117, "module-reV.hybrids"], [118, "module-reV.hybrids.cli_hybrids"], [119, "module-reV.hybrids.hybrid_methods"], [124, "module-reV.hybrids.hybrids"], [130, "module-reV.losses"], [131, "module-reV.losses.power_curve"], [143, "module-reV.losses.scheduled"], [148, "module-reV.losses.utils"], [156, "module-reV.nrwal"], [157, "module-reV.nrwal.cli_nrwal"], [158, "module-reV.nrwal.nrwal"], [160, "module-reV.qa_qc"], [161, "module-reV.qa_qc.cli_qa_qc"], [163, "module-reV.qa_qc.qa_qc"], [166, "module-reV.qa_qc.summary"], [173, "module-reV.rep_profiles"], [174, "module-reV.rep_profiles.cli_rep_profiles"], [175, "module-reV.rep_profiles.rep_profiles"], [180, "module-reV.supply_curve"], [181, "module-reV.supply_curve.aggregation"], [186, "module-reV.supply_curve.cli_sc_aggregation"], [187, "module-reV.supply_curve.cli_supply_curve"], [188, "module-reV.supply_curve.competitive_wind_farms"], [190, "module-reV.supply_curve.exclusions"], [195, "module-reV.supply_curve.extent"], [197, "module-reV.supply_curve.points"], [202, "module-reV.supply_curve.sc_aggregation"], [205, "module-reV.supply_curve.supply_curve"], [208, "module-reV.supply_curve.tech_mapping"], [210, "module-reV.utilities"], [216, "module-reV.utilities.cli_functions"], [220, "module-reV.utilities.curtailment"], [222, "module-reV.utilities.exceptions"], [266, "module-reV.utilities.pytest_utils"], [270, "module-reV.utilities.slots"], [272, "module-reV.version"]], "rev": [[0, "module-reV"]], "rev.sam": [[1, "module-reV.SAM"]], "rev.sam.sam": [[2, "module-reV.SAM.SAM"]], "pysam (revpysam attribute)": [[3, "reV.SAM.SAM.RevPySam.PYSAM"]], "revpysam (class in rev.sam.sam)": [[3, "reV.SAM.SAM.RevPySam"]], "assign_inputs() (revpysam method)": [[3, "reV.SAM.SAM.RevPySam.assign_inputs"]], "attr_dict (revpysam property)": [[3, "reV.SAM.SAM.RevPySam.attr_dict"]], "collect_outputs() (revpysam method)": [[3, "reV.SAM.SAM.RevPySam.collect_outputs"]], "default() (revpysam class method)": [[3, "reV.SAM.SAM.RevPySam.default"]], "drop_leap() (revpysam static method)": [[3, "reV.SAM.SAM.RevPySam.drop_leap"]], "ensure_res_len() (revpysam static method)": [[3, "reV.SAM.SAM.RevPySam.ensure_res_len"]], "execute() (revpysam method)": [[3, "reV.SAM.SAM.RevPySam.execute"]], "get_sam_res() (revpysam static method)": [[3, "reV.SAM.SAM.RevPySam.get_sam_res"]], "get_time_interval() (revpysam class method)": [[3, "reV.SAM.SAM.RevPySam.get_time_interval"]], "input_list (revpysam property)": [[3, "reV.SAM.SAM.RevPySam.input_list"]], "make_datetime() (revpysam static method)": [[3, "reV.SAM.SAM.RevPySam.make_datetime"]], "meta (revpysam property)": [[3, "reV.SAM.SAM.RevPySam.meta"]], "module (revpysam property)": [[3, "reV.SAM.SAM.RevPySam.module"]], "outputs_to_utc_arr() (revpysam method)": [[3, "reV.SAM.SAM.RevPySam.outputs_to_utc_arr"]], "pysam (revpysam property)": [[3, "reV.SAM.SAM.RevPySam.pysam"]], "site (revpysam property)": [[3, "reV.SAM.SAM.RevPySam.site"]], "pysam (sam attribute)": [[4, "reV.SAM.SAM.Sam.PYSAM"]], "sam (class in rev.sam.sam)": [[4, "reV.SAM.SAM.Sam"]], "assign_inputs() (sam method)": [[4, "reV.SAM.SAM.Sam.assign_inputs"]], "attr_dict (sam property)": [[4, "reV.SAM.SAM.Sam.attr_dict"]], "default() (sam class method)": [[4, "reV.SAM.SAM.Sam.default"]], "execute() (sam method)": [[4, "reV.SAM.SAM.Sam.execute"]], "input_list (sam property)": [[4, "reV.SAM.SAM.Sam.input_list"]], "pysam (sam property)": [[4, "reV.SAM.SAM.Sam.pysam"]], "samresourceretriever (class in rev.sam.sam)": [[5, "reV.SAM.SAM.SamResourceRetriever"]], "get() (samresourceretriever class method)": [[5, "reV.SAM.SAM.SamResourceRetriever.get"]], "rev.sam.defaults": [[6, "module-reV.SAM.defaults"]], "abstractdefaultfromconfigfile (class in rev.sam.defaults)": [[7, "reV.SAM.defaults.AbstractDefaultFromConfigFile"]], "config_file_name (abstractdefaultfromconfigfile property)": [[7, "reV.SAM.defaults.AbstractDefaultFromConfigFile.CONFIG_FILE_NAME"]], "pysam_module (abstractdefaultfromconfigfile property)": [[7, "reV.SAM.defaults.AbstractDefaultFromConfigFile.PYSAM_MODULE"]], "init_default_pysam_obj() (abstractdefaultfromconfigfile class method)": [[7, "reV.SAM.defaults.AbstractDefaultFromConfigFile.init_default_pysam_obj"]], "defaultgeothermal (class in rev.sam.defaults)": [[8, "reV.SAM.defaults.DefaultGeothermal"]], "pysam_module (defaultgeothermal attribute)": [[8, "reV.SAM.defaults.DefaultGeothermal.PYSAM_MODULE"]], "default() (defaultgeothermal static method)": [[8, "reV.SAM.defaults.DefaultGeothermal.default"]], "init_default_pysam_obj() (defaultgeothermal class method)": [[8, "reV.SAM.defaults.DefaultGeothermal.init_default_pysam_obj"]], "defaultlcoe (class in rev.sam.defaults)": [[9, "reV.SAM.defaults.DefaultLCOE"]], "default() (defaultlcoe static method)": [[9, "reV.SAM.defaults.DefaultLCOE.default"]], "defaultlinearfresneldsgiph (class in rev.sam.defaults)": [[10, "reV.SAM.defaults.DefaultLinearFresnelDsgIph"]], "default() (defaultlinearfresneldsgiph static method)": [[10, "reV.SAM.defaults.DefaultLinearFresnelDsgIph.default"]], "defaultmhkwave (class in rev.sam.defaults)": [[11, "reV.SAM.defaults.DefaultMhkWave"]], "default() (defaultmhkwave static method)": [[11, "reV.SAM.defaults.DefaultMhkWave.default"]], "defaultpvsamv1 (class in rev.sam.defaults)": [[12, "reV.SAM.defaults.DefaultPvSamv1"]], "default() (defaultpvsamv1 static method)": [[12, "reV.SAM.defaults.DefaultPvSamv1.default"]], "defaultpvwattsv5 (class in rev.sam.defaults)": [[13, "reV.SAM.defaults.DefaultPvWattsv5"]], "pysam_module (defaultpvwattsv5 attribute)": [[13, "reV.SAM.defaults.DefaultPvWattsv5.PYSAM_MODULE"]], "default() (defaultpvwattsv5 static method)": [[13, "reV.SAM.defaults.DefaultPvWattsv5.default"]], "init_default_pysam_obj() (defaultpvwattsv5 class method)": [[13, "reV.SAM.defaults.DefaultPvWattsv5.init_default_pysam_obj"]], "defaultpvwattsv8 (class in rev.sam.defaults)": [[14, "reV.SAM.defaults.DefaultPvWattsv8"]], "default() (defaultpvwattsv8 static method)": [[14, "reV.SAM.defaults.DefaultPvWattsv8.default"]], "defaultsingleowner (class in rev.sam.defaults)": [[15, "reV.SAM.defaults.DefaultSingleOwner"]], "default() (defaultsingleowner static method)": [[15, "reV.SAM.defaults.DefaultSingleOwner.default"]], "defaultswh (class in rev.sam.defaults)": [[16, "reV.SAM.defaults.DefaultSwh"]], "default() (defaultswh static method)": [[16, "reV.SAM.defaults.DefaultSwh.default"]], "defaulttcsmoltensalt (class in rev.sam.defaults)": [[17, "reV.SAM.defaults.DefaultTcsMoltenSalt"]], "default() (defaulttcsmoltensalt static method)": [[17, "reV.SAM.defaults.DefaultTcsMoltenSalt.default"]], "defaulttroughphysicalprocessheat (class in rev.sam.defaults)": [[18, "reV.SAM.defaults.DefaultTroughPhysicalProcessHeat"]], "default() (defaulttroughphysicalprocessheat static method)": [[18, "reV.SAM.defaults.DefaultTroughPhysicalProcessHeat.default"]], "defaultwindpower (class in rev.sam.defaults)": [[19, "reV.SAM.defaults.DefaultWindPower"]], "default() (defaultwindpower static method)": [[19, "reV.SAM.defaults.DefaultWindPower.default"]], "rev.sam.econ": [[20, "module-reV.SAM.econ"]], "economic (class in rev.sam.econ)": [[21, "reV.SAM.econ.Economic"]], "pysam (economic attribute)": [[21, "reV.SAM.econ.Economic.PYSAM"]], "assign_inputs() (economic method)": [[21, "reV.SAM.econ.Economic.assign_inputs"]], "attr_dict (economic property)": [[21, "reV.SAM.econ.Economic.attr_dict"]], "collect_outputs() (economic method)": [[21, "reV.SAM.econ.Economic.collect_outputs"]], "default() (economic class method)": [[21, "reV.SAM.econ.Economic.default"]], "drop_leap() (economic static method)": [[21, "reV.SAM.econ.Economic.drop_leap"]], "ensure_res_len() (economic static method)": [[21, "reV.SAM.econ.Economic.ensure_res_len"]], "execute() (economic method)": [[21, "reV.SAM.econ.Economic.execute"]], "flip_actual_irr() (economic method)": [[21, "reV.SAM.econ.Economic.flip_actual_irr"]], "get_sam_res() (economic static method)": [[21, "reV.SAM.econ.Economic.get_sam_res"]], "get_time_interval() (economic class method)": [[21, "reV.SAM.econ.Economic.get_time_interval"]], "gross_revenue() (economic method)": [[21, "reV.SAM.econ.Economic.gross_revenue"]], "input_list (economic property)": [[21, "reV.SAM.econ.Economic.input_list"]], "lcoe_fcr() (economic method)": [[21, "reV.SAM.econ.Economic.lcoe_fcr"]], "lcoe_nom() (economic method)": [[21, "reV.SAM.econ.Economic.lcoe_nom"]], "lcoe_real() (economic method)": [[21, "reV.SAM.econ.Economic.lcoe_real"]], "make_datetime() (economic static method)": [[21, "reV.SAM.econ.Economic.make_datetime"]], "meta (economic property)": [[21, "reV.SAM.econ.Economic.meta"]], "module (economic property)": [[21, "reV.SAM.econ.Economic.module"]], "npv() (economic method)": [[21, "reV.SAM.econ.Economic.npv"]], "outputs_to_utc_arr() (economic method)": [[21, "reV.SAM.econ.Economic.outputs_to_utc_arr"]], "ppa_price() (economic method)": [[21, "reV.SAM.econ.Economic.ppa_price"]], "pysam (economic property)": [[21, "reV.SAM.econ.Economic.pysam"]], "rev_run() (economic class method)": [[21, "reV.SAM.econ.Economic.reV_run"]], "site (economic property)": [[21, "reV.SAM.econ.Economic.site"]], "lcoe (class in rev.sam.econ)": [[22, "reV.SAM.econ.LCOE"]], "pysam (lcoe attribute)": [[22, "reV.SAM.econ.LCOE.PYSAM"]], "assign_inputs() (lcoe method)": [[22, "reV.SAM.econ.LCOE.assign_inputs"]], "attr_dict (lcoe property)": [[22, "reV.SAM.econ.LCOE.attr_dict"]], "collect_outputs() (lcoe method)": [[22, "reV.SAM.econ.LCOE.collect_outputs"]], "default() (lcoe static method)": [[22, "reV.SAM.econ.LCOE.default"]], "drop_leap() (lcoe static method)": [[22, "reV.SAM.econ.LCOE.drop_leap"]], "ensure_res_len() (lcoe static method)": [[22, "reV.SAM.econ.LCOE.ensure_res_len"]], "execute() (lcoe method)": [[22, "reV.SAM.econ.LCOE.execute"]], "flip_actual_irr() (lcoe method)": [[22, "reV.SAM.econ.LCOE.flip_actual_irr"]], "get_sam_res() (lcoe static method)": [[22, "reV.SAM.econ.LCOE.get_sam_res"]], "get_time_interval() (lcoe class method)": [[22, "reV.SAM.econ.LCOE.get_time_interval"]], "gross_revenue() (lcoe method)": [[22, "reV.SAM.econ.LCOE.gross_revenue"]], "input_list (lcoe property)": [[22, "reV.SAM.econ.LCOE.input_list"]], "lcoe_fcr() (lcoe method)": [[22, "reV.SAM.econ.LCOE.lcoe_fcr"]], "lcoe_nom() (lcoe method)": [[22, "reV.SAM.econ.LCOE.lcoe_nom"]], "lcoe_real() (lcoe method)": [[22, "reV.SAM.econ.LCOE.lcoe_real"]], "make_datetime() (lcoe static method)": [[22, "reV.SAM.econ.LCOE.make_datetime"]], "meta (lcoe property)": [[22, "reV.SAM.econ.LCOE.meta"]], "module (lcoe property)": [[22, "reV.SAM.econ.LCOE.module"]], "npv() (lcoe method)": [[22, "reV.SAM.econ.LCOE.npv"]], "outputs_to_utc_arr() (lcoe method)": [[22, "reV.SAM.econ.LCOE.outputs_to_utc_arr"]], "ppa_price() (lcoe method)": [[22, "reV.SAM.econ.LCOE.ppa_price"]], "pysam (lcoe property)": [[22, "reV.SAM.econ.LCOE.pysam"]], "rev_run() (lcoe class method)": [[22, "reV.SAM.econ.LCOE.reV_run"]], "site (lcoe property)": [[22, "reV.SAM.econ.LCOE.site"]], "pysam (singleowner attribute)": [[23, "reV.SAM.econ.SingleOwner.PYSAM"]], "singleowner (class in rev.sam.econ)": [[23, "reV.SAM.econ.SingleOwner"]], "assign_inputs() (singleowner method)": [[23, "reV.SAM.econ.SingleOwner.assign_inputs"]], "attr_dict (singleowner property)": [[23, "reV.SAM.econ.SingleOwner.attr_dict"]], "collect_outputs() (singleowner method)": [[23, "reV.SAM.econ.SingleOwner.collect_outputs"]], "default() (singleowner static method)": [[23, "reV.SAM.econ.SingleOwner.default"]], "drop_leap() (singleowner static method)": [[23, "reV.SAM.econ.SingleOwner.drop_leap"]], "ensure_res_len() (singleowner static method)": [[23, "reV.SAM.econ.SingleOwner.ensure_res_len"]], "execute() (singleowner method)": [[23, "reV.SAM.econ.SingleOwner.execute"]], "flip_actual_irr() (singleowner method)": [[23, "reV.SAM.econ.SingleOwner.flip_actual_irr"]], "get_sam_res() (singleowner static method)": [[23, "reV.SAM.econ.SingleOwner.get_sam_res"]], "get_time_interval() (singleowner class method)": [[23, "reV.SAM.econ.SingleOwner.get_time_interval"]], "gross_revenue() (singleowner method)": [[23, "reV.SAM.econ.SingleOwner.gross_revenue"]], "input_list (singleowner property)": [[23, "reV.SAM.econ.SingleOwner.input_list"]], "lcoe_fcr() (singleowner method)": [[23, "reV.SAM.econ.SingleOwner.lcoe_fcr"]], "lcoe_nom() (singleowner method)": [[23, "reV.SAM.econ.SingleOwner.lcoe_nom"]], "lcoe_real() (singleowner method)": [[23, "reV.SAM.econ.SingleOwner.lcoe_real"]], "make_datetime() (singleowner static method)": [[23, "reV.SAM.econ.SingleOwner.make_datetime"]], "meta (singleowner property)": [[23, "reV.SAM.econ.SingleOwner.meta"]], "module (singleowner property)": [[23, "reV.SAM.econ.SingleOwner.module"]], "npv() (singleowner method)": [[23, "reV.SAM.econ.SingleOwner.npv"]], "outputs_to_utc_arr() (singleowner method)": [[23, "reV.SAM.econ.SingleOwner.outputs_to_utc_arr"]], "ppa_price() (singleowner method)": [[23, "reV.SAM.econ.SingleOwner.ppa_price"]], "pysam (singleowner property)": [[23, "reV.SAM.econ.SingleOwner.pysam"]], "rev_run() (singleowner class method)": [[23, "reV.SAM.econ.SingleOwner.reV_run"]], "site (singleowner property)": [[23, "reV.SAM.econ.SingleOwner.site"]], "rev.sam.generation": [[24, "module-reV.SAM.generation"]], "abstractsamgeneration (class in rev.sam.generation)": [[25, "reV.SAM.generation.AbstractSamGeneration"]], "outage_config_key (abstractsamgeneration attribute)": [[25, "reV.SAM.generation.AbstractSamGeneration.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (abstractsamgeneration attribute)": [[25, "reV.SAM.generation.AbstractSamGeneration.OUTAGE_SEED_CONFIG_KEY"]], "pysam (abstractsamgeneration attribute)": [[25, "reV.SAM.generation.AbstractSamGeneration.PYSAM"]], "add_scheduled_losses() (abstractsamgeneration method)": [[25, "reV.SAM.generation.AbstractSamGeneration.add_scheduled_losses"]], "annual_energy() (abstractsamgeneration method)": [[25, "reV.SAM.generation.AbstractSamGeneration.annual_energy"]], "assign_inputs() (abstractsamgeneration method)": [[25, "reV.SAM.generation.AbstractSamGeneration.assign_inputs"]], "attr_dict (abstractsamgeneration property)": [[25, "reV.SAM.generation.AbstractSamGeneration.attr_dict"]], "cf_mean() (abstractsamgeneration method)": [[25, "reV.SAM.generation.AbstractSamGeneration.cf_mean"]], "cf_profile() (abstractsamgeneration method)": [[25, "reV.SAM.generation.AbstractSamGeneration.cf_profile"]], "check_resource_data() (abstractsamgeneration method)": [[25, "reV.SAM.generation.AbstractSamGeneration.check_resource_data"]], "collect_outputs() (abstractsamgeneration method)": [[25, "reV.SAM.generation.AbstractSamGeneration.collect_outputs"]], "default() (abstractsamgeneration class method)": [[25, "reV.SAM.generation.AbstractSamGeneration.default"]], "drop_leap() (abstractsamgeneration static method)": [[25, "reV.SAM.generation.AbstractSamGeneration.drop_leap"]], "energy_yield() (abstractsamgeneration method)": [[25, "reV.SAM.generation.AbstractSamGeneration.energy_yield"]], "ensure_res_len() (abstractsamgeneration static method)": [[25, "reV.SAM.generation.AbstractSamGeneration.ensure_res_len"]], "execute() (abstractsamgeneration method)": [[25, "reV.SAM.generation.AbstractSamGeneration.execute"]], "gen_profile() (abstractsamgeneration method)": [[25, "reV.SAM.generation.AbstractSamGeneration.gen_profile"]], "get_sam_res() (abstractsamgeneration static method)": [[25, "reV.SAM.generation.AbstractSamGeneration.get_sam_res"]], "get_time_interval() (abstractsamgeneration class method)": [[25, "reV.SAM.generation.AbstractSamGeneration.get_time_interval"]], "has_timezone (abstractsamgeneration property)": [[25, "reV.SAM.generation.AbstractSamGeneration.has_timezone"]], "input_list (abstractsamgeneration property)": [[25, "reV.SAM.generation.AbstractSamGeneration.input_list"]], "make_datetime() (abstractsamgeneration static method)": [[25, "reV.SAM.generation.AbstractSamGeneration.make_datetime"]], "meta (abstractsamgeneration property)": [[25, "reV.SAM.generation.AbstractSamGeneration.meta"]], "module (abstractsamgeneration property)": [[25, "reV.SAM.generation.AbstractSamGeneration.module"]], "outage_seed (abstractsamgeneration property)": [[25, "reV.SAM.generation.AbstractSamGeneration.outage_seed"]], "outputs_to_utc_arr() (abstractsamgeneration method)": [[25, "reV.SAM.generation.AbstractSamGeneration.outputs_to_utc_arr"]], "pysam (abstractsamgeneration property)": [[25, "reV.SAM.generation.AbstractSamGeneration.pysam"]], "rev_run() (abstractsamgeneration class method)": [[25, "reV.SAM.generation.AbstractSamGeneration.reV_run"]], "run() (abstractsamgeneration method)": [[25, "reV.SAM.generation.AbstractSamGeneration.run"]], "run_gen_and_econ() (abstractsamgeneration method)": [[25, "reV.SAM.generation.AbstractSamGeneration.run_gen_and_econ"]], "set_resource_data() (abstractsamgeneration method)": [[25, "reV.SAM.generation.AbstractSamGeneration.set_resource_data"]], "site (abstractsamgeneration property)": [[25, "reV.SAM.generation.AbstractSamGeneration.site"]], "tz_elev_check() (abstractsamgeneration static method)": [[25, "reV.SAM.generation.AbstractSamGeneration.tz_elev_check"]], "abstractsamgenerationfromweatherfile (class in rev.sam.generation)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile"]], "outage_config_key (abstractsamgenerationfromweatherfile attribute)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (abstractsamgenerationfromweatherfile attribute)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.OUTAGE_SEED_CONFIG_KEY"]], "pysam (abstractsamgenerationfromweatherfile attribute)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.PYSAM"]], "pysam_weather_tag (abstractsamgenerationfromweatherfile property)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.PYSAM_WEATHER_TAG"]], "add_scheduled_losses() (abstractsamgenerationfromweatherfile method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.add_scheduled_losses"]], "annual_energy() (abstractsamgenerationfromweatherfile method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.annual_energy"]], "assign_inputs() (abstractsamgenerationfromweatherfile method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.assign_inputs"]], "attr_dict (abstractsamgenerationfromweatherfile property)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.attr_dict"]], "cf_mean() (abstractsamgenerationfromweatherfile method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.cf_mean"]], "cf_profile() (abstractsamgenerationfromweatherfile method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.cf_profile"]], "check_resource_data() (abstractsamgenerationfromweatherfile method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.check_resource_data"]], "collect_outputs() (abstractsamgenerationfromweatherfile method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.collect_outputs"]], "default() (abstractsamgenerationfromweatherfile class method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.default"]], "drop_leap() (abstractsamgenerationfromweatherfile static method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.drop_leap"]], "energy_yield() (abstractsamgenerationfromweatherfile method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.energy_yield"]], "ensure_res_len() (abstractsamgenerationfromweatherfile static method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.ensure_res_len"]], "execute() (abstractsamgenerationfromweatherfile method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.execute"]], "gen_profile() (abstractsamgenerationfromweatherfile method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.gen_profile"]], "get_sam_res() (abstractsamgenerationfromweatherfile static method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.get_sam_res"]], "get_time_interval() (abstractsamgenerationfromweatherfile class method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.get_time_interval"]], "has_timezone (abstractsamgenerationfromweatherfile property)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.has_timezone"]], "input_list (abstractsamgenerationfromweatherfile property)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.input_list"]], "make_datetime() (abstractsamgenerationfromweatherfile static method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.make_datetime"]], "meta (abstractsamgenerationfromweatherfile property)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.meta"]], "module (abstractsamgenerationfromweatherfile property)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.module"]], "outage_seed (abstractsamgenerationfromweatherfile property)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.outage_seed"]], "outputs_to_utc_arr() (abstractsamgenerationfromweatherfile method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.outputs_to_utc_arr"]], "pysam (abstractsamgenerationfromweatherfile property)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.pysam"]], "rev_run() (abstractsamgenerationfromweatherfile class method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.reV_run"]], "run() (abstractsamgenerationfromweatherfile method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.run"]], "run_gen_and_econ() (abstractsamgenerationfromweatherfile method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.run_gen_and_econ"]], "set_resource_data() (abstractsamgenerationfromweatherfile method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.set_resource_data"]], "site (abstractsamgenerationfromweatherfile property)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.site"]], "tz_elev_check() (abstractsamgenerationfromweatherfile static method)": [[26, "reV.SAM.generation.AbstractSamGenerationFromWeatherFile.tz_elev_check"]], "abstractsampv (class in rev.sam.generation)": [[27, "reV.SAM.generation.AbstractSamPv"]], "outage_config_key (abstractsampv attribute)": [[27, "reV.SAM.generation.AbstractSamPv.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (abstractsampv attribute)": [[27, "reV.SAM.generation.AbstractSamPv.OUTAGE_SEED_CONFIG_KEY"]], "pysam (abstractsampv attribute)": [[27, "reV.SAM.generation.AbstractSamPv.PYSAM"]], "ac() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.ac"]], "add_scheduled_losses() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.add_scheduled_losses"]], "agg_albedo() (abstractsampv static method)": [[27, "reV.SAM.generation.AbstractSamPv.agg_albedo"]], "annual_energy() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.annual_energy"]], "assign_inputs() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.assign_inputs"]], "attr_dict (abstractsampv property)": [[27, "reV.SAM.generation.AbstractSamPv.attr_dict"]], "cf_mean() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.cf_mean"]], "cf_mean_ac() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.cf_mean_ac"]], "cf_profile() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.cf_profile"]], "cf_profile_ac() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.cf_profile_ac"]], "check_resource_data() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.check_resource_data"]], "clipped_power() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.clipped_power"]], "collect_outputs() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.collect_outputs"]], "dc() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.dc"]], "default() (abstractsampv static method)": [[27, "reV.SAM.generation.AbstractSamPv.default"]], "drop_leap() (abstractsampv static method)": [[27, "reV.SAM.generation.AbstractSamPv.drop_leap"]], "energy_yield() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.energy_yield"]], "ensure_res_len() (abstractsampv static method)": [[27, "reV.SAM.generation.AbstractSamPv.ensure_res_len"]], "execute() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.execute"]], "gen_profile() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.gen_profile"]], "get_sam_res() (abstractsampv static method)": [[27, "reV.SAM.generation.AbstractSamPv.get_sam_res"]], "get_time_interval() (abstractsampv class method)": [[27, "reV.SAM.generation.AbstractSamPv.get_time_interval"]], "has_timezone (abstractsampv property)": [[27, "reV.SAM.generation.AbstractSamPv.has_timezone"]], "input_list (abstractsampv property)": [[27, "reV.SAM.generation.AbstractSamPv.input_list"]], "make_datetime() (abstractsampv static method)": [[27, "reV.SAM.generation.AbstractSamPv.make_datetime"]], "meta (abstractsampv property)": [[27, "reV.SAM.generation.AbstractSamPv.meta"]], "module (abstractsampv property)": [[27, "reV.SAM.generation.AbstractSamPv.module"]], "outage_seed (abstractsampv property)": [[27, "reV.SAM.generation.AbstractSamPv.outage_seed"]], "outputs_to_utc_arr() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.outputs_to_utc_arr"]], "pysam (abstractsampv property)": [[27, "reV.SAM.generation.AbstractSamPv.pysam"]], "rev_run() (abstractsampv class method)": [[27, "reV.SAM.generation.AbstractSamPv.reV_run"]], "run() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.run"]], "run_gen_and_econ() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.run_gen_and_econ"]], "set_latitude_tilt_az() (abstractsampv static method)": [[27, "reV.SAM.generation.AbstractSamPv.set_latitude_tilt_az"]], "set_resource_data() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.set_resource_data"]], "site (abstractsampv property)": [[27, "reV.SAM.generation.AbstractSamPv.site"]], "system_capacity_ac() (abstractsampv method)": [[27, "reV.SAM.generation.AbstractSamPv.system_capacity_ac"]], "tz_elev_check() (abstractsampv static method)": [[27, "reV.SAM.generation.AbstractSamPv.tz_elev_check"]], "abstractsamsolar (class in rev.sam.generation)": [[28, "reV.SAM.generation.AbstractSamSolar"]], "outage_config_key (abstractsamsolar attribute)": [[28, "reV.SAM.generation.AbstractSamSolar.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (abstractsamsolar attribute)": [[28, "reV.SAM.generation.AbstractSamSolar.OUTAGE_SEED_CONFIG_KEY"]], "pysam (abstractsamsolar attribute)": [[28, "reV.SAM.generation.AbstractSamSolar.PYSAM"]], "add_scheduled_losses() (abstractsamsolar method)": [[28, "reV.SAM.generation.AbstractSamSolar.add_scheduled_losses"]], "agg_albedo() (abstractsamsolar static method)": [[28, "reV.SAM.generation.AbstractSamSolar.agg_albedo"]], "annual_energy() (abstractsamsolar method)": [[28, "reV.SAM.generation.AbstractSamSolar.annual_energy"]], "assign_inputs() (abstractsamsolar method)": [[28, "reV.SAM.generation.AbstractSamSolar.assign_inputs"]], "attr_dict (abstractsamsolar property)": [[28, "reV.SAM.generation.AbstractSamSolar.attr_dict"]], "cf_mean() (abstractsamsolar method)": [[28, "reV.SAM.generation.AbstractSamSolar.cf_mean"]], "cf_profile() (abstractsamsolar method)": [[28, "reV.SAM.generation.AbstractSamSolar.cf_profile"]], "check_resource_data() (abstractsamsolar method)": [[28, "reV.SAM.generation.AbstractSamSolar.check_resource_data"]], "collect_outputs() (abstractsamsolar method)": [[28, "reV.SAM.generation.AbstractSamSolar.collect_outputs"]], "default() (abstractsamsolar class method)": [[28, "reV.SAM.generation.AbstractSamSolar.default"]], "drop_leap() (abstractsamsolar static method)": [[28, "reV.SAM.generation.AbstractSamSolar.drop_leap"]], "energy_yield() (abstractsamsolar method)": [[28, "reV.SAM.generation.AbstractSamSolar.energy_yield"]], "ensure_res_len() (abstractsamsolar static method)": [[28, "reV.SAM.generation.AbstractSamSolar.ensure_res_len"]], "execute() (abstractsamsolar method)": [[28, "reV.SAM.generation.AbstractSamSolar.execute"]], "gen_profile() (abstractsamsolar method)": [[28, "reV.SAM.generation.AbstractSamSolar.gen_profile"]], "get_sam_res() (abstractsamsolar static method)": [[28, "reV.SAM.generation.AbstractSamSolar.get_sam_res"]], "get_time_interval() (abstractsamsolar class method)": [[28, "reV.SAM.generation.AbstractSamSolar.get_time_interval"]], "has_timezone (abstractsamsolar property)": [[28, "reV.SAM.generation.AbstractSamSolar.has_timezone"]], "input_list (abstractsamsolar property)": [[28, "reV.SAM.generation.AbstractSamSolar.input_list"]], "make_datetime() (abstractsamsolar static method)": [[28, "reV.SAM.generation.AbstractSamSolar.make_datetime"]], "meta (abstractsamsolar property)": [[28, "reV.SAM.generation.AbstractSamSolar.meta"]], "module (abstractsamsolar property)": [[28, "reV.SAM.generation.AbstractSamSolar.module"]], "outage_seed (abstractsamsolar property)": [[28, "reV.SAM.generation.AbstractSamSolar.outage_seed"]], "outputs_to_utc_arr() (abstractsamsolar method)": [[28, "reV.SAM.generation.AbstractSamSolar.outputs_to_utc_arr"]], "pysam (abstractsamsolar property)": [[28, "reV.SAM.generation.AbstractSamSolar.pysam"]], "rev_run() (abstractsamsolar class method)": [[28, "reV.SAM.generation.AbstractSamSolar.reV_run"]], "run() (abstractsamsolar method)": [[28, "reV.SAM.generation.AbstractSamSolar.run"]], "run_gen_and_econ() (abstractsamsolar method)": [[28, "reV.SAM.generation.AbstractSamSolar.run_gen_and_econ"]], "set_resource_data() (abstractsamsolar method)": [[28, "reV.SAM.generation.AbstractSamSolar.set_resource_data"]], "site (abstractsamsolar property)": [[28, "reV.SAM.generation.AbstractSamSolar.site"]], "tz_elev_check() (abstractsamsolar static method)": [[28, "reV.SAM.generation.AbstractSamSolar.tz_elev_check"]], "abstractsamwind (class in rev.sam.generation)": [[29, "reV.SAM.generation.AbstractSamWind"]], "outage_config_key (abstractsamwind attribute)": [[29, "reV.SAM.generation.AbstractSamWind.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (abstractsamwind attribute)": [[29, "reV.SAM.generation.AbstractSamWind.OUTAGE_SEED_CONFIG_KEY"]], "power_curve_config_key (abstractsamwind attribute)": [[29, "reV.SAM.generation.AbstractSamWind.POWER_CURVE_CONFIG_KEY"]], "pysam (abstractsamwind attribute)": [[29, "reV.SAM.generation.AbstractSamWind.PYSAM"]], "add_power_curve_losses() (abstractsamwind method)": [[29, "reV.SAM.generation.AbstractSamWind.add_power_curve_losses"]], "add_scheduled_losses() (abstractsamwind method)": [[29, "reV.SAM.generation.AbstractSamWind.add_scheduled_losses"]], "annual_energy() (abstractsamwind method)": [[29, "reV.SAM.generation.AbstractSamWind.annual_energy"]], "assign_inputs() (abstractsamwind method)": [[29, "reV.SAM.generation.AbstractSamWind.assign_inputs"]], "attr_dict (abstractsamwind property)": [[29, "reV.SAM.generation.AbstractSamWind.attr_dict"]], "cf_mean() (abstractsamwind method)": [[29, "reV.SAM.generation.AbstractSamWind.cf_mean"]], "cf_profile() (abstractsamwind method)": [[29, "reV.SAM.generation.AbstractSamWind.cf_profile"]], "check_resource_data() (abstractsamwind method)": [[29, "reV.SAM.generation.AbstractSamWind.check_resource_data"]], "collect_outputs() (abstractsamwind method)": [[29, "reV.SAM.generation.AbstractSamWind.collect_outputs"]], "default() (abstractsamwind class method)": [[29, "reV.SAM.generation.AbstractSamWind.default"]], "drop_leap() (abstractsamwind static method)": [[29, "reV.SAM.generation.AbstractSamWind.drop_leap"]], "energy_yield() (abstractsamwind method)": [[29, "reV.SAM.generation.AbstractSamWind.energy_yield"]], "ensure_res_len() (abstractsamwind static method)": [[29, "reV.SAM.generation.AbstractSamWind.ensure_res_len"]], "execute() (abstractsamwind method)": [[29, "reV.SAM.generation.AbstractSamWind.execute"]], "gen_profile() (abstractsamwind method)": [[29, "reV.SAM.generation.AbstractSamWind.gen_profile"]], "get_sam_res() (abstractsamwind static method)": [[29, "reV.SAM.generation.AbstractSamWind.get_sam_res"]], "get_time_interval() (abstractsamwind class method)": [[29, "reV.SAM.generation.AbstractSamWind.get_time_interval"]], "has_timezone (abstractsamwind property)": [[29, "reV.SAM.generation.AbstractSamWind.has_timezone"]], "input_list (abstractsamwind property)": [[29, "reV.SAM.generation.AbstractSamWind.input_list"]], "input_power_curve (abstractsamwind property)": [[29, "reV.SAM.generation.AbstractSamWind.input_power_curve"]], "make_datetime() (abstractsamwind static method)": [[29, "reV.SAM.generation.AbstractSamWind.make_datetime"]], "meta (abstractsamwind property)": [[29, "reV.SAM.generation.AbstractSamWind.meta"]], "module (abstractsamwind property)": [[29, "reV.SAM.generation.AbstractSamWind.module"]], "outage_seed (abstractsamwind property)": [[29, "reV.SAM.generation.AbstractSamWind.outage_seed"]], "outputs_to_utc_arr() (abstractsamwind method)": [[29, "reV.SAM.generation.AbstractSamWind.outputs_to_utc_arr"]], "pysam (abstractsamwind property)": [[29, "reV.SAM.generation.AbstractSamWind.pysam"]], "rev_run() (abstractsamwind class method)": [[29, "reV.SAM.generation.AbstractSamWind.reV_run"]], "run() (abstractsamwind method)": [[29, "reV.SAM.generation.AbstractSamWind.run"]], "run_gen_and_econ() (abstractsamwind method)": [[29, "reV.SAM.generation.AbstractSamWind.run_gen_and_econ"]], "set_resource_data() (abstractsamwind method)": [[29, "reV.SAM.generation.AbstractSamWind.set_resource_data"]], "site (abstractsamwind property)": [[29, "reV.SAM.generation.AbstractSamWind.site"]], "tz_elev_check() (abstractsamwind static method)": [[29, "reV.SAM.generation.AbstractSamWind.tz_elev_check"]], "wind_resource_from_input() (abstractsamwind method)": [[29, "reV.SAM.generation.AbstractSamWind.wind_resource_from_input"]], "geothermal (class in rev.sam.generation)": [[30, "reV.SAM.generation.Geothermal"]], "outage_config_key (geothermal attribute)": [[30, "reV.SAM.generation.Geothermal.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (geothermal attribute)": [[30, "reV.SAM.generation.Geothermal.OUTAGE_SEED_CONFIG_KEY"]], "pysam (geothermal attribute)": [[30, "reV.SAM.generation.Geothermal.PYSAM"]], "add_scheduled_losses() (geothermal method)": [[30, "reV.SAM.generation.Geothermal.add_scheduled_losses"]], "annual_energy() (geothermal method)": [[30, "reV.SAM.generation.Geothermal.annual_energy"]], "assign_inputs() (geothermal method)": [[30, "reV.SAM.generation.Geothermal.assign_inputs"]], "attr_dict (geothermal property)": [[30, "reV.SAM.generation.Geothermal.attr_dict"]], "cf_mean() (geothermal method)": [[30, "reV.SAM.generation.Geothermal.cf_mean"]], "cf_profile() (geothermal method)": [[30, "reV.SAM.generation.Geothermal.cf_profile"]], "check_resource_data() (geothermal method)": [[30, "reV.SAM.generation.Geothermal.check_resource_data"]], "collect_outputs() (geothermal method)": [[30, "reV.SAM.generation.Geothermal.collect_outputs"]], "default() (geothermal static method)": [[30, "reV.SAM.generation.Geothermal.default"]], "drop_leap() (geothermal static method)": [[30, "reV.SAM.generation.Geothermal.drop_leap"]], "energy_yield() (geothermal method)": [[30, "reV.SAM.generation.Geothermal.energy_yield"]], "ensure_res_len() (geothermal static method)": [[30, "reV.SAM.generation.Geothermal.ensure_res_len"]], "execute() (geothermal method)": [[30, "reV.SAM.generation.Geothermal.execute"]], "gen_profile() (geothermal method)": [[30, "reV.SAM.generation.Geothermal.gen_profile"]], "get_sam_res() (geothermal static method)": [[30, "reV.SAM.generation.Geothermal.get_sam_res"]], "get_time_interval() (geothermal class method)": [[30, "reV.SAM.generation.Geothermal.get_time_interval"]], "has_timezone (geothermal property)": [[30, "reV.SAM.generation.Geothermal.has_timezone"]], "input_list (geothermal property)": [[30, "reV.SAM.generation.Geothermal.input_list"]], "make_datetime() (geothermal static method)": [[30, "reV.SAM.generation.Geothermal.make_datetime"]], "meta (geothermal property)": [[30, "reV.SAM.generation.Geothermal.meta"]], "module (geothermal property)": [[30, "reV.SAM.generation.Geothermal.module"]], "outage_seed (geothermal property)": [[30, "reV.SAM.generation.Geothermal.outage_seed"]], "outputs_to_utc_arr() (geothermal method)": [[30, "reV.SAM.generation.Geothermal.outputs_to_utc_arr"]], "pysam (geothermal property)": [[30, "reV.SAM.generation.Geothermal.pysam"]], "rev_run() (geothermal class method)": [[30, "reV.SAM.generation.Geothermal.reV_run"]], "run() (geothermal method)": [[30, "reV.SAM.generation.Geothermal.run"]], "run_gen_and_econ() (geothermal method)": [[30, "reV.SAM.generation.Geothermal.run_gen_and_econ"]], "set_resource_data() (geothermal method)": [[30, "reV.SAM.generation.Geothermal.set_resource_data"]], "site (geothermal property)": [[30, "reV.SAM.generation.Geothermal.site"]], "tz_elev_check() (geothermal static method)": [[30, "reV.SAM.generation.Geothermal.tz_elev_check"]], "lineardirectsteam (class in rev.sam.generation)": [[31, "reV.SAM.generation.LinearDirectSteam"]], "outage_config_key (lineardirectsteam attribute)": [[31, "reV.SAM.generation.LinearDirectSteam.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (lineardirectsteam attribute)": [[31, "reV.SAM.generation.LinearDirectSteam.OUTAGE_SEED_CONFIG_KEY"]], "pysam (lineardirectsteam attribute)": [[31, "reV.SAM.generation.LinearDirectSteam.PYSAM"]], "add_scheduled_losses() (lineardirectsteam method)": [[31, "reV.SAM.generation.LinearDirectSteam.add_scheduled_losses"]], "annual_energy() (lineardirectsteam method)": [[31, "reV.SAM.generation.LinearDirectSteam.annual_energy"]], "assign_inputs() (lineardirectsteam method)": [[31, "reV.SAM.generation.LinearDirectSteam.assign_inputs"]], "attr_dict (lineardirectsteam property)": [[31, "reV.SAM.generation.LinearDirectSteam.attr_dict"]], "cf_mean() (lineardirectsteam method)": [[31, "reV.SAM.generation.LinearDirectSteam.cf_mean"]], "cf_profile() (lineardirectsteam method)": [[31, "reV.SAM.generation.LinearDirectSteam.cf_profile"]], "check_resource_data() (lineardirectsteam method)": [[31, "reV.SAM.generation.LinearDirectSteam.check_resource_data"]], "collect_outputs() (lineardirectsteam method)": [[31, "reV.SAM.generation.LinearDirectSteam.collect_outputs"]], "default() (lineardirectsteam static method)": [[31, "reV.SAM.generation.LinearDirectSteam.default"]], "drop_leap() (lineardirectsteam static method)": [[31, "reV.SAM.generation.LinearDirectSteam.drop_leap"]], "energy_yield() (lineardirectsteam method)": [[31, "reV.SAM.generation.LinearDirectSteam.energy_yield"]], "ensure_res_len() (lineardirectsteam static method)": [[31, "reV.SAM.generation.LinearDirectSteam.ensure_res_len"]], "execute() (lineardirectsteam method)": [[31, "reV.SAM.generation.LinearDirectSteam.execute"]], "gen_profile() (lineardirectsteam method)": [[31, "reV.SAM.generation.LinearDirectSteam.gen_profile"]], "get_sam_res() (lineardirectsteam static method)": [[31, "reV.SAM.generation.LinearDirectSteam.get_sam_res"]], "get_time_interval() (lineardirectsteam class method)": [[31, "reV.SAM.generation.LinearDirectSteam.get_time_interval"]], "has_timezone (lineardirectsteam property)": [[31, "reV.SAM.generation.LinearDirectSteam.has_timezone"]], "input_list (lineardirectsteam property)": [[31, "reV.SAM.generation.LinearDirectSteam.input_list"]], "make_datetime() (lineardirectsteam static method)": [[31, "reV.SAM.generation.LinearDirectSteam.make_datetime"]], "meta (lineardirectsteam property)": [[31, "reV.SAM.generation.LinearDirectSteam.meta"]], "module (lineardirectsteam property)": [[31, "reV.SAM.generation.LinearDirectSteam.module"]], "outage_seed (lineardirectsteam property)": [[31, "reV.SAM.generation.LinearDirectSteam.outage_seed"]], "outputs_to_utc_arr() (lineardirectsteam method)": [[31, "reV.SAM.generation.LinearDirectSteam.outputs_to_utc_arr"]], "pysam (lineardirectsteam property)": [[31, "reV.SAM.generation.LinearDirectSteam.pysam"]], "rev_run() (lineardirectsteam class method)": [[31, "reV.SAM.generation.LinearDirectSteam.reV_run"]], "run() (lineardirectsteam method)": [[31, "reV.SAM.generation.LinearDirectSteam.run"]], "run_gen_and_econ() (lineardirectsteam method)": [[31, "reV.SAM.generation.LinearDirectSteam.run_gen_and_econ"]], "set_resource_data() (lineardirectsteam method)": [[31, "reV.SAM.generation.LinearDirectSteam.set_resource_data"]], "site (lineardirectsteam property)": [[31, "reV.SAM.generation.LinearDirectSteam.site"]], "tz_elev_check() (lineardirectsteam static method)": [[31, "reV.SAM.generation.LinearDirectSteam.tz_elev_check"]], "mhkwave (class in rev.sam.generation)": [[32, "reV.SAM.generation.MhkWave"]], "outage_config_key (mhkwave attribute)": [[32, "reV.SAM.generation.MhkWave.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (mhkwave attribute)": [[32, "reV.SAM.generation.MhkWave.OUTAGE_SEED_CONFIG_KEY"]], "pysam (mhkwave attribute)": [[32, "reV.SAM.generation.MhkWave.PYSAM"]], "add_scheduled_losses() (mhkwave method)": [[32, "reV.SAM.generation.MhkWave.add_scheduled_losses"]], "annual_energy() (mhkwave method)": [[32, "reV.SAM.generation.MhkWave.annual_energy"]], "assign_inputs() (mhkwave method)": [[32, "reV.SAM.generation.MhkWave.assign_inputs"]], "attr_dict (mhkwave property)": [[32, "reV.SAM.generation.MhkWave.attr_dict"]], "cf_mean() (mhkwave method)": [[32, "reV.SAM.generation.MhkWave.cf_mean"]], "cf_profile() (mhkwave method)": [[32, "reV.SAM.generation.MhkWave.cf_profile"]], "check_resource_data() (mhkwave method)": [[32, "reV.SAM.generation.MhkWave.check_resource_data"]], "collect_outputs() (mhkwave method)": [[32, "reV.SAM.generation.MhkWave.collect_outputs"]], "default() (mhkwave static method)": [[32, "reV.SAM.generation.MhkWave.default"]], "drop_leap() (mhkwave static method)": [[32, "reV.SAM.generation.MhkWave.drop_leap"]], "energy_yield() (mhkwave method)": [[32, "reV.SAM.generation.MhkWave.energy_yield"]], "ensure_res_len() (mhkwave static method)": [[32, "reV.SAM.generation.MhkWave.ensure_res_len"]], "execute() (mhkwave method)": [[32, "reV.SAM.generation.MhkWave.execute"]], "gen_profile() (mhkwave method)": [[32, "reV.SAM.generation.MhkWave.gen_profile"]], "get_sam_res() (mhkwave static method)": [[32, "reV.SAM.generation.MhkWave.get_sam_res"]], "get_time_interval() (mhkwave class method)": [[32, "reV.SAM.generation.MhkWave.get_time_interval"]], "has_timezone (mhkwave property)": [[32, "reV.SAM.generation.MhkWave.has_timezone"]], "input_list (mhkwave property)": [[32, "reV.SAM.generation.MhkWave.input_list"]], "make_datetime() (mhkwave static method)": [[32, "reV.SAM.generation.MhkWave.make_datetime"]], "meta (mhkwave property)": [[32, "reV.SAM.generation.MhkWave.meta"]], "module (mhkwave property)": [[32, "reV.SAM.generation.MhkWave.module"]], "outage_seed (mhkwave property)": [[32, "reV.SAM.generation.MhkWave.outage_seed"]], "outputs_to_utc_arr() (mhkwave method)": [[32, "reV.SAM.generation.MhkWave.outputs_to_utc_arr"]], "pysam (mhkwave property)": [[32, "reV.SAM.generation.MhkWave.pysam"]], "rev_run() (mhkwave class method)": [[32, "reV.SAM.generation.MhkWave.reV_run"]], "run() (mhkwave method)": [[32, "reV.SAM.generation.MhkWave.run"]], "run_gen_and_econ() (mhkwave method)": [[32, "reV.SAM.generation.MhkWave.run_gen_and_econ"]], "set_resource_data() (mhkwave method)": [[32, "reV.SAM.generation.MhkWave.set_resource_data"]], "site (mhkwave property)": [[32, "reV.SAM.generation.MhkWave.site"]], "tz_elev_check() (mhkwave static method)": [[32, "reV.SAM.generation.MhkWave.tz_elev_check"]], "outage_config_key (pvsamv1 attribute)": [[33, "reV.SAM.generation.PvSamv1.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (pvsamv1 attribute)": [[33, "reV.SAM.generation.PvSamv1.OUTAGE_SEED_CONFIG_KEY"]], "pysam (pvsamv1 attribute)": [[33, "reV.SAM.generation.PvSamv1.PYSAM"]], "pvsamv1 (class in rev.sam.generation)": [[33, "reV.SAM.generation.PvSamv1"]], "ac() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.ac"]], "add_scheduled_losses() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.add_scheduled_losses"]], "agg_albedo() (pvsamv1 static method)": [[33, "reV.SAM.generation.PvSamv1.agg_albedo"]], "annual_energy() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.annual_energy"]], "assign_inputs() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.assign_inputs"]], "attr_dict (pvsamv1 property)": [[33, "reV.SAM.generation.PvSamv1.attr_dict"]], "cf_mean() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.cf_mean"]], "cf_mean_ac() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.cf_mean_ac"]], "cf_profile() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.cf_profile"]], "cf_profile_ac() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.cf_profile_ac"]], "check_resource_data() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.check_resource_data"]], "clipped_power() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.clipped_power"]], "collect_outputs() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.collect_outputs"]], "dc() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.dc"]], "default() (pvsamv1 static method)": [[33, "reV.SAM.generation.PvSamv1.default"]], "drop_leap() (pvsamv1 static method)": [[33, "reV.SAM.generation.PvSamv1.drop_leap"]], "energy_yield() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.energy_yield"]], "ensure_res_len() (pvsamv1 static method)": [[33, "reV.SAM.generation.PvSamv1.ensure_res_len"]], "execute() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.execute"]], "gen_profile() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.gen_profile"]], "get_sam_res() (pvsamv1 static method)": [[33, "reV.SAM.generation.PvSamv1.get_sam_res"]], "get_time_interval() (pvsamv1 class method)": [[33, "reV.SAM.generation.PvSamv1.get_time_interval"]], "has_timezone (pvsamv1 property)": [[33, "reV.SAM.generation.PvSamv1.has_timezone"]], "input_list (pvsamv1 property)": [[33, "reV.SAM.generation.PvSamv1.input_list"]], "make_datetime() (pvsamv1 static method)": [[33, "reV.SAM.generation.PvSamv1.make_datetime"]], "meta (pvsamv1 property)": [[33, "reV.SAM.generation.PvSamv1.meta"]], "module (pvsamv1 property)": [[33, "reV.SAM.generation.PvSamv1.module"]], "outage_seed (pvsamv1 property)": [[33, "reV.SAM.generation.PvSamv1.outage_seed"]], "outputs_to_utc_arr() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.outputs_to_utc_arr"]], "pysam (pvsamv1 property)": [[33, "reV.SAM.generation.PvSamv1.pysam"]], "rev_run() (pvsamv1 class method)": [[33, "reV.SAM.generation.PvSamv1.reV_run"]], "run() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.run"]], "run_gen_and_econ() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.run_gen_and_econ"]], "set_latitude_tilt_az() (pvsamv1 static method)": [[33, "reV.SAM.generation.PvSamv1.set_latitude_tilt_az"]], "set_resource_data() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.set_resource_data"]], "site (pvsamv1 property)": [[33, "reV.SAM.generation.PvSamv1.site"]], "system_capacity_ac() (pvsamv1 method)": [[33, "reV.SAM.generation.PvSamv1.system_capacity_ac"]], "tz_elev_check() (pvsamv1 static method)": [[33, "reV.SAM.generation.PvSamv1.tz_elev_check"]], "outage_config_key (pvwattsv5 attribute)": [[34, "reV.SAM.generation.PvWattsv5.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (pvwattsv5 attribute)": [[34, "reV.SAM.generation.PvWattsv5.OUTAGE_SEED_CONFIG_KEY"]], "pysam (pvwattsv5 attribute)": [[34, "reV.SAM.generation.PvWattsv5.PYSAM"]], "pvwattsv5 (class in rev.sam.generation)": [[34, "reV.SAM.generation.PvWattsv5"]], "ac() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.ac"]], "add_scheduled_losses() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.add_scheduled_losses"]], "agg_albedo() (pvwattsv5 static method)": [[34, "reV.SAM.generation.PvWattsv5.agg_albedo"]], "annual_energy() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.annual_energy"]], "assign_inputs() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.assign_inputs"]], "attr_dict (pvwattsv5 property)": [[34, "reV.SAM.generation.PvWattsv5.attr_dict"]], "cf_mean() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.cf_mean"]], "cf_mean_ac() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.cf_mean_ac"]], "cf_profile() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.cf_profile"]], "cf_profile_ac() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.cf_profile_ac"]], "check_resource_data() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.check_resource_data"]], "clipped_power() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.clipped_power"]], "collect_outputs() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.collect_outputs"]], "dc() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.dc"]], "default() (pvwattsv5 static method)": [[34, "reV.SAM.generation.PvWattsv5.default"]], "drop_leap() (pvwattsv5 static method)": [[34, "reV.SAM.generation.PvWattsv5.drop_leap"]], "energy_yield() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.energy_yield"]], "ensure_res_len() (pvwattsv5 static method)": [[34, "reV.SAM.generation.PvWattsv5.ensure_res_len"]], "execute() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.execute"]], "gen_profile() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.gen_profile"]], "get_sam_res() (pvwattsv5 static method)": [[34, "reV.SAM.generation.PvWattsv5.get_sam_res"]], "get_time_interval() (pvwattsv5 class method)": [[34, "reV.SAM.generation.PvWattsv5.get_time_interval"]], "has_timezone (pvwattsv5 property)": [[34, "reV.SAM.generation.PvWattsv5.has_timezone"]], "input_list (pvwattsv5 property)": [[34, "reV.SAM.generation.PvWattsv5.input_list"]], "make_datetime() (pvwattsv5 static method)": [[34, "reV.SAM.generation.PvWattsv5.make_datetime"]], "meta (pvwattsv5 property)": [[34, "reV.SAM.generation.PvWattsv5.meta"]], "module (pvwattsv5 property)": [[34, "reV.SAM.generation.PvWattsv5.module"]], "outage_seed (pvwattsv5 property)": [[34, "reV.SAM.generation.PvWattsv5.outage_seed"]], "outputs_to_utc_arr() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.outputs_to_utc_arr"]], "pysam (pvwattsv5 property)": [[34, "reV.SAM.generation.PvWattsv5.pysam"]], "rev_run() (pvwattsv5 class method)": [[34, "reV.SAM.generation.PvWattsv5.reV_run"]], "run() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.run"]], "run_gen_and_econ() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.run_gen_and_econ"]], "set_latitude_tilt_az() (pvwattsv5 static method)": [[34, "reV.SAM.generation.PvWattsv5.set_latitude_tilt_az"]], "set_resource_data() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.set_resource_data"]], "site (pvwattsv5 property)": [[34, "reV.SAM.generation.PvWattsv5.site"]], "system_capacity_ac() (pvwattsv5 method)": [[34, "reV.SAM.generation.PvWattsv5.system_capacity_ac"]], "tz_elev_check() (pvwattsv5 static method)": [[34, "reV.SAM.generation.PvWattsv5.tz_elev_check"]], "outage_config_key (pvwattsv7 attribute)": [[35, "reV.SAM.generation.PvWattsv7.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (pvwattsv7 attribute)": [[35, "reV.SAM.generation.PvWattsv7.OUTAGE_SEED_CONFIG_KEY"]], "pysam (pvwattsv7 attribute)": [[35, "reV.SAM.generation.PvWattsv7.PYSAM"]], "pvwattsv7 (class in rev.sam.generation)": [[35, "reV.SAM.generation.PvWattsv7"]], "ac() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.ac"]], "add_scheduled_losses() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.add_scheduled_losses"]], "agg_albedo() (pvwattsv7 static method)": [[35, "reV.SAM.generation.PvWattsv7.agg_albedo"]], "annual_energy() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.annual_energy"]], "assign_inputs() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.assign_inputs"]], "attr_dict (pvwattsv7 property)": [[35, "reV.SAM.generation.PvWattsv7.attr_dict"]], "cf_mean() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.cf_mean"]], "cf_mean_ac() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.cf_mean_ac"]], "cf_profile() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.cf_profile"]], "cf_profile_ac() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.cf_profile_ac"]], "check_resource_data() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.check_resource_data"]], "clipped_power() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.clipped_power"]], "collect_outputs() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.collect_outputs"]], "dc() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.dc"]], "default() (pvwattsv7 static method)": [[35, "reV.SAM.generation.PvWattsv7.default"]], "drop_leap() (pvwattsv7 static method)": [[35, "reV.SAM.generation.PvWattsv7.drop_leap"]], "energy_yield() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.energy_yield"]], "ensure_res_len() (pvwattsv7 static method)": [[35, "reV.SAM.generation.PvWattsv7.ensure_res_len"]], "execute() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.execute"]], "gen_profile() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.gen_profile"]], "get_sam_res() (pvwattsv7 static method)": [[35, "reV.SAM.generation.PvWattsv7.get_sam_res"]], "get_time_interval() (pvwattsv7 class method)": [[35, "reV.SAM.generation.PvWattsv7.get_time_interval"]], "has_timezone (pvwattsv7 property)": [[35, "reV.SAM.generation.PvWattsv7.has_timezone"]], "input_list (pvwattsv7 property)": [[35, "reV.SAM.generation.PvWattsv7.input_list"]], "make_datetime() (pvwattsv7 static method)": [[35, "reV.SAM.generation.PvWattsv7.make_datetime"]], "meta (pvwattsv7 property)": [[35, "reV.SAM.generation.PvWattsv7.meta"]], "module (pvwattsv7 property)": [[35, "reV.SAM.generation.PvWattsv7.module"]], "outage_seed (pvwattsv7 property)": [[35, "reV.SAM.generation.PvWattsv7.outage_seed"]], "outputs_to_utc_arr() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.outputs_to_utc_arr"]], "pysam (pvwattsv7 property)": [[35, "reV.SAM.generation.PvWattsv7.pysam"]], "rev_run() (pvwattsv7 class method)": [[35, "reV.SAM.generation.PvWattsv7.reV_run"]], "run() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.run"]], "run_gen_and_econ() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.run_gen_and_econ"]], "set_latitude_tilt_az() (pvwattsv7 static method)": [[35, "reV.SAM.generation.PvWattsv7.set_latitude_tilt_az"]], "set_resource_data() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.set_resource_data"]], "site (pvwattsv7 property)": [[35, "reV.SAM.generation.PvWattsv7.site"]], "system_capacity_ac() (pvwattsv7 method)": [[35, "reV.SAM.generation.PvWattsv7.system_capacity_ac"]], "tz_elev_check() (pvwattsv7 static method)": [[35, "reV.SAM.generation.PvWattsv7.tz_elev_check"]], "outage_config_key (pvwattsv8 attribute)": [[36, "reV.SAM.generation.PvWattsv8.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (pvwattsv8 attribute)": [[36, "reV.SAM.generation.PvWattsv8.OUTAGE_SEED_CONFIG_KEY"]], "pysam (pvwattsv8 attribute)": [[36, "reV.SAM.generation.PvWattsv8.PYSAM"]], "pvwattsv8 (class in rev.sam.generation)": [[36, "reV.SAM.generation.PvWattsv8"]], "ac() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.ac"]], "add_scheduled_losses() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.add_scheduled_losses"]], "agg_albedo() (pvwattsv8 static method)": [[36, "reV.SAM.generation.PvWattsv8.agg_albedo"]], "annual_energy() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.annual_energy"]], "assign_inputs() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.assign_inputs"]], "attr_dict (pvwattsv8 property)": [[36, "reV.SAM.generation.PvWattsv8.attr_dict"]], "cf_mean() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.cf_mean"]], "cf_mean_ac() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.cf_mean_ac"]], "cf_profile() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.cf_profile"]], "cf_profile_ac() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.cf_profile_ac"]], "check_resource_data() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.check_resource_data"]], "clipped_power() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.clipped_power"]], "collect_outputs() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.collect_outputs"]], "dc() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.dc"]], "default() (pvwattsv8 static method)": [[36, "reV.SAM.generation.PvWattsv8.default"]], "drop_leap() (pvwattsv8 static method)": [[36, "reV.SAM.generation.PvWattsv8.drop_leap"]], "energy_yield() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.energy_yield"]], "ensure_res_len() (pvwattsv8 static method)": [[36, "reV.SAM.generation.PvWattsv8.ensure_res_len"]], "execute() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.execute"]], "gen_profile() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.gen_profile"]], "get_sam_res() (pvwattsv8 static method)": [[36, "reV.SAM.generation.PvWattsv8.get_sam_res"]], "get_time_interval() (pvwattsv8 class method)": [[36, "reV.SAM.generation.PvWattsv8.get_time_interval"]], "has_timezone (pvwattsv8 property)": [[36, "reV.SAM.generation.PvWattsv8.has_timezone"]], "input_list (pvwattsv8 property)": [[36, "reV.SAM.generation.PvWattsv8.input_list"]], "make_datetime() (pvwattsv8 static method)": [[36, "reV.SAM.generation.PvWattsv8.make_datetime"]], "meta (pvwattsv8 property)": [[36, "reV.SAM.generation.PvWattsv8.meta"]], "module (pvwattsv8 property)": [[36, "reV.SAM.generation.PvWattsv8.module"]], "outage_seed (pvwattsv8 property)": [[36, "reV.SAM.generation.PvWattsv8.outage_seed"]], "outputs_to_utc_arr() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.outputs_to_utc_arr"]], "pysam (pvwattsv8 property)": [[36, "reV.SAM.generation.PvWattsv8.pysam"]], "rev_run() (pvwattsv8 class method)": [[36, "reV.SAM.generation.PvWattsv8.reV_run"]], "run() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.run"]], "run_gen_and_econ() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.run_gen_and_econ"]], "set_latitude_tilt_az() (pvwattsv8 static method)": [[36, "reV.SAM.generation.PvWattsv8.set_latitude_tilt_az"]], "set_resource_data() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.set_resource_data"]], "site (pvwattsv8 property)": [[36, "reV.SAM.generation.PvWattsv8.site"]], "system_capacity_ac() (pvwattsv8 method)": [[36, "reV.SAM.generation.PvWattsv8.system_capacity_ac"]], "tz_elev_check() (pvwattsv8 static method)": [[36, "reV.SAM.generation.PvWattsv8.tz_elev_check"]], "outage_config_key (solarwaterheat attribute)": [[37, "reV.SAM.generation.SolarWaterHeat.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (solarwaterheat attribute)": [[37, "reV.SAM.generation.SolarWaterHeat.OUTAGE_SEED_CONFIG_KEY"]], "pysam (solarwaterheat attribute)": [[37, "reV.SAM.generation.SolarWaterHeat.PYSAM"]], "solarwaterheat (class in rev.sam.generation)": [[37, "reV.SAM.generation.SolarWaterHeat"]], "add_scheduled_losses() (solarwaterheat method)": [[37, "reV.SAM.generation.SolarWaterHeat.add_scheduled_losses"]], "annual_energy() (solarwaterheat method)": [[37, "reV.SAM.generation.SolarWaterHeat.annual_energy"]], "assign_inputs() (solarwaterheat method)": [[37, "reV.SAM.generation.SolarWaterHeat.assign_inputs"]], "attr_dict (solarwaterheat property)": [[37, "reV.SAM.generation.SolarWaterHeat.attr_dict"]], "cf_mean() (solarwaterheat method)": [[37, "reV.SAM.generation.SolarWaterHeat.cf_mean"]], "cf_profile() (solarwaterheat method)": [[37, "reV.SAM.generation.SolarWaterHeat.cf_profile"]], "check_resource_data() (solarwaterheat method)": [[37, "reV.SAM.generation.SolarWaterHeat.check_resource_data"]], "collect_outputs() (solarwaterheat method)": [[37, "reV.SAM.generation.SolarWaterHeat.collect_outputs"]], "default() (solarwaterheat static method)": [[37, "reV.SAM.generation.SolarWaterHeat.default"]], "drop_leap() (solarwaterheat static method)": [[37, "reV.SAM.generation.SolarWaterHeat.drop_leap"]], "energy_yield() (solarwaterheat method)": [[37, "reV.SAM.generation.SolarWaterHeat.energy_yield"]], "ensure_res_len() (solarwaterheat static method)": [[37, "reV.SAM.generation.SolarWaterHeat.ensure_res_len"]], "execute() (solarwaterheat method)": [[37, "reV.SAM.generation.SolarWaterHeat.execute"]], "gen_profile() (solarwaterheat method)": [[37, "reV.SAM.generation.SolarWaterHeat.gen_profile"]], "get_sam_res() (solarwaterheat static method)": [[37, "reV.SAM.generation.SolarWaterHeat.get_sam_res"]], "get_time_interval() (solarwaterheat class method)": [[37, "reV.SAM.generation.SolarWaterHeat.get_time_interval"]], "has_timezone (solarwaterheat property)": [[37, "reV.SAM.generation.SolarWaterHeat.has_timezone"]], "input_list (solarwaterheat property)": [[37, "reV.SAM.generation.SolarWaterHeat.input_list"]], "make_datetime() (solarwaterheat static method)": [[37, "reV.SAM.generation.SolarWaterHeat.make_datetime"]], "meta (solarwaterheat property)": [[37, "reV.SAM.generation.SolarWaterHeat.meta"]], "module (solarwaterheat property)": [[37, "reV.SAM.generation.SolarWaterHeat.module"]], "outage_seed (solarwaterheat property)": [[37, "reV.SAM.generation.SolarWaterHeat.outage_seed"]], "outputs_to_utc_arr() (solarwaterheat method)": [[37, "reV.SAM.generation.SolarWaterHeat.outputs_to_utc_arr"]], "pysam (solarwaterheat property)": [[37, "reV.SAM.generation.SolarWaterHeat.pysam"]], "rev_run() (solarwaterheat class method)": [[37, "reV.SAM.generation.SolarWaterHeat.reV_run"]], "run() (solarwaterheat method)": [[37, "reV.SAM.generation.SolarWaterHeat.run"]], "run_gen_and_econ() (solarwaterheat method)": [[37, "reV.SAM.generation.SolarWaterHeat.run_gen_and_econ"]], "set_resource_data() (solarwaterheat method)": [[37, "reV.SAM.generation.SolarWaterHeat.set_resource_data"]], "site (solarwaterheat property)": [[37, "reV.SAM.generation.SolarWaterHeat.site"]], "tz_elev_check() (solarwaterheat static method)": [[37, "reV.SAM.generation.SolarWaterHeat.tz_elev_check"]], "outage_config_key (tcsmoltensalt attribute)": [[38, "reV.SAM.generation.TcsMoltenSalt.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (tcsmoltensalt attribute)": [[38, "reV.SAM.generation.TcsMoltenSalt.OUTAGE_SEED_CONFIG_KEY"]], "pysam (tcsmoltensalt attribute)": [[38, "reV.SAM.generation.TcsMoltenSalt.PYSAM"]], "tcsmoltensalt (class in rev.sam.generation)": [[38, "reV.SAM.generation.TcsMoltenSalt"]], "add_scheduled_losses() (tcsmoltensalt method)": [[38, "reV.SAM.generation.TcsMoltenSalt.add_scheduled_losses"]], "agg_albedo() (tcsmoltensalt static method)": [[38, "reV.SAM.generation.TcsMoltenSalt.agg_albedo"]], "annual_energy() (tcsmoltensalt method)": [[38, "reV.SAM.generation.TcsMoltenSalt.annual_energy"]], "assign_inputs() (tcsmoltensalt method)": [[38, "reV.SAM.generation.TcsMoltenSalt.assign_inputs"]], "attr_dict (tcsmoltensalt property)": [[38, "reV.SAM.generation.TcsMoltenSalt.attr_dict"]], "cf_mean() (tcsmoltensalt method)": [[38, "reV.SAM.generation.TcsMoltenSalt.cf_mean"]], "cf_profile() (tcsmoltensalt method)": [[38, "reV.SAM.generation.TcsMoltenSalt.cf_profile"]], "check_resource_data() (tcsmoltensalt method)": [[38, "reV.SAM.generation.TcsMoltenSalt.check_resource_data"]], "collect_outputs() (tcsmoltensalt method)": [[38, "reV.SAM.generation.TcsMoltenSalt.collect_outputs"]], "default() (tcsmoltensalt static method)": [[38, "reV.SAM.generation.TcsMoltenSalt.default"]], "drop_leap() (tcsmoltensalt static method)": [[38, "reV.SAM.generation.TcsMoltenSalt.drop_leap"]], "energy_yield() (tcsmoltensalt method)": [[38, "reV.SAM.generation.TcsMoltenSalt.energy_yield"]], "ensure_res_len() (tcsmoltensalt static method)": [[38, "reV.SAM.generation.TcsMoltenSalt.ensure_res_len"]], "execute() (tcsmoltensalt method)": [[38, "reV.SAM.generation.TcsMoltenSalt.execute"]], "gen_profile() (tcsmoltensalt method)": [[38, "reV.SAM.generation.TcsMoltenSalt.gen_profile"]], "get_sam_res() (tcsmoltensalt static method)": [[38, "reV.SAM.generation.TcsMoltenSalt.get_sam_res"]], "get_time_interval() (tcsmoltensalt class method)": [[38, "reV.SAM.generation.TcsMoltenSalt.get_time_interval"]], "has_timezone (tcsmoltensalt property)": [[38, "reV.SAM.generation.TcsMoltenSalt.has_timezone"]], "input_list (tcsmoltensalt property)": [[38, "reV.SAM.generation.TcsMoltenSalt.input_list"]], "make_datetime() (tcsmoltensalt static method)": [[38, "reV.SAM.generation.TcsMoltenSalt.make_datetime"]], "meta (tcsmoltensalt property)": [[38, "reV.SAM.generation.TcsMoltenSalt.meta"]], "module (tcsmoltensalt property)": [[38, "reV.SAM.generation.TcsMoltenSalt.module"]], "outage_seed (tcsmoltensalt property)": [[38, "reV.SAM.generation.TcsMoltenSalt.outage_seed"]], "outputs_to_utc_arr() (tcsmoltensalt method)": [[38, "reV.SAM.generation.TcsMoltenSalt.outputs_to_utc_arr"]], "pysam (tcsmoltensalt property)": [[38, "reV.SAM.generation.TcsMoltenSalt.pysam"]], "rev_run() (tcsmoltensalt class method)": [[38, "reV.SAM.generation.TcsMoltenSalt.reV_run"]], "run() (tcsmoltensalt method)": [[38, "reV.SAM.generation.TcsMoltenSalt.run"]], "run_gen_and_econ() (tcsmoltensalt method)": [[38, "reV.SAM.generation.TcsMoltenSalt.run_gen_and_econ"]], "set_resource_data() (tcsmoltensalt method)": [[38, "reV.SAM.generation.TcsMoltenSalt.set_resource_data"]], "site (tcsmoltensalt property)": [[38, "reV.SAM.generation.TcsMoltenSalt.site"]], "tz_elev_check() (tcsmoltensalt static method)": [[38, "reV.SAM.generation.TcsMoltenSalt.tz_elev_check"]], "outage_config_key (troughphysicalheat attribute)": [[39, "reV.SAM.generation.TroughPhysicalHeat.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (troughphysicalheat attribute)": [[39, "reV.SAM.generation.TroughPhysicalHeat.OUTAGE_SEED_CONFIG_KEY"]], "pysam (troughphysicalheat attribute)": [[39, "reV.SAM.generation.TroughPhysicalHeat.PYSAM"]], "troughphysicalheat (class in rev.sam.generation)": [[39, "reV.SAM.generation.TroughPhysicalHeat"]], "add_scheduled_losses() (troughphysicalheat method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.add_scheduled_losses"]], "annual_energy() (troughphysicalheat method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.annual_energy"]], "assign_inputs() (troughphysicalheat method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.assign_inputs"]], "attr_dict (troughphysicalheat property)": [[39, "reV.SAM.generation.TroughPhysicalHeat.attr_dict"]], "cf_mean() (troughphysicalheat method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.cf_mean"]], "cf_profile() (troughphysicalheat method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.cf_profile"]], "check_resource_data() (troughphysicalheat method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.check_resource_data"]], "collect_outputs() (troughphysicalheat method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.collect_outputs"]], "default() (troughphysicalheat static method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.default"]], "drop_leap() (troughphysicalheat static method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.drop_leap"]], "energy_yield() (troughphysicalheat method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.energy_yield"]], "ensure_res_len() (troughphysicalheat static method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.ensure_res_len"]], "execute() (troughphysicalheat method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.execute"]], "gen_profile() (troughphysicalheat method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.gen_profile"]], "get_sam_res() (troughphysicalheat static method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.get_sam_res"]], "get_time_interval() (troughphysicalheat class method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.get_time_interval"]], "has_timezone (troughphysicalheat property)": [[39, "reV.SAM.generation.TroughPhysicalHeat.has_timezone"]], "input_list (troughphysicalheat property)": [[39, "reV.SAM.generation.TroughPhysicalHeat.input_list"]], "make_datetime() (troughphysicalheat static method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.make_datetime"]], "meta (troughphysicalheat property)": [[39, "reV.SAM.generation.TroughPhysicalHeat.meta"]], "module (troughphysicalheat property)": [[39, "reV.SAM.generation.TroughPhysicalHeat.module"]], "outage_seed (troughphysicalheat property)": [[39, "reV.SAM.generation.TroughPhysicalHeat.outage_seed"]], "outputs_to_utc_arr() (troughphysicalheat method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.outputs_to_utc_arr"]], "pysam (troughphysicalheat property)": [[39, "reV.SAM.generation.TroughPhysicalHeat.pysam"]], "rev_run() (troughphysicalheat class method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.reV_run"]], "run() (troughphysicalheat method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.run"]], "run_gen_and_econ() (troughphysicalheat method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.run_gen_and_econ"]], "set_resource_data() (troughphysicalheat method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.set_resource_data"]], "site (troughphysicalheat property)": [[39, "reV.SAM.generation.TroughPhysicalHeat.site"]], "tz_elev_check() (troughphysicalheat static method)": [[39, "reV.SAM.generation.TroughPhysicalHeat.tz_elev_check"]], "outage_config_key (windpower attribute)": [[40, "reV.SAM.generation.WindPower.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (windpower attribute)": [[40, "reV.SAM.generation.WindPower.OUTAGE_SEED_CONFIG_KEY"]], "power_curve_config_key (windpower attribute)": [[40, "reV.SAM.generation.WindPower.POWER_CURVE_CONFIG_KEY"]], "pysam (windpower attribute)": [[40, "reV.SAM.generation.WindPower.PYSAM"]], "windpower (class in rev.sam.generation)": [[40, "reV.SAM.generation.WindPower"]], "add_power_curve_losses() (windpower method)": [[40, "reV.SAM.generation.WindPower.add_power_curve_losses"]], "add_scheduled_losses() (windpower method)": [[40, "reV.SAM.generation.WindPower.add_scheduled_losses"]], "annual_energy() (windpower method)": [[40, "reV.SAM.generation.WindPower.annual_energy"]], "assign_inputs() (windpower method)": [[40, "reV.SAM.generation.WindPower.assign_inputs"]], "attr_dict (windpower property)": [[40, "reV.SAM.generation.WindPower.attr_dict"]], "cf_mean() (windpower method)": [[40, "reV.SAM.generation.WindPower.cf_mean"]], "cf_profile() (windpower method)": [[40, "reV.SAM.generation.WindPower.cf_profile"]], "check_resource_data() (windpower method)": [[40, "reV.SAM.generation.WindPower.check_resource_data"]], "collect_outputs() (windpower method)": [[40, "reV.SAM.generation.WindPower.collect_outputs"]], "default() (windpower static method)": [[40, "reV.SAM.generation.WindPower.default"]], "drop_leap() (windpower static method)": [[40, "reV.SAM.generation.WindPower.drop_leap"]], "energy_yield() (windpower method)": [[40, "reV.SAM.generation.WindPower.energy_yield"]], "ensure_res_len() (windpower static method)": [[40, "reV.SAM.generation.WindPower.ensure_res_len"]], "execute() (windpower method)": [[40, "reV.SAM.generation.WindPower.execute"]], "gen_profile() (windpower method)": [[40, "reV.SAM.generation.WindPower.gen_profile"]], "get_sam_res() (windpower static method)": [[40, "reV.SAM.generation.WindPower.get_sam_res"]], "get_time_interval() (windpower class method)": [[40, "reV.SAM.generation.WindPower.get_time_interval"]], "has_timezone (windpower property)": [[40, "reV.SAM.generation.WindPower.has_timezone"]], "input_list (windpower property)": [[40, "reV.SAM.generation.WindPower.input_list"]], "input_power_curve (windpower property)": [[40, "reV.SAM.generation.WindPower.input_power_curve"]], "make_datetime() (windpower static method)": [[40, "reV.SAM.generation.WindPower.make_datetime"]], "meta (windpower property)": [[40, "reV.SAM.generation.WindPower.meta"]], "module (windpower property)": [[40, "reV.SAM.generation.WindPower.module"]], "outage_seed (windpower property)": [[40, "reV.SAM.generation.WindPower.outage_seed"]], "outputs_to_utc_arr() (windpower method)": [[40, "reV.SAM.generation.WindPower.outputs_to_utc_arr"]], "pysam (windpower property)": [[40, "reV.SAM.generation.WindPower.pysam"]], "rev_run() (windpower class method)": [[40, "reV.SAM.generation.WindPower.reV_run"]], "run() (windpower method)": [[40, "reV.SAM.generation.WindPower.run"]], "run_gen_and_econ() (windpower method)": [[40, "reV.SAM.generation.WindPower.run_gen_and_econ"]], "set_resource_data() (windpower method)": [[40, "reV.SAM.generation.WindPower.set_resource_data"]], "site (windpower property)": [[40, "reV.SAM.generation.WindPower.site"]], "tz_elev_check() (windpower static method)": [[40, "reV.SAM.generation.WindPower.tz_elev_check"]], "wind_resource_from_input() (windpower method)": [[40, "reV.SAM.generation.WindPower.wind_resource_from_input"]], "outage_config_key (windpowerpd attribute)": [[41, "reV.SAM.generation.WindPowerPD.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (windpowerpd attribute)": [[41, "reV.SAM.generation.WindPowerPD.OUTAGE_SEED_CONFIG_KEY"]], "power_curve_config_key (windpowerpd attribute)": [[41, "reV.SAM.generation.WindPowerPD.POWER_CURVE_CONFIG_KEY"]], "pysam (windpowerpd attribute)": [[41, "reV.SAM.generation.WindPowerPD.PYSAM"]], "windpowerpd (class in rev.sam.generation)": [[41, "reV.SAM.generation.WindPowerPD"]], "add_power_curve_losses() (windpowerpd method)": [[41, "reV.SAM.generation.WindPowerPD.add_power_curve_losses"]], "add_scheduled_losses() (windpowerpd method)": [[41, "reV.SAM.generation.WindPowerPD.add_scheduled_losses"]], "annual_energy() (windpowerpd method)": [[41, "reV.SAM.generation.WindPowerPD.annual_energy"]], "assign_inputs() (windpowerpd method)": [[41, "reV.SAM.generation.WindPowerPD.assign_inputs"]], "attr_dict (windpowerpd property)": [[41, "reV.SAM.generation.WindPowerPD.attr_dict"]], "cf_mean() (windpowerpd method)": [[41, "reV.SAM.generation.WindPowerPD.cf_mean"]], "cf_profile() (windpowerpd method)": [[41, "reV.SAM.generation.WindPowerPD.cf_profile"]], "check_resource_data() (windpowerpd method)": [[41, "reV.SAM.generation.WindPowerPD.check_resource_data"]], "collect_outputs() (windpowerpd method)": [[41, "reV.SAM.generation.WindPowerPD.collect_outputs"]], "default() (windpowerpd class method)": [[41, "reV.SAM.generation.WindPowerPD.default"]], "drop_leap() (windpowerpd static method)": [[41, "reV.SAM.generation.WindPowerPD.drop_leap"]], "energy_yield() (windpowerpd method)": [[41, "reV.SAM.generation.WindPowerPD.energy_yield"]], "ensure_res_len() (windpowerpd static method)": [[41, "reV.SAM.generation.WindPowerPD.ensure_res_len"]], "execute() (windpowerpd method)": [[41, "reV.SAM.generation.WindPowerPD.execute"]], "gen_profile() (windpowerpd method)": [[41, "reV.SAM.generation.WindPowerPD.gen_profile"]], "get_sam_res() (windpowerpd static method)": [[41, "reV.SAM.generation.WindPowerPD.get_sam_res"]], "get_time_interval() (windpowerpd class method)": [[41, "reV.SAM.generation.WindPowerPD.get_time_interval"]], "has_timezone (windpowerpd property)": [[41, "reV.SAM.generation.WindPowerPD.has_timezone"]], "input_list (windpowerpd property)": [[41, "reV.SAM.generation.WindPowerPD.input_list"]], "input_power_curve (windpowerpd property)": [[41, "reV.SAM.generation.WindPowerPD.input_power_curve"]], "make_datetime() (windpowerpd static method)": [[41, "reV.SAM.generation.WindPowerPD.make_datetime"]], "meta (windpowerpd property)": [[41, "reV.SAM.generation.WindPowerPD.meta"]], "module (windpowerpd property)": [[41, "reV.SAM.generation.WindPowerPD.module"]], "outage_seed (windpowerpd property)": [[41, "reV.SAM.generation.WindPowerPD.outage_seed"]], "outputs_to_utc_arr() (windpowerpd method)": [[41, "reV.SAM.generation.WindPowerPD.outputs_to_utc_arr"]], "pysam (windpowerpd property)": [[41, "reV.SAM.generation.WindPowerPD.pysam"]], "rev_run() (windpowerpd class method)": [[41, "reV.SAM.generation.WindPowerPD.reV_run"]], "run() (windpowerpd method)": [[41, "reV.SAM.generation.WindPowerPD.run"]], "run_gen_and_econ() (windpowerpd method)": [[41, "reV.SAM.generation.WindPowerPD.run_gen_and_econ"]], "set_resource_data() (windpowerpd method)": [[41, "reV.SAM.generation.WindPowerPD.set_resource_data"]], "site (windpowerpd property)": [[41, "reV.SAM.generation.WindPowerPD.site"]], "tz_elev_check() (windpowerpd static method)": [[41, "reV.SAM.generation.WindPowerPD.tz_elev_check"]], "wind_resource_from_input() (windpowerpd method)": [[41, "reV.SAM.generation.WindPowerPD.wind_resource_from_input"]], "rev.sam.version_checker": [[42, "module-reV.SAM.version_checker"]], "pysamversionchecker (class in rev.sam.version_checker)": [[43, "reV.SAM.version_checker.PySamVersionChecker"]], "pysam_version (pysamversionchecker property)": [[43, "reV.SAM.version_checker.PySamVersionChecker.pysam_version"]], "run() (pysamversionchecker class method)": [[43, "reV.SAM.version_checker.PySamVersionChecker.run"]], "rev.sam.windbos": [[44, "module-reV.SAM.windbos"]], "windbos (class in rev.sam.windbos)": [[45, "reV.SAM.windbos.WindBos"]], "bos_cost (windbos property)": [[45, "reV.SAM.windbos.WindBos.bos_cost"]], "hub_height (windbos property)": [[45, "reV.SAM.windbos.WindBos.hub_height"]], "machine_rating (windbos property)": [[45, "reV.SAM.windbos.WindBos.machine_rating"]], "number_of_turbines (windbos property)": [[45, "reV.SAM.windbos.WindBos.number_of_turbines"]], "output (windbos property)": [[45, "reV.SAM.windbos.WindBos.output"]], "rev_run() (windbos class method)": [[45, "reV.SAM.windbos.WindBos.reV_run"]], "rotor_diameter (windbos property)": [[45, "reV.SAM.windbos.WindBos.rotor_diameter"]], "sales_tax_cost (windbos property)": [[45, "reV.SAM.windbos.WindBos.sales_tax_cost"]], "sales_tax_mult (windbos property)": [[45, "reV.SAM.windbos.WindBos.sales_tax_mult"]], "total_installed_cost (windbos property)": [[45, "reV.SAM.windbos.WindBos.total_installed_cost"]], "turbine_capital_cost (windbos property)": [[45, "reV.SAM.windbos.WindBos.turbine_capital_cost"]], "turbine_cost (windbos property)": [[45, "reV.SAM.windbos.WindBos.turbine_cost"]], "rev.bespoke": [[46, "module-reV.bespoke"]], "rev.bespoke.bespoke": [[47, "module-reV.bespoke.bespoke"]], "bespokemultiplantdata (class in rev.bespoke.bespoke)": [[48, "reV.bespoke.bespoke.BespokeMultiPlantData"]], "get_preloaded_data_for_gid() (bespokemultiplantdata method)": [[48, "reV.bespoke.bespoke.BespokeMultiPlantData.get_preloaded_data_for_gid"]], "bespokesingleplant (class in rev.bespoke.bespoke)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant"]], "agg_data_layers() (bespokesingleplant method)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.agg_data_layers"]], "annual_time_indexes (bespokesingleplant property)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.annual_time_indexes"]], "bias_correct_ws() (bespokesingleplant method)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.bias_correct_ws"]], "check_dependencies() (bespokesingleplant class method)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.check_dependencies"]], "close() (bespokesingleplant method)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.close"]], "get_lcoe_kwargs() (bespokesingleplant method)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.get_lcoe_kwargs"]], "get_weighted_res_dir() (bespokesingleplant method)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.get_weighted_res_dir"]], "get_weighted_res_ts() (bespokesingleplant method)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.get_weighted_res_ts"]], "gid (bespokesingleplant property)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.gid"]], "hub_height (bespokesingleplant property)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.hub_height"]], "include_mask (bespokesingleplant property)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.include_mask"]], "initialize_wind_plant_ts() (bespokesingleplant method)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.initialize_wind_plant_ts"]], "meta (bespokesingleplant property)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.meta"]], "original_sam_sys_inputs (bespokesingleplant property)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.original_sam_sys_inputs"]], "outputs (bespokesingleplant property)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.outputs"]], "pixel_side_length (bespokesingleplant property)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.pixel_side_length"]], "plant_optimizer (bespokesingleplant property)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.plant_optimizer"]], "recalc_lcoe() (bespokesingleplant method)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.recalc_lcoe"]], "res_df (bespokesingleplant property)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.res_df"]], "run() (bespokesingleplant class method)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.run"]], "run_plant_optimization() (bespokesingleplant method)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.run_plant_optimization"]], "run_wind_plant_ts() (bespokesingleplant method)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.run_wind_plant_ts"]], "sam_sys_inputs (bespokesingleplant property)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.sam_sys_inputs"]], "sc_point (bespokesingleplant property)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.sc_point"]], "wind_dist (bespokesingleplant property)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.wind_dist"]], "wind_plant_pd (bespokesingleplant property)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.wind_plant_pd"]], "wind_plant_ts (bespokesingleplant property)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.wind_plant_ts"]], "years (bespokesingleplant property)": [[49, "reV.bespoke.bespoke.BespokeSinglePlant.years"]], "bespokesingleplantdata (class in rev.bespoke.bespoke)": [[50, "reV.bespoke.bespoke.BespokeSinglePlantData"]], "bespokewindplants (class in rev.bespoke.bespoke)": [[51, "reV.bespoke.bespoke.BespokeWindPlants"]], "completed_gids (bespokewindplants property)": [[51, "reV.bespoke.bespoke.BespokeWindPlants.completed_gids"]], "gids (bespokewindplants property)": [[51, "reV.bespoke.bespoke.BespokeWindPlants.gids"]], "meta (bespokewindplants property)": [[51, "reV.bespoke.bespoke.BespokeWindPlants.meta"]], "outputs (bespokewindplants property)": [[51, "reV.bespoke.bespoke.BespokeWindPlants.outputs"]], "run() (bespokewindplants method)": [[51, "reV.bespoke.bespoke.BespokeWindPlants.run"]], "run_parallel() (bespokewindplants method)": [[51, "reV.bespoke.bespoke.BespokeWindPlants.run_parallel"]], "run_serial() (bespokewindplants class method)": [[51, "reV.bespoke.bespoke.BespokeWindPlants.run_serial"]], "sam_sys_inputs_with_site_data() (bespokewindplants method)": [[51, "reV.bespoke.bespoke.BespokeWindPlants.sam_sys_inputs_with_site_data"]], "save_outputs() (bespokewindplants method)": [[51, "reV.bespoke.bespoke.BespokeWindPlants.save_outputs"]], "shape (bespokewindplants property)": [[51, "reV.bespoke.bespoke.BespokeWindPlants.shape"]], "slice_lookup (bespokewindplants property)": [[51, "reV.bespoke.bespoke.BespokeWindPlants.slice_lookup"]], "rev.bespoke.cli_bespoke": [[52, "module-reV.bespoke.cli_bespoke"]], "rev.bespoke.gradient_free": [[53, "module-reV.bespoke.gradient_free"]], "geneticalgorithm (class in rev.bespoke.gradient_free)": [[54, "reV.bespoke.gradient_free.GeneticAlgorithm"]], "chromosome_2_variables() (geneticalgorithm method)": [[54, "reV.bespoke.gradient_free.GeneticAlgorithm.chromosome_2_variables"]], "crossover() (geneticalgorithm method)": [[54, "reV.bespoke.gradient_free.GeneticAlgorithm.crossover"]], "initialize_bits() (geneticalgorithm method)": [[54, "reV.bespoke.gradient_free.GeneticAlgorithm.initialize_bits"]], "initialize_design_variables() (geneticalgorithm method)": [[54, "reV.bespoke.gradient_free.GeneticAlgorithm.initialize_design_variables"]], "initialize_fitness() (geneticalgorithm method)": [[54, "reV.bespoke.gradient_free.GeneticAlgorithm.initialize_fitness"]], "initialize_population() (geneticalgorithm method)": [[54, "reV.bespoke.gradient_free.GeneticAlgorithm.initialize_population"]], "mutate() (geneticalgorithm method)": [[54, "reV.bespoke.gradient_free.GeneticAlgorithm.mutate"]], "optimize_ga() (geneticalgorithm method)": [[54, "reV.bespoke.gradient_free.GeneticAlgorithm.optimize_ga"]], "rev.bespoke.pack_turbs": [[55, "module-reV.bespoke.pack_turbs"]], "packturbines (class in rev.bespoke.pack_turbs)": [[56, "reV.bespoke.pack_turbs.PackTurbines"]], "clear() (packturbines method)": [[56, "reV.bespoke.pack_turbs.PackTurbines.clear"]], "pack_turbines_poly() (packturbines method)": [[56, "reV.bespoke.pack_turbs.PackTurbines.pack_turbines_poly"]], "smallest_area_with_tiebreakers() (in module rev.bespoke.pack_turbs)": [[57, "reV.bespoke.pack_turbs.smallest_area_with_tiebreakers"]], "rev.bespoke.place_turbines": [[58, "module-reV.bespoke.place_turbines"]], "placeturbines (class in rev.bespoke.place_turbines)": [[59, "reV.bespoke.place_turbines.PlaceTurbines"]], "aep (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.aep"]], "area (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.area"]], "avg_sl_dist_to_center_m (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.avg_sl_dist_to_center_m"]], "avg_sl_dist_to_medoid_m (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.avg_sl_dist_to_medoid_m"]], "balance_of_system_cost (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.balance_of_system_cost"]], "capacity (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.capacity"]], "capacity_density (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.capacity_density"]], "capital_cost (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.capital_cost"]], "capital_cost_per_kw() (placeturbines method)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.capital_cost_per_kw"]], "convex_hull (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.convex_hull"]], "convex_hull_area (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.convex_hull_area"]], "convex_hull_capacity_density (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.convex_hull_capacity_density"]], "define_exclusions() (placeturbines method)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.define_exclusions"]], "fixed_charge_rate (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.fixed_charge_rate"]], "fixed_operating_cost (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.fixed_operating_cost"]], "full_cell_area (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.full_cell_area"]], "full_cell_capacity_density (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.full_cell_capacity_density"]], "initialize_packing() (placeturbines method)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.initialize_packing"]], "nn_conn_dist_m (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.nn_conn_dist_m"]], "nturbs (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.nturbs"]], "objective (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.objective"]], "optimization_objective() (placeturbines method)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.optimization_objective"]], "optimize() (placeturbines method)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.optimize"]], "place_turbines() (placeturbines method)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.place_turbines"]], "turbine_x (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.turbine_x"]], "turbine_y (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.turbine_y"]], "variable_operating_cost (placeturbines property)": [[59, "reV.bespoke.place_turbines.PlaceTurbines.variable_operating_cost"]], "none_until_optimized() (in module rev.bespoke.place_turbines)": [[60, "reV.bespoke.place_turbines.none_until_optimized"]], "rev.bespoke.plotting_functions": [[61, "module-reV.bespoke.plotting_functions"]], "get_xy() (in module rev.bespoke.plotting_functions)": [[62, "reV.bespoke.plotting_functions.get_xy"]], "plot_poly() (in module rev.bespoke.plotting_functions)": [[63, "reV.bespoke.plotting_functions.plot_poly"]], "plot_turbines() (in module rev.bespoke.plotting_functions)": [[64, "reV.bespoke.plotting_functions.plot_turbines"]], "plot_windrose() (in module rev.bespoke.plotting_functions)": [[65, "reV.bespoke.plotting_functions.plot_windrose"]], "rev.cli": [[66, "module-reV.cli"]], "rev.config": [[67, "module-reV.config"]], "rev.config.base_analysis_config": [[68, "module-reV.config.base_analysis_config"]], "analysisconfig (class in rev.config.base_analysis_config)": [[69, "reV.config.base_analysis_config.AnalysisConfig"]], "requirements (analysisconfig attribute)": [[69, "reV.config.base_analysis_config.AnalysisConfig.REQUIREMENTS"]], "str_rep (analysisconfig attribute)": [[69, "reV.config.base_analysis_config.AnalysisConfig.STR_REP"]], "analysis_years (analysisconfig property)": [[69, "reV.config.base_analysis_config.AnalysisConfig.analysis_years"]], "check_files() (analysisconfig static method)": [[69, "reV.config.base_analysis_config.AnalysisConfig.check_files"]], "check_overwrite_keys() (analysisconfig method)": [[69, "reV.config.base_analysis_config.AnalysisConfig.check_overwrite_keys"]], "clear() (analysisconfig method)": [[69, "reV.config.base_analysis_config.AnalysisConfig.clear"]], "config_dir (analysisconfig property)": [[69, "reV.config.base_analysis_config.AnalysisConfig.config_dir"]], "config_keys (analysisconfig property)": [[69, "reV.config.base_analysis_config.AnalysisConfig.config_keys"]], "copy() (analysisconfig method)": [[69, "reV.config.base_analysis_config.AnalysisConfig.copy"]], "execution_control (analysisconfig property)": [[69, "reV.config.base_analysis_config.AnalysisConfig.execution_control"]], "fromkeys() (analysisconfig method)": [[69, "reV.config.base_analysis_config.AnalysisConfig.fromkeys"]], "get() (analysisconfig method)": [[69, "reV.config.base_analysis_config.AnalysisConfig.get"]], "items() (analysisconfig method)": [[69, "reV.config.base_analysis_config.AnalysisConfig.items"]], "keys() (analysisconfig method)": [[69, "reV.config.base_analysis_config.AnalysisConfig.keys"]], "log_directory (analysisconfig property)": [[69, "reV.config.base_analysis_config.AnalysisConfig.log_directory"]], "log_level (analysisconfig property)": [[69, "reV.config.base_analysis_config.AnalysisConfig.log_level"]], "name (analysisconfig property)": [[69, "reV.config.base_analysis_config.AnalysisConfig.name"]], "pop() (analysisconfig method)": [[69, "reV.config.base_analysis_config.AnalysisConfig.pop"]], "popitem() (analysisconfig method)": [[69, "reV.config.base_analysis_config.AnalysisConfig.popitem"]], "resolve_path() (analysisconfig method)": [[69, "reV.config.base_analysis_config.AnalysisConfig.resolve_path"]], "set_self_dict() (analysisconfig method)": [[69, "reV.config.base_analysis_config.AnalysisConfig.set_self_dict"]], "setdefault() (analysisconfig method)": [[69, "reV.config.base_analysis_config.AnalysisConfig.setdefault"]], "str_replace_and_resolve() (analysisconfig method)": [[69, "reV.config.base_analysis_config.AnalysisConfig.str_replace_and_resolve"]], "update() (analysisconfig method)": [[69, "reV.config.base_analysis_config.AnalysisConfig.update"]], "values() (analysisconfig method)": [[69, "reV.config.base_analysis_config.AnalysisConfig.values"]], "rev.config.base_config": [[70, "module-reV.config.base_config"]], "baseconfig (class in rev.config.base_config)": [[71, "reV.config.base_config.BaseConfig"]], "requirements (baseconfig attribute)": [[71, "reV.config.base_config.BaseConfig.REQUIREMENTS"]], "str_rep (baseconfig attribute)": [[71, "reV.config.base_config.BaseConfig.STR_REP"]], "check_files() (baseconfig static method)": [[71, "reV.config.base_config.BaseConfig.check_files"]], "check_overwrite_keys() (baseconfig method)": [[71, "reV.config.base_config.BaseConfig.check_overwrite_keys"]], "clear() (baseconfig method)": [[71, "reV.config.base_config.BaseConfig.clear"]], "config_dir (baseconfig property)": [[71, "reV.config.base_config.BaseConfig.config_dir"]], "config_keys (baseconfig property)": [[71, "reV.config.base_config.BaseConfig.config_keys"]], "copy() (baseconfig method)": [[71, "reV.config.base_config.BaseConfig.copy"]], "fromkeys() (baseconfig method)": [[71, "reV.config.base_config.BaseConfig.fromkeys"]], "get() (baseconfig method)": [[71, "reV.config.base_config.BaseConfig.get"]], "items() (baseconfig method)": [[71, "reV.config.base_config.BaseConfig.items"]], "keys() (baseconfig method)": [[71, "reV.config.base_config.BaseConfig.keys"]], "log_level (baseconfig property)": [[71, "reV.config.base_config.BaseConfig.log_level"]], "name (baseconfig property)": [[71, "reV.config.base_config.BaseConfig.name"]], "pop() (baseconfig method)": [[71, "reV.config.base_config.BaseConfig.pop"]], "popitem() (baseconfig method)": [[71, "reV.config.base_config.BaseConfig.popitem"]], "resolve_path() (baseconfig method)": [[71, "reV.config.base_config.BaseConfig.resolve_path"]], "set_self_dict() (baseconfig method)": [[71, "reV.config.base_config.BaseConfig.set_self_dict"]], "setdefault() (baseconfig method)": [[71, "reV.config.base_config.BaseConfig.setdefault"]], "str_replace_and_resolve() (baseconfig method)": [[71, "reV.config.base_config.BaseConfig.str_replace_and_resolve"]], "update() (baseconfig method)": [[71, "reV.config.base_config.BaseConfig.update"]], "values() (baseconfig method)": [[71, "reV.config.base_config.BaseConfig.values"]], "rev.config.cli_project_points": [[72, "module-reV.config.cli_project_points"]], "rev.config.curtailment": [[73, "module-reV.config.curtailment"]], "curtailment (class in rev.config.curtailment)": [[74, "reV.config.curtailment.Curtailment"]], "requirements (curtailment attribute)": [[74, "reV.config.curtailment.Curtailment.REQUIREMENTS"]], "str_rep (curtailment attribute)": [[74, "reV.config.curtailment.Curtailment.STR_REP"]], "check_files() (curtailment static method)": [[74, "reV.config.curtailment.Curtailment.check_files"]], "check_overwrite_keys() (curtailment method)": [[74, "reV.config.curtailment.Curtailment.check_overwrite_keys"]], "clear() (curtailment method)": [[74, "reV.config.curtailment.Curtailment.clear"]], "config_dir (curtailment property)": [[74, "reV.config.curtailment.Curtailment.config_dir"]], "config_keys (curtailment property)": [[74, "reV.config.curtailment.Curtailment.config_keys"]], "copy() (curtailment method)": [[74, "reV.config.curtailment.Curtailment.copy"]], "date_range (curtailment property)": [[74, "reV.config.curtailment.Curtailment.date_range"]], "dawn_dusk (curtailment property)": [[74, "reV.config.curtailment.Curtailment.dawn_dusk"]], "equation (curtailment property)": [[74, "reV.config.curtailment.Curtailment.equation"]], "fromkeys() (curtailment method)": [[74, "reV.config.curtailment.Curtailment.fromkeys"]], "get() (curtailment method)": [[74, "reV.config.curtailment.Curtailment.get"]], "items() (curtailment method)": [[74, "reV.config.curtailment.Curtailment.items"]], "keys() (curtailment method)": [[74, "reV.config.curtailment.Curtailment.keys"]], "log_level (curtailment property)": [[74, "reV.config.curtailment.Curtailment.log_level"]], "months (curtailment property)": [[74, "reV.config.curtailment.Curtailment.months"]], "name (curtailment property)": [[74, "reV.config.curtailment.Curtailment.name"]], "pop() (curtailment method)": [[74, "reV.config.curtailment.Curtailment.pop"]], "popitem() (curtailment method)": [[74, "reV.config.curtailment.Curtailment.popitem"]], "precipitation (curtailment property)": [[74, "reV.config.curtailment.Curtailment.precipitation"]], "probability (curtailment property)": [[74, "reV.config.curtailment.Curtailment.probability"]], "random_seed (curtailment property)": [[74, "reV.config.curtailment.Curtailment.random_seed"]], "resolve_path() (curtailment method)": [[74, "reV.config.curtailment.Curtailment.resolve_path"]], "set_self_dict() (curtailment method)": [[74, "reV.config.curtailment.Curtailment.set_self_dict"]], "setdefault() (curtailment method)": [[74, "reV.config.curtailment.Curtailment.setdefault"]], "str_replace_and_resolve() (curtailment method)": [[74, "reV.config.curtailment.Curtailment.str_replace_and_resolve"]], "temperature (curtailment property)": [[74, "reV.config.curtailment.Curtailment.temperature"]], "update() (curtailment method)": [[74, "reV.config.curtailment.Curtailment.update"]], "values() (curtailment method)": [[74, "reV.config.curtailment.Curtailment.values"]], "wind_speed (curtailment property)": [[74, "reV.config.curtailment.Curtailment.wind_speed"]], "rev.config.execution": [[75, "module-reV.config.execution"]], "baseexecutionconfig (class in rev.config.execution)": [[76, "reV.config.execution.BaseExecutionConfig"]], "requirements (baseexecutionconfig attribute)": [[76, "reV.config.execution.BaseExecutionConfig.REQUIREMENTS"]], "str_rep (baseexecutionconfig attribute)": [[76, "reV.config.execution.BaseExecutionConfig.STR_REP"]], "check_files() (baseexecutionconfig static method)": [[76, "reV.config.execution.BaseExecutionConfig.check_files"]], "check_overwrite_keys() (baseexecutionconfig method)": [[76, "reV.config.execution.BaseExecutionConfig.check_overwrite_keys"]], "clear() (baseexecutionconfig method)": [[76, "reV.config.execution.BaseExecutionConfig.clear"]], "config_dir (baseexecutionconfig property)": [[76, "reV.config.execution.BaseExecutionConfig.config_dir"]], "config_keys (baseexecutionconfig property)": [[76, "reV.config.execution.BaseExecutionConfig.config_keys"]], "copy() (baseexecutionconfig method)": [[76, "reV.config.execution.BaseExecutionConfig.copy"]], "fromkeys() (baseexecutionconfig method)": [[76, "reV.config.execution.BaseExecutionConfig.fromkeys"]], "get() (baseexecutionconfig method)": [[76, "reV.config.execution.BaseExecutionConfig.get"]], "items() (baseexecutionconfig method)": [[76, "reV.config.execution.BaseExecutionConfig.items"]], "keys() (baseexecutionconfig method)": [[76, "reV.config.execution.BaseExecutionConfig.keys"]], "log_level (baseexecutionconfig property)": [[76, "reV.config.execution.BaseExecutionConfig.log_level"]], "max_workers (baseexecutionconfig property)": [[76, "reV.config.execution.BaseExecutionConfig.max_workers"]], "memory_utilization_limit (baseexecutionconfig property)": [[76, "reV.config.execution.BaseExecutionConfig.memory_utilization_limit"]], "name (baseexecutionconfig property)": [[76, "reV.config.execution.BaseExecutionConfig.name"]], "nodes (baseexecutionconfig property)": [[76, "reV.config.execution.BaseExecutionConfig.nodes"]], "option (baseexecutionconfig property)": [[76, "reV.config.execution.BaseExecutionConfig.option"]], "pop() (baseexecutionconfig method)": [[76, "reV.config.execution.BaseExecutionConfig.pop"]], "popitem() (baseexecutionconfig method)": [[76, "reV.config.execution.BaseExecutionConfig.popitem"]], "resolve_path() (baseexecutionconfig method)": [[76, "reV.config.execution.BaseExecutionConfig.resolve_path"]], "set_self_dict() (baseexecutionconfig method)": [[76, "reV.config.execution.BaseExecutionConfig.set_self_dict"]], "setdefault() (baseexecutionconfig method)": [[76, "reV.config.execution.BaseExecutionConfig.setdefault"]], "sh_script (baseexecutionconfig property)": [[76, "reV.config.execution.BaseExecutionConfig.sh_script"]], "sites_per_worker (baseexecutionconfig property)": [[76, "reV.config.execution.BaseExecutionConfig.sites_per_worker"]], "str_replace_and_resolve() (baseexecutionconfig method)": [[76, "reV.config.execution.BaseExecutionConfig.str_replace_and_resolve"]], "update() (baseexecutionconfig method)": [[76, "reV.config.execution.BaseExecutionConfig.update"]], "values() (baseexecutionconfig method)": [[76, "reV.config.execution.BaseExecutionConfig.values"]], "hpcconfig (class in rev.config.execution)": [[77, "reV.config.execution.HPCConfig"]], "requirements (hpcconfig attribute)": [[77, "reV.config.execution.HPCConfig.REQUIREMENTS"]], "str_rep (hpcconfig attribute)": [[77, "reV.config.execution.HPCConfig.STR_REP"]], "allocation (hpcconfig property)": [[77, "reV.config.execution.HPCConfig.allocation"]], "check_files() (hpcconfig static method)": [[77, "reV.config.execution.HPCConfig.check_files"]], "check_overwrite_keys() (hpcconfig method)": [[77, "reV.config.execution.HPCConfig.check_overwrite_keys"]], "clear() (hpcconfig method)": [[77, "reV.config.execution.HPCConfig.clear"]], "conda_env (hpcconfig property)": [[77, "reV.config.execution.HPCConfig.conda_env"]], "config_dir (hpcconfig property)": [[77, "reV.config.execution.HPCConfig.config_dir"]], "config_keys (hpcconfig property)": [[77, "reV.config.execution.HPCConfig.config_keys"]], "copy() (hpcconfig method)": [[77, "reV.config.execution.HPCConfig.copy"]], "feature (hpcconfig property)": [[77, "reV.config.execution.HPCConfig.feature"]], "fromkeys() (hpcconfig method)": [[77, "reV.config.execution.HPCConfig.fromkeys"]], "get() (hpcconfig method)": [[77, "reV.config.execution.HPCConfig.get"]], "items() (hpcconfig method)": [[77, "reV.config.execution.HPCConfig.items"]], "keys() (hpcconfig method)": [[77, "reV.config.execution.HPCConfig.keys"]], "log_level (hpcconfig property)": [[77, "reV.config.execution.HPCConfig.log_level"]], "max_workers (hpcconfig property)": [[77, "reV.config.execution.HPCConfig.max_workers"]], "memory_utilization_limit (hpcconfig property)": [[77, "reV.config.execution.HPCConfig.memory_utilization_limit"]], "module (hpcconfig property)": [[77, "reV.config.execution.HPCConfig.module"]], "name (hpcconfig property)": [[77, "reV.config.execution.HPCConfig.name"]], "nodes (hpcconfig property)": [[77, "reV.config.execution.HPCConfig.nodes"]], "option (hpcconfig property)": [[77, "reV.config.execution.HPCConfig.option"]], "pop() (hpcconfig method)": [[77, "reV.config.execution.HPCConfig.pop"]], "popitem() (hpcconfig method)": [[77, "reV.config.execution.HPCConfig.popitem"]], "resolve_path() (hpcconfig method)": [[77, "reV.config.execution.HPCConfig.resolve_path"]], "set_self_dict() (hpcconfig method)": [[77, "reV.config.execution.HPCConfig.set_self_dict"]], "setdefault() (hpcconfig method)": [[77, "reV.config.execution.HPCConfig.setdefault"]], "sh_script (hpcconfig property)": [[77, "reV.config.execution.HPCConfig.sh_script"]], "sites_per_worker (hpcconfig property)": [[77, "reV.config.execution.HPCConfig.sites_per_worker"]], "str_replace_and_resolve() (hpcconfig method)": [[77, "reV.config.execution.HPCConfig.str_replace_and_resolve"]], "update() (hpcconfig method)": [[77, "reV.config.execution.HPCConfig.update"]], "values() (hpcconfig method)": [[77, "reV.config.execution.HPCConfig.values"]], "requirements (slurmconfig attribute)": [[78, "reV.config.execution.SlurmConfig.REQUIREMENTS"]], "str_rep (slurmconfig attribute)": [[78, "reV.config.execution.SlurmConfig.STR_REP"]], "slurmconfig (class in rev.config.execution)": [[78, "reV.config.execution.SlurmConfig"]], "allocation (slurmconfig property)": [[78, "reV.config.execution.SlurmConfig.allocation"]], "check_files() (slurmconfig static method)": [[78, "reV.config.execution.SlurmConfig.check_files"]], "check_overwrite_keys() (slurmconfig method)": [[78, "reV.config.execution.SlurmConfig.check_overwrite_keys"]], "clear() (slurmconfig method)": [[78, "reV.config.execution.SlurmConfig.clear"]], "conda_env (slurmconfig property)": [[78, "reV.config.execution.SlurmConfig.conda_env"]], "config_dir (slurmconfig property)": [[78, "reV.config.execution.SlurmConfig.config_dir"]], "config_keys (slurmconfig property)": [[78, "reV.config.execution.SlurmConfig.config_keys"]], "copy() (slurmconfig method)": [[78, "reV.config.execution.SlurmConfig.copy"]], "feature (slurmconfig property)": [[78, "reV.config.execution.SlurmConfig.feature"]], "fromkeys() (slurmconfig method)": [[78, "reV.config.execution.SlurmConfig.fromkeys"]], "get() (slurmconfig method)": [[78, "reV.config.execution.SlurmConfig.get"]], "items() (slurmconfig method)": [[78, "reV.config.execution.SlurmConfig.items"]], "keys() (slurmconfig method)": [[78, "reV.config.execution.SlurmConfig.keys"]], "log_level (slurmconfig property)": [[78, "reV.config.execution.SlurmConfig.log_level"]], "max_workers (slurmconfig property)": [[78, "reV.config.execution.SlurmConfig.max_workers"]], "memory (slurmconfig property)": [[78, "reV.config.execution.SlurmConfig.memory"]], "memory_utilization_limit (slurmconfig property)": [[78, "reV.config.execution.SlurmConfig.memory_utilization_limit"]], "module (slurmconfig property)": [[78, "reV.config.execution.SlurmConfig.module"]], "name (slurmconfig property)": [[78, "reV.config.execution.SlurmConfig.name"]], "nodes (slurmconfig property)": [[78, "reV.config.execution.SlurmConfig.nodes"]], "option (slurmconfig property)": [[78, "reV.config.execution.SlurmConfig.option"]], "pop() (slurmconfig method)": [[78, "reV.config.execution.SlurmConfig.pop"]], "popitem() (slurmconfig method)": [[78, "reV.config.execution.SlurmConfig.popitem"]], "resolve_path() (slurmconfig method)": [[78, "reV.config.execution.SlurmConfig.resolve_path"]], "set_self_dict() (slurmconfig method)": [[78, "reV.config.execution.SlurmConfig.set_self_dict"]], "setdefault() (slurmconfig method)": [[78, "reV.config.execution.SlurmConfig.setdefault"]], "sh_script (slurmconfig property)": [[78, "reV.config.execution.SlurmConfig.sh_script"]], "sites_per_worker (slurmconfig property)": [[78, "reV.config.execution.SlurmConfig.sites_per_worker"]], "str_replace_and_resolve() (slurmconfig method)": [[78, "reV.config.execution.SlurmConfig.str_replace_and_resolve"]], "update() (slurmconfig method)": [[78, "reV.config.execution.SlurmConfig.update"]], "values() (slurmconfig method)": [[78, "reV.config.execution.SlurmConfig.values"]], "walltime (slurmconfig property)": [[78, "reV.config.execution.SlurmConfig.walltime"]], "rev.config.output_request": [[79, "module-reV.config.output_request"]], "outputrequest (class in rev.config.output_request)": [[80, "reV.config.output_request.OutputRequest"]], "__add__() (outputrequest method)": [[80, "reV.config.output_request.OutputRequest.__add__"]], "__mul__() (outputrequest method)": [[80, "reV.config.output_request.OutputRequest.__mul__"]], "append() (outputrequest method)": [[80, "reV.config.output_request.OutputRequest.append"]], "clear() (outputrequest method)": [[80, "reV.config.output_request.OutputRequest.clear"]], "copy() (outputrequest method)": [[80, "reV.config.output_request.OutputRequest.copy"]], "count() (outputrequest method)": [[80, "reV.config.output_request.OutputRequest.count"]], "extend() (outputrequest method)": [[80, "reV.config.output_request.OutputRequest.extend"]], "index() (outputrequest method)": [[80, "reV.config.output_request.OutputRequest.index"]], "insert() (outputrequest method)": [[80, "reV.config.output_request.OutputRequest.insert"]], "pop() (outputrequest method)": [[80, "reV.config.output_request.OutputRequest.pop"]], "remove() (outputrequest method)": [[80, "reV.config.output_request.OutputRequest.remove"]], "reverse() (outputrequest method)": [[80, "reV.config.output_request.OutputRequest.reverse"]], "sort() (outputrequest method)": [[80, "reV.config.output_request.OutputRequest.sort"]], "samoutputrequest (class in rev.config.output_request)": [[81, "reV.config.output_request.SAMOutputRequest"]], "__add__() (samoutputrequest method)": [[81, "reV.config.output_request.SAMOutputRequest.__add__"]], "__mul__() (samoutputrequest method)": [[81, "reV.config.output_request.SAMOutputRequest.__mul__"]], "append() (samoutputrequest method)": [[81, "reV.config.output_request.SAMOutputRequest.append"]], "clear() (samoutputrequest method)": [[81, "reV.config.output_request.SAMOutputRequest.clear"]], "copy() (samoutputrequest method)": [[81, "reV.config.output_request.SAMOutputRequest.copy"]], "count() (samoutputrequest method)": [[81, "reV.config.output_request.SAMOutputRequest.count"]], "extend() (samoutputrequest method)": [[81, "reV.config.output_request.SAMOutputRequest.extend"]], "index() (samoutputrequest method)": [[81, "reV.config.output_request.SAMOutputRequest.index"]], "insert() (samoutputrequest method)": [[81, "reV.config.output_request.SAMOutputRequest.insert"]], "pop() (samoutputrequest method)": [[81, "reV.config.output_request.SAMOutputRequest.pop"]], "remove() (samoutputrequest method)": [[81, "reV.config.output_request.SAMOutputRequest.remove"]], "reverse() (samoutputrequest method)": [[81, "reV.config.output_request.SAMOutputRequest.reverse"]], "sort() (samoutputrequest method)": [[81, "reV.config.output_request.SAMOutputRequest.sort"]], "rev.config.project_points": [[82, "module-reV.config.project_points"]], "n (pointscontrol property)": [[83, "reV.config.project_points.PointsControl.N"]], "pointscontrol (class in rev.config.project_points)": [[83, "reV.config.project_points.PointsControl"]], "project_points (pointscontrol property)": [[83, "reV.config.project_points.PointsControl.project_points"]], "sites (pointscontrol property)": [[83, "reV.config.project_points.PointsControl.sites"]], "sites_per_split (pointscontrol property)": [[83, "reV.config.project_points.PointsControl.sites_per_split"]], "split() (pointscontrol class method)": [[83, "reV.config.project_points.PointsControl.split"]], "split_range (pointscontrol property)": [[83, "reV.config.project_points.PointsControl.split_range"]], "projectpoints (class in rev.config.project_points)": [[84, "reV.config.project_points.ProjectPoints"]], "all_sam_input_keys (projectpoints property)": [[84, "reV.config.project_points.ProjectPoints.all_sam_input_keys"]], "curtailment (projectpoints property)": [[84, "reV.config.project_points.ProjectPoints.curtailment"]], "d (projectpoints property)": [[84, "reV.config.project_points.ProjectPoints.d"]], "df (projectpoints property)": [[84, "reV.config.project_points.ProjectPoints.df"]], "get_sites_from_config() (projectpoints method)": [[84, "reV.config.project_points.ProjectPoints.get_sites_from_config"]], "gids (projectpoints property)": [[84, "reV.config.project_points.ProjectPoints.gids"]], "h (projectpoints property)": [[84, "reV.config.project_points.ProjectPoints.h"]], "index() (projectpoints method)": [[84, "reV.config.project_points.ProjectPoints.index"]], "join_df() (projectpoints method)": [[84, "reV.config.project_points.ProjectPoints.join_df"]], "lat_lon_coords() (projectpoints class method)": [[84, "reV.config.project_points.ProjectPoints.lat_lon_coords"]], "regions() (projectpoints class method)": [[84, "reV.config.project_points.ProjectPoints.regions"]], "sam_config_ids (projectpoints property)": [[84, "reV.config.project_points.ProjectPoints.sam_config_ids"]], "sam_config_obj (projectpoints property)": [[84, "reV.config.project_points.ProjectPoints.sam_config_obj"]], "sam_inputs (projectpoints property)": [[84, "reV.config.project_points.ProjectPoints.sam_inputs"]], "sites (projectpoints property)": [[84, "reV.config.project_points.ProjectPoints.sites"]], "sites_as_slice (projectpoints property)": [[84, "reV.config.project_points.ProjectPoints.sites_as_slice"]], "split() (projectpoints class method)": [[84, "reV.config.project_points.ProjectPoints.split"]], "tech (projectpoints property)": [[84, "reV.config.project_points.ProjectPoints.tech"]], "rev.config.sam_config": [[85, "module-reV.config.sam_config"]], "requirements (samconfig attribute)": [[86, "reV.config.sam_config.SAMConfig.REQUIREMENTS"]], "samconfig (class in rev.config.sam_config)": [[86, "reV.config.sam_config.SAMConfig"]], "str_rep (samconfig attribute)": [[86, "reV.config.sam_config.SAMConfig.STR_REP"]], "bifacial (samconfig property)": [[86, "reV.config.sam_config.SAMConfig.bifacial"]], "check_files() (samconfig static method)": [[86, "reV.config.sam_config.SAMConfig.check_files"]], "check_overwrite_keys() (samconfig method)": [[86, "reV.config.sam_config.SAMConfig.check_overwrite_keys"]], "clear() (samconfig method)": [[86, "reV.config.sam_config.SAMConfig.clear"]], "clearsky (samconfig property)": [[86, "reV.config.sam_config.SAMConfig.clearsky"]], "config_dir (samconfig property)": [[86, "reV.config.sam_config.SAMConfig.config_dir"]], "config_keys (samconfig property)": [[86, "reV.config.sam_config.SAMConfig.config_keys"]], "copy() (samconfig method)": [[86, "reV.config.sam_config.SAMConfig.copy"]], "downscale (samconfig property)": [[86, "reV.config.sam_config.SAMConfig.downscale"]], "fromkeys() (samconfig method)": [[86, "reV.config.sam_config.SAMConfig.fromkeys"]], "get() (samconfig method)": [[86, "reV.config.sam_config.SAMConfig.get"]], "icing (samconfig property)": [[86, "reV.config.sam_config.SAMConfig.icing"]], "inputs (samconfig property)": [[86, "reV.config.sam_config.SAMConfig.inputs"]], "items() (samconfig method)": [[86, "reV.config.sam_config.SAMConfig.items"]], "keys() (samconfig method)": [[86, "reV.config.sam_config.SAMConfig.keys"]], "log_level (samconfig property)": [[86, "reV.config.sam_config.SAMConfig.log_level"]], "name (samconfig property)": [[86, "reV.config.sam_config.SAMConfig.name"]], "pop() (samconfig method)": [[86, "reV.config.sam_config.SAMConfig.pop"]], "popitem() (samconfig method)": [[86, "reV.config.sam_config.SAMConfig.popitem"]], "resolve_path() (samconfig method)": [[86, "reV.config.sam_config.SAMConfig.resolve_path"]], "set_self_dict() (samconfig method)": [[86, "reV.config.sam_config.SAMConfig.set_self_dict"]], "setdefault() (samconfig method)": [[86, "reV.config.sam_config.SAMConfig.setdefault"]], "str_replace_and_resolve() (samconfig method)": [[86, "reV.config.sam_config.SAMConfig.str_replace_and_resolve"]], "time_index_step (samconfig property)": [[86, "reV.config.sam_config.SAMConfig.time_index_step"]], "update() (samconfig method)": [[86, "reV.config.sam_config.SAMConfig.update"]], "values() (samconfig method)": [[86, "reV.config.sam_config.SAMConfig.values"]], "saminputschecker (class in rev.config.sam_config)": [[87, "reV.config.sam_config.SAMInputsChecker"]], "check() (saminputschecker class method)": [[87, "reV.config.sam_config.SAMInputsChecker.check"]], "check_pv() (saminputschecker method)": [[87, "reV.config.sam_config.SAMInputsChecker.check_pv"]], "rev.econ": [[88, "module-reV.econ"]], "rev.econ.cli_econ": [[89, "module-reV.econ.cli_econ"]], "rev.econ.econ": [[90, "module-reV.econ.econ"]], "econ (class in rev.econ.econ)": [[91, "reV.econ.econ.Econ"]], "options (econ attribute)": [[91, "reV.econ.econ.Econ.OPTIONS"]], "add_site_data_to_pp() (econ method)": [[91, "reV.econ.econ.Econ.add_site_data_to_pp"]], "cf_file (econ property)": [[91, "reV.econ.econ.Econ.cf_file"]], "flush() (econ method)": [[91, "reV.econ.econ.Econ.flush"]], "get_pc() (econ class method)": [[91, "reV.econ.econ.Econ.get_pc"]], "get_sites_per_worker() (econ static method)": [[91, "reV.econ.econ.Econ.get_sites_per_worker"]], "handle_leap_ti() (econ static method)": [[91, "reV.econ.econ.Econ.handle_leap_ti"]], "meta (econ property)": [[91, "reV.econ.econ.Econ.meta"]], "out (econ property)": [[91, "reV.econ.econ.Econ.out"]], "out_chunk (econ property)": [[91, "reV.econ.econ.Econ.out_chunk"]], "output_request (econ property)": [[91, "reV.econ.econ.Econ.output_request"]], "points_control (econ property)": [[91, "reV.econ.econ.Econ.points_control"]], "project_points (econ property)": [[91, "reV.econ.econ.Econ.project_points"]], "run() (econ method)": [[91, "reV.econ.econ.Econ.run"]], "run_attrs (econ property)": [[91, "reV.econ.econ.Econ.run_attrs"]], "sam_configs (econ property)": [[91, "reV.econ.econ.Econ.sam_configs"]], "sam_metas (econ property)": [[91, "reV.econ.econ.Econ.sam_metas"]], "sam_module (econ property)": [[91, "reV.econ.econ.Econ.sam_module"]], "site_data (econ property)": [[91, "reV.econ.econ.Econ.site_data"]], "site_index() (econ method)": [[91, "reV.econ.econ.Econ.site_index"]], "site_limit (econ property)": [[91, "reV.econ.econ.Econ.site_limit"]], "site_mem (econ property)": [[91, "reV.econ.econ.Econ.site_mem"]], "tech (econ property)": [[91, "reV.econ.econ.Econ.tech"]], "time_index (econ property)": [[91, "reV.econ.econ.Econ.time_index"]], "unpack_futures() (econ static method)": [[91, "reV.econ.econ.Econ.unpack_futures"]], "unpack_output() (econ method)": [[91, "reV.econ.econ.Econ.unpack_output"]], "year (econ property)": [[91, "reV.econ.econ.Econ.year"]], "rev.econ.economies_of_scale": [[92, "module-reV.econ.economies_of_scale"]], "economiesofscale (class in rev.econ.economies_of_scale)": [[93, "reV.econ.economies_of_scale.EconomiesOfScale"]], "aep (economiesofscale property)": [[93, "reV.econ.economies_of_scale.EconomiesOfScale.aep"]], "capital_cost_scalar (economiesofscale property)": [[93, "reV.econ.economies_of_scale.EconomiesOfScale.capital_cost_scalar"]], "fcr (economiesofscale property)": [[93, "reV.econ.economies_of_scale.EconomiesOfScale.fcr"]], "foc (economiesofscale property)": [[93, "reV.econ.economies_of_scale.EconomiesOfScale.foc"]], "is_method() (economiesofscale static method)": [[93, "reV.econ.economies_of_scale.EconomiesOfScale.is_method"]], "is_num() (economiesofscale static method)": [[93, "reV.econ.economies_of_scale.EconomiesOfScale.is_num"]], "raw_capital_cost (economiesofscale property)": [[93, "reV.econ.economies_of_scale.EconomiesOfScale.raw_capital_cost"]], "raw_lcoe (economiesofscale property)": [[93, "reV.econ.economies_of_scale.EconomiesOfScale.raw_lcoe"]], "scaled_capital_cost (economiesofscale property)": [[93, "reV.econ.economies_of_scale.EconomiesOfScale.scaled_capital_cost"]], "scaled_lcoe (economiesofscale property)": [[93, "reV.econ.economies_of_scale.EconomiesOfScale.scaled_lcoe"]], "vars (economiesofscale property)": [[93, "reV.econ.economies_of_scale.EconomiesOfScale.vars"]], "voc (economiesofscale property)": [[93, "reV.econ.economies_of_scale.EconomiesOfScale.voc"]], "rev.econ.utilities": [[94, "module-reV.econ.utilities"]], "lcoe_fcr() (in module rev.econ.utilities)": [[95, "reV.econ.utilities.lcoe_fcr"]], "rev.generation": [[96, "module-reV.generation"]], "rev.generation.base": [[97, "module-reV.generation.base"]], "basegen (class in rev.generation.base)": [[98, "reV.generation.base.BaseGen"]], "add_site_data_to_pp() (basegen method)": [[98, "reV.generation.base.BaseGen.add_site_data_to_pp"]], "flush() (basegen method)": [[98, "reV.generation.base.BaseGen.flush"]], "get_pc() (basegen class method)": [[98, "reV.generation.base.BaseGen.get_pc"]], "get_sites_per_worker() (basegen static method)": [[98, "reV.generation.base.BaseGen.get_sites_per_worker"]], "handle_leap_ti() (basegen static method)": [[98, "reV.generation.base.BaseGen.handle_leap_ti"]], "meta (basegen property)": [[98, "reV.generation.base.BaseGen.meta"]], "out (basegen property)": [[98, "reV.generation.base.BaseGen.out"]], "out_chunk (basegen property)": [[98, "reV.generation.base.BaseGen.out_chunk"]], "output_request (basegen property)": [[98, "reV.generation.base.BaseGen.output_request"]], "points_control (basegen property)": [[98, "reV.generation.base.BaseGen.points_control"]], "project_points (basegen property)": [[98, "reV.generation.base.BaseGen.project_points"]], "run_attrs (basegen property)": [[98, "reV.generation.base.BaseGen.run_attrs"]], "sam_configs (basegen property)": [[98, "reV.generation.base.BaseGen.sam_configs"]], "sam_metas (basegen property)": [[98, "reV.generation.base.BaseGen.sam_metas"]], "sam_module (basegen property)": [[98, "reV.generation.base.BaseGen.sam_module"]], "site_data (basegen property)": [[98, "reV.generation.base.BaseGen.site_data"]], "site_index() (basegen method)": [[98, "reV.generation.base.BaseGen.site_index"]], "site_limit (basegen property)": [[98, "reV.generation.base.BaseGen.site_limit"]], "site_mem (basegen property)": [[98, "reV.generation.base.BaseGen.site_mem"]], "tech (basegen property)": [[98, "reV.generation.base.BaseGen.tech"]], "time_index (basegen property)": [[98, "reV.generation.base.BaseGen.time_index"]], "unpack_futures() (basegen static method)": [[98, "reV.generation.base.BaseGen.unpack_futures"]], "unpack_output() (basegen method)": [[98, "reV.generation.base.BaseGen.unpack_output"]], "year (basegen property)": [[98, "reV.generation.base.BaseGen.year"]], "lcoe_required_outputs (in module rev.generation.base)": [[99, "reV.generation.base.LCOE_REQUIRED_OUTPUTS"]], "rev.generation.cli_gen": [[100, "module-reV.generation.cli_gen"]], "rev.generation.generation": [[101, "module-reV.generation.generation"]], "gen (class in rev.generation.generation)": [[102, "reV.generation.generation.Gen"]], "options (gen attribute)": [[102, "reV.generation.generation.Gen.OPTIONS"]], "add_site_data_to_pp() (gen method)": [[102, "reV.generation.generation.Gen.add_site_data_to_pp"]], "flush() (gen method)": [[102, "reV.generation.generation.Gen.flush"]], "get_pc() (gen class method)": [[102, "reV.generation.generation.Gen.get_pc"]], "get_sites_per_worker() (gen static method)": [[102, "reV.generation.generation.Gen.get_sites_per_worker"]], "handle_leap_ti() (gen static method)": [[102, "reV.generation.generation.Gen.handle_leap_ti"]], "handle_lifetime_index() (gen method)": [[102, "reV.generation.generation.Gen.handle_lifetime_index"]], "lr_res_file (gen property)": [[102, "reV.generation.generation.Gen.lr_res_file"]], "meta (gen property)": [[102, "reV.generation.generation.Gen.meta"]], "out (gen property)": [[102, "reV.generation.generation.Gen.out"]], "out_chunk (gen property)": [[102, "reV.generation.generation.Gen.out_chunk"]], "output_request (gen property)": [[102, "reV.generation.generation.Gen.output_request"]], "points_control (gen property)": [[102, "reV.generation.generation.Gen.points_control"]], "project_points (gen property)": [[102, "reV.generation.generation.Gen.project_points"]], "res_file (gen property)": [[102, "reV.generation.generation.Gen.res_file"]], "run() (gen method)": [[102, "reV.generation.generation.Gen.run"]], "run_attrs (gen property)": [[102, "reV.generation.generation.Gen.run_attrs"]], "sam_configs (gen property)": [[102, "reV.generation.generation.Gen.sam_configs"]], "sam_metas (gen property)": [[102, "reV.generation.generation.Gen.sam_metas"]], "sam_module (gen property)": [[102, "reV.generation.generation.Gen.sam_module"]], "site_data (gen property)": [[102, "reV.generation.generation.Gen.site_data"]], "site_index() (gen method)": [[102, "reV.generation.generation.Gen.site_index"]], "site_limit (gen property)": [[102, "reV.generation.generation.Gen.site_limit"]], "site_mem (gen property)": [[102, "reV.generation.generation.Gen.site_mem"]], "tech (gen property)": [[102, "reV.generation.generation.Gen.tech"]], "time_index (gen property)": [[102, "reV.generation.generation.Gen.time_index"]], "unpack_futures() (gen static method)": [[102, "reV.generation.generation.Gen.unpack_futures"]], "unpack_output() (gen method)": [[102, "reV.generation.generation.Gen.unpack_output"]], "year (gen property)": [[102, "reV.generation.generation.Gen.year"]], "rev.handlers": [[103, "module-reV.handlers"]], "rev.handlers.cli_collect": [[104, "module-reV.handlers.cli_collect"]], "rev.handlers.cli_multi_year": [[105, "module-reV.handlers.cli_multi_year"]], "rev.handlers.exclusions": [[106, "module-reV.handlers.exclusions"]], "exclusionlayers (class in rev.handlers.exclusions)": [[107, "reV.handlers.exclusions.ExclusionLayers"]], "chunks (exclusionlayers property)": [[107, "reV.handlers.exclusions.ExclusionLayers.chunks"]], "close() (exclusionlayers method)": [[107, "reV.handlers.exclusions.ExclusionLayers.close"]], "crs (exclusionlayers property)": [[107, "reV.handlers.exclusions.ExclusionLayers.crs"]], "get_layer_crs() (exclusionlayers method)": [[107, "reV.handlers.exclusions.ExclusionLayers.get_layer_crs"]], "get_layer_description() (exclusionlayers method)": [[107, "reV.handlers.exclusions.ExclusionLayers.get_layer_description"]], "get_layer_profile() (exclusionlayers method)": [[107, "reV.handlers.exclusions.ExclusionLayers.get_layer_profile"]], "get_layer_values() (exclusionlayers method)": [[107, "reV.handlers.exclusions.ExclusionLayers.get_layer_values"]], "get_nodata_value() (exclusionlayers method)": [[107, "reV.handlers.exclusions.ExclusionLayers.get_nodata_value"]], "h5 (exclusionlayers property)": [[107, "reV.handlers.exclusions.ExclusionLayers.h5"]], "iarr (exclusionlayers property)": [[107, "reV.handlers.exclusions.ExclusionLayers.iarr"]], "latitude (exclusionlayers property)": [[107, "reV.handlers.exclusions.ExclusionLayers.latitude"]], "layers (exclusionlayers property)": [[107, "reV.handlers.exclusions.ExclusionLayers.layers"]], "longitude (exclusionlayers property)": [[107, "reV.handlers.exclusions.ExclusionLayers.longitude"]], "pixel_area (exclusionlayers property)": [[107, "reV.handlers.exclusions.ExclusionLayers.pixel_area"]], "profile (exclusionlayers property)": [[107, "reV.handlers.exclusions.ExclusionLayers.profile"]], "shape (exclusionlayers property)": [[107, "reV.handlers.exclusions.ExclusionLayers.shape"]], "rev.handlers.multi_year": [[108, "module-reV.handlers.multi_year"]], "cv() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.CV"]], "multiyear (class in rev.handlers.multi_year)": [[109, "reV.handlers.multi_year.MultiYear"]], "sam_configs (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.SAM_configs"]], "add_dataset() (multiyear class method)": [[109, "reV.handlers.multi_year.MultiYear.add_dataset"]], "adders (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.adders"]], "attrs (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.attrs"]], "chunks (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.chunks"]], "close() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.close"]], "collect() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.collect"]], "collect_means() (multiyear class method)": [[109, "reV.handlers.multi_year.MultiYear.collect_means"]], "collect_profiles() (multiyear class method)": [[109, "reV.handlers.multi_year.MultiYear.collect_profiles"]], "coordinates (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.coordinates"]], "data_version (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.data_version"]], "datasets (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.datasets"]], "df_str_decode() (multiyear static method)": [[109, "reV.handlers.multi_year.MultiYear.df_str_decode"]], "dsets (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.dsets"]], "dtypes (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.dtypes"]], "full_version_record (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.full_version_record"]], "get_sam_df() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.get_SAM_df"]], "get_attrs() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.get_attrs"]], "get_config() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.get_config"]], "get_dset_properties() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.get_dset_properties"]], "get_meta_arr() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.get_meta_arr"]], "get_scale_factor() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.get_scale_factor"]], "get_units() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.get_units"]], "global_attrs (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.global_attrs"]], "groups (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.groups"]], "h5 (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.h5"]], "init_h5() (multiyear class method)": [[109, "reV.handlers.multi_year.MultiYear.init_h5"]], "is_hsds_file() (multiyear static method)": [[109, "reV.handlers.multi_year.MultiYear.is_hsds_file"]], "is_profile() (multiyear class method)": [[109, "reV.handlers.multi_year.MultiYear.is_profile"]], "is_s3_file() (multiyear static method)": [[109, "reV.handlers.multi_year.MultiYear.is_s3_file"]], "lat_lon (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.lat_lon"]], "means() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.means"]], "meta (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.meta"]], "open_dataset() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.open_dataset"]], "open_file() (multiyear class method)": [[109, "reV.handlers.multi_year.MultiYear.open_file"]], "package (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.package"]], "parse_source_files_pattern() (multiyear static method)": [[109, "reV.handlers.multi_year.MultiYear.parse_source_files_pattern"]], "pass_through() (multiyear class method)": [[109, "reV.handlers.multi_year.MultiYear.pass_through"]], "preload_sam() (multiyear class method)": [[109, "reV.handlers.multi_year.MultiYear.preload_SAM"]], "res_dsets (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.res_dsets"]], "resource_datasets (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.resource_datasets"]], "run_attrs (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.run_attrs"]], "scale_factors (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.scale_factors"]], "set_configs() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.set_configs"]], "set_version_attr() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.set_version_attr"]], "shape (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.shape"]], "shapes (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.shapes"]], "source (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.source"]], "stdev() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.stdev"]], "time_index (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.time_index"]], "units (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.units"]], "update_dset() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.update_dset"]], "version (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.version"]], "writable (multiyear property)": [[109, "reV.handlers.multi_year.MultiYear.writable"]], "write_dataset() (multiyear method)": [[109, "reV.handlers.multi_year.MultiYear.write_dataset"]], "write_means() (multiyear class method)": [[109, "reV.handlers.multi_year.MultiYear.write_means"]], "write_profiles() (multiyear class method)": [[109, "reV.handlers.multi_year.MultiYear.write_profiles"]], "multiyeargroup (class in rev.handlers.multi_year)": [[110, "reV.handlers.multi_year.MultiYearGroup"]], "dsets (multiyeargroup property)": [[110, "reV.handlers.multi_year.MultiYearGroup.dsets"]], "name (multiyeargroup property)": [[110, "reV.handlers.multi_year.MultiYearGroup.name"]], "pass_through_dsets (multiyeargroup property)": [[110, "reV.handlers.multi_year.MultiYearGroup.pass_through_dsets"]], "source_files (multiyeargroup property)": [[110, "reV.handlers.multi_year.MultiYearGroup.source_files"]], "my_collect_groups() (in module rev.handlers.multi_year)": [[111, "reV.handlers.multi_year.my_collect_groups"]], "rev.handlers.outputs": [[112, "module-reV.handlers.outputs"]], "outputs (class in rev.handlers.outputs)": [[113, "reV.handlers.outputs.Outputs"]], "sam_configs (outputs property)": [[113, "reV.handlers.outputs.Outputs.SAM_configs"]], "add_dataset() (outputs class method)": [[113, "reV.handlers.outputs.Outputs.add_dataset"]], "adders (outputs property)": [[113, "reV.handlers.outputs.Outputs.adders"]], "attrs (outputs property)": [[113, "reV.handlers.outputs.Outputs.attrs"]], "chunks (outputs property)": [[113, "reV.handlers.outputs.Outputs.chunks"]], "close() (outputs method)": [[113, "reV.handlers.outputs.Outputs.close"]], "coordinates (outputs property)": [[113, "reV.handlers.outputs.Outputs.coordinates"]], "data_version (outputs property)": [[113, "reV.handlers.outputs.Outputs.data_version"]], "datasets (outputs property)": [[113, "reV.handlers.outputs.Outputs.datasets"]], "df_str_decode() (outputs static method)": [[113, "reV.handlers.outputs.Outputs.df_str_decode"]], "dsets (outputs property)": [[113, "reV.handlers.outputs.Outputs.dsets"]], "dtypes (outputs property)": [[113, "reV.handlers.outputs.Outputs.dtypes"]], "full_version_record (outputs property)": [[113, "reV.handlers.outputs.Outputs.full_version_record"]], "get_sam_df() (outputs method)": [[113, "reV.handlers.outputs.Outputs.get_SAM_df"]], "get_attrs() (outputs method)": [[113, "reV.handlers.outputs.Outputs.get_attrs"]], "get_config() (outputs method)": [[113, "reV.handlers.outputs.Outputs.get_config"]], "get_dset_properties() (outputs method)": [[113, "reV.handlers.outputs.Outputs.get_dset_properties"]], "get_meta_arr() (outputs method)": [[113, "reV.handlers.outputs.Outputs.get_meta_arr"]], "get_scale_factor() (outputs method)": [[113, "reV.handlers.outputs.Outputs.get_scale_factor"]], "get_units() (outputs method)": [[113, "reV.handlers.outputs.Outputs.get_units"]], "global_attrs (outputs property)": [[113, "reV.handlers.outputs.Outputs.global_attrs"]], "groups (outputs property)": [[113, "reV.handlers.outputs.Outputs.groups"]], "h5 (outputs property)": [[113, "reV.handlers.outputs.Outputs.h5"]], "init_h5() (outputs class method)": [[113, "reV.handlers.outputs.Outputs.init_h5"]], "is_hsds_file() (outputs static method)": [[113, "reV.handlers.outputs.Outputs.is_hsds_file"]], "is_s3_file() (outputs static method)": [[113, "reV.handlers.outputs.Outputs.is_s3_file"]], "lat_lon (outputs property)": [[113, "reV.handlers.outputs.Outputs.lat_lon"]], "meta (outputs property)": [[113, "reV.handlers.outputs.Outputs.meta"]], "open_dataset() (outputs method)": [[113, "reV.handlers.outputs.Outputs.open_dataset"]], "open_file() (outputs class method)": [[113, "reV.handlers.outputs.Outputs.open_file"]], "package (outputs property)": [[113, "reV.handlers.outputs.Outputs.package"]], "preload_sam() (outputs class method)": [[113, "reV.handlers.outputs.Outputs.preload_SAM"]], "res_dsets (outputs property)": [[113, "reV.handlers.outputs.Outputs.res_dsets"]], "resource_datasets (outputs property)": [[113, "reV.handlers.outputs.Outputs.resource_datasets"]], "run_attrs (outputs property)": [[113, "reV.handlers.outputs.Outputs.run_attrs"]], "scale_factors (outputs property)": [[113, "reV.handlers.outputs.Outputs.scale_factors"]], "set_configs() (outputs method)": [[113, "reV.handlers.outputs.Outputs.set_configs"]], "set_version_attr() (outputs method)": [[113, "reV.handlers.outputs.Outputs.set_version_attr"]], "shape (outputs property)": [[113, "reV.handlers.outputs.Outputs.shape"]], "shapes (outputs property)": [[113, "reV.handlers.outputs.Outputs.shapes"]], "source (outputs property)": [[113, "reV.handlers.outputs.Outputs.source"]], "time_index (outputs property)": [[113, "reV.handlers.outputs.Outputs.time_index"]], "units (outputs property)": [[113, "reV.handlers.outputs.Outputs.units"]], "update_dset() (outputs method)": [[113, "reV.handlers.outputs.Outputs.update_dset"]], "version (outputs property)": [[113, "reV.handlers.outputs.Outputs.version"]], "writable (outputs property)": [[113, "reV.handlers.outputs.Outputs.writable"]], "write_dataset() (outputs method)": [[113, "reV.handlers.outputs.Outputs.write_dataset"]], "write_means() (outputs class method)": [[113, "reV.handlers.outputs.Outputs.write_means"]], "write_profiles() (outputs class method)": [[113, "reV.handlers.outputs.Outputs.write_profiles"]], "rev.handlers.transmission": [[114, "module-reV.handlers.transmission"]], "transmissioncosts (class in rev.handlers.transmission)": [[115, "reV.handlers.transmission.TransmissionCosts"]], "available_capacity() (transmissioncosts method)": [[115, "reV.handlers.transmission.TransmissionCosts.available_capacity"]], "check_availability() (transmissioncosts method)": [[115, "reV.handlers.transmission.TransmissionCosts.check_availability"]], "check_feature_dependencies() (transmissioncosts method)": [[115, "reV.handlers.transmission.TransmissionCosts.check_feature_dependencies"]], "connect() (transmissioncosts method)": [[115, "reV.handlers.transmission.TransmissionCosts.connect"]], "cost() (transmissioncosts method)": [[115, "reV.handlers.transmission.TransmissionCosts.cost"]], "feature_capacity() (transmissioncosts class method)": [[115, "reV.handlers.transmission.TransmissionCosts.feature_capacity"]], "feature_costs() (transmissioncosts class method)": [[115, "reV.handlers.transmission.TransmissionCosts.feature_costs"]], "transmissionfeatures (class in rev.handlers.transmission)": [[116, "reV.handlers.transmission.TransmissionFeatures"]], "available_capacity() (transmissionfeatures method)": [[116, "reV.handlers.transmission.TransmissionFeatures.available_capacity"]], "check_availability() (transmissionfeatures method)": [[116, "reV.handlers.transmission.TransmissionFeatures.check_availability"]], "check_feature_dependencies() (transmissionfeatures method)": [[116, "reV.handlers.transmission.TransmissionFeatures.check_feature_dependencies"]], "connect() (transmissionfeatures method)": [[116, "reV.handlers.transmission.TransmissionFeatures.connect"]], "cost() (transmissionfeatures method)": [[116, "reV.handlers.transmission.TransmissionFeatures.cost"]], "feature_capacity() (transmissionfeatures class method)": [[116, "reV.handlers.transmission.TransmissionFeatures.feature_capacity"]], "rev.hybrids": [[117, "module-reV.hybrids"]], "rev.hybrids.cli_hybrids": [[118, "module-reV.hybrids.cli_hybrids"]], "rev.hybrids.hybrid_methods": [[119, "module-reV.hybrids.hybrid_methods"]], "aggregate_capacity() (in module rev.hybrids.hybrid_methods)": [[120, "reV.hybrids.hybrid_methods.aggregate_capacity"]], "aggregate_capacity_factor() (in module rev.hybrids.hybrid_methods)": [[121, "reV.hybrids.hybrid_methods.aggregate_capacity_factor"]], "aggregate_solar_capacity() (in module rev.hybrids.hybrid_methods)": [[122, "reV.hybrids.hybrid_methods.aggregate_solar_capacity"]], "aggregate_wind_capacity() (in module rev.hybrids.hybrid_methods)": [[123, "reV.hybrids.hybrid_methods.aggregate_wind_capacity"]], "rev.hybrids.hybrids": [[124, "module-reV.hybrids.hybrids"]], "colnameformatter (class in rev.hybrids.hybrids)": [[125, "reV.hybrids.hybrids.ColNameFormatter"]], "fmt() (colnameformatter class method)": [[125, "reV.hybrids.hybrids.ColNameFormatter.fmt"]], "hybridization (class in rev.hybrids.hybrids)": [[126, "reV.hybrids.hybrids.Hybridization"]], "hybrid_meta (hybridization property)": [[126, "reV.hybrids.hybrids.Hybridization.hybrid_meta"]], "hybrid_time_index (hybridization property)": [[126, "reV.hybrids.hybrids.Hybridization.hybrid_time_index"]], "profiles (hybridization property)": [[126, "reV.hybrids.hybrids.Hybridization.profiles"]], "run() (hybridization method)": [[126, "reV.hybrids.hybrids.Hybridization.run"]], "run_meta() (hybridization method)": [[126, "reV.hybrids.hybrids.Hybridization.run_meta"]], "run_profiles() (hybridization method)": [[126, "reV.hybrids.hybrids.Hybridization.run_profiles"]], "save_profiles() (hybridization method)": [[126, "reV.hybrids.hybrids.Hybridization.save_profiles"]], "solar_meta (hybridization property)": [[126, "reV.hybrids.hybrids.Hybridization.solar_meta"]], "solar_time_index (hybridization property)": [[126, "reV.hybrids.hybrids.Hybridization.solar_time_index"]], "wind_meta (hybridization property)": [[126, "reV.hybrids.hybrids.Hybridization.wind_meta"]], "wind_time_index (hybridization property)": [[126, "reV.hybrids.hybrids.Hybridization.wind_time_index"]], "hybridsdata (class in rev.hybrids.hybrids)": [[127, "reV.hybrids.hybrids.HybridsData"]], "contains_col() (hybridsdata method)": [[127, "reV.hybrids.hybrids.HybridsData.contains_col"]], "hybrid_time_index (hybridsdata property)": [[127, "reV.hybrids.hybrids.HybridsData.hybrid_time_index"]], "solar_meta (hybridsdata property)": [[127, "reV.hybrids.hybrids.HybridsData.solar_meta"]], "solar_time_index (hybridsdata property)": [[127, "reV.hybrids.hybrids.HybridsData.solar_time_index"]], "validate() (hybridsdata method)": [[127, "reV.hybrids.hybrids.HybridsData.validate"]], "wind_meta (hybridsdata property)": [[127, "reV.hybrids.hybrids.HybridsData.wind_meta"]], "wind_time_index (hybridsdata property)": [[127, "reV.hybrids.hybrids.HybridsData.wind_time_index"]], "metahybridizer (class in rev.hybrids.hybrids)": [[128, "reV.hybrids.hybrids.MetaHybridizer"]], "hybrid_meta (metahybridizer property)": [[128, "reV.hybrids.hybrids.MetaHybridizer.hybrid_meta"]], "hybridize() (metahybridizer method)": [[128, "reV.hybrids.hybrids.MetaHybridizer.hybridize"]], "solar_profile_indices_map (metahybridizer property)": [[128, "reV.hybrids.hybrids.MetaHybridizer.solar_profile_indices_map"]], "validate_input() (metahybridizer method)": [[128, "reV.hybrids.hybrids.MetaHybridizer.validate_input"]], "wind_profile_indices_map (metahybridizer property)": [[128, "reV.hybrids.hybrids.MetaHybridizer.wind_profile_indices_map"]], "ratiocolumns (class in rev.hybrids.hybrids)": [[129, "reV.hybrids.hybrids.RatioColumns"]], "__add__() (ratiocolumns method)": [[129, "reV.hybrids.hybrids.RatioColumns.__add__"]], "__mul__() (ratiocolumns method)": [[129, "reV.hybrids.hybrids.RatioColumns.__mul__"]], "count() (ratiocolumns method)": [[129, "reV.hybrids.hybrids.RatioColumns.count"]], "denom (ratiocolumns attribute)": [[129, "reV.hybrids.hybrids.RatioColumns.denom"]], "fixed (ratiocolumns attribute)": [[129, "reV.hybrids.hybrids.RatioColumns.fixed"]], "index() (ratiocolumns method)": [[129, "reV.hybrids.hybrids.RatioColumns.index"]], "num (ratiocolumns attribute)": [[129, "reV.hybrids.hybrids.RatioColumns.num"]], "rev.losses": [[130, "module-reV.losses"]], "rev.losses.power_curve": [[131, "module-reV.losses.power_curve"]], "abstractpowercurvetransformation (class in rev.losses.power_curve)": [[132, "reV.losses.power_curve.AbstractPowerCurveTransformation"]], "apply() (abstractpowercurvetransformation method)": [[132, "reV.losses.power_curve.AbstractPowerCurveTransformation.apply"]], "bounds (abstractpowercurvetransformation property)": [[132, "reV.losses.power_curve.AbstractPowerCurveTransformation.bounds"]], "optm_bounds (abstractpowercurvetransformation property)": [[132, "reV.losses.power_curve.AbstractPowerCurveTransformation.optm_bounds"]], "power_curve (abstractpowercurvetransformation attribute)": [[132, "reV.losses.power_curve.AbstractPowerCurveTransformation.power_curve"]], "exponentialstretching (class in rev.losses.power_curve)": [[133, "reV.losses.power_curve.ExponentialStretching"]], "apply() (exponentialstretching method)": [[133, "reV.losses.power_curve.ExponentialStretching.apply"]], "bounds (exponentialstretching property)": [[133, "reV.losses.power_curve.ExponentialStretching.bounds"]], "optm_bounds (exponentialstretching property)": [[133, "reV.losses.power_curve.ExponentialStretching.optm_bounds"]], "power_curve (exponentialstretching attribute)": [[133, "reV.losses.power_curve.ExponentialStretching.power_curve"]], "horizontaltranslation (class in rev.losses.power_curve)": [[134, "reV.losses.power_curve.HorizontalTranslation"]], "apply() (horizontaltranslation method)": [[134, "reV.losses.power_curve.HorizontalTranslation.apply"]], "bounds (horizontaltranslation property)": [[134, "reV.losses.power_curve.HorizontalTranslation.bounds"]], "optm_bounds (horizontaltranslation property)": [[134, "reV.losses.power_curve.HorizontalTranslation.optm_bounds"]], "power_curve (horizontaltranslation attribute)": [[134, "reV.losses.power_curve.HorizontalTranslation.power_curve"]], "linearstretching (class in rev.losses.power_curve)": [[135, "reV.losses.power_curve.LinearStretching"]], "apply() (linearstretching method)": [[135, "reV.losses.power_curve.LinearStretching.apply"]], "bounds (linearstretching property)": [[135, "reV.losses.power_curve.LinearStretching.bounds"]], "optm_bounds (linearstretching property)": [[135, "reV.losses.power_curve.LinearStretching.optm_bounds"]], "power_curve (linearstretching attribute)": [[135, "reV.losses.power_curve.LinearStretching.power_curve"]], "powercurve (class in rev.losses.power_curve)": [[136, "reV.losses.power_curve.PowerCurve"]], "__call__() (powercurve method)": [[136, "reV.losses.power_curve.PowerCurve.__call__"]], "cutin_wind_speed (powercurve property)": [[136, "reV.losses.power_curve.PowerCurve.cutin_wind_speed"]], "cutoff_wind_speed (powercurve property)": [[136, "reV.losses.power_curve.PowerCurve.cutoff_wind_speed"]], "generation (powercurve attribute)": [[136, "reV.losses.power_curve.PowerCurve.generation"]], "rated_power (powercurve property)": [[136, "reV.losses.power_curve.PowerCurve.rated_power"]], "wind_speed (powercurve attribute)": [[136, "reV.losses.power_curve.PowerCurve.wind_speed"]], "powercurvelosses (class in rev.losses.power_curve)": [[137, "reV.losses.power_curve.PowerCurveLosses"]], "annual_losses_with_transformed_power_curve() (powercurvelosses method)": [[137, "reV.losses.power_curve.PowerCurveLosses.annual_losses_with_transformed_power_curve"]], "fit() (powercurvelosses method)": [[137, "reV.losses.power_curve.PowerCurveLosses.fit"]], "power_curve (powercurvelosses attribute)": [[137, "reV.losses.power_curve.PowerCurveLosses.power_curve"]], "power_gen_no_losses (powercurvelosses property)": [[137, "reV.losses.power_curve.PowerCurveLosses.power_gen_no_losses"]], "weights (powercurvelosses attribute)": [[137, "reV.losses.power_curve.PowerCurveLosses.weights"]], "wind_resource (powercurvelosses attribute)": [[137, "reV.losses.power_curve.PowerCurveLosses.wind_resource"]], "powercurvelossesinput (class in rev.losses.power_curve)": [[138, "reV.losses.power_curve.PowerCurveLossesInput"]], "required_keys (powercurvelossesinput attribute)": [[138, "reV.losses.power_curve.PowerCurveLossesInput.REQUIRED_KEYS"]], "target (powercurvelossesinput property)": [[138, "reV.losses.power_curve.PowerCurveLossesInput.target"]], "transformation (powercurvelossesinput property)": [[138, "reV.losses.power_curve.PowerCurveLossesInput.transformation"]], "power_curve_config_key (powercurvelossesmixin attribute)": [[139, "reV.losses.power_curve.PowerCurveLossesMixin.POWER_CURVE_CONFIG_KEY"]], "powercurvelossesmixin (class in rev.losses.power_curve)": [[139, "reV.losses.power_curve.PowerCurveLossesMixin"]], "add_power_curve_losses() (powercurvelossesmixin method)": [[139, "reV.losses.power_curve.PowerCurveLossesMixin.add_power_curve_losses"]], "input_power_curve (powercurvelossesmixin property)": [[139, "reV.losses.power_curve.PowerCurveLossesMixin.input_power_curve"]], "wind_resource_from_input() (powercurvelossesmixin method)": [[139, "reV.losses.power_curve.PowerCurveLossesMixin.wind_resource_from_input"]], "powercurvewindresource (class in rev.losses.power_curve)": [[140, "reV.losses.power_curve.PowerCurveWindResource"]], "wind_resource_for_site() (powercurvewindresource method)": [[140, "reV.losses.power_curve.PowerCurveWindResource.wind_resource_for_site"]], "wind_speeds (powercurvewindresource property)": [[140, "reV.losses.power_curve.PowerCurveWindResource.wind_speeds"]], "transformations (in module rev.losses.power_curve)": [[141, "reV.losses.power_curve.TRANSFORMATIONS"]], "adjust_power_curve() (in module rev.losses.power_curve)": [[142, "reV.losses.power_curve.adjust_power_curve"]], "rev.losses.scheduled": [[143, "module-reV.losses.scheduled"]], "outage (class in rev.losses.scheduled)": [[144, "reV.losses.scheduled.Outage"]], "required_keys (outage attribute)": [[144, "reV.losses.scheduled.Outage.REQUIRED_KEYS"]], "allow_outage_overlap (outage property)": [[144, "reV.losses.scheduled.Outage.allow_outage_overlap"]], "allowed_months (outage property)": [[144, "reV.losses.scheduled.Outage.allowed_months"]], "count (outage property)": [[144, "reV.losses.scheduled.Outage.count"]], "duration (outage property)": [[144, "reV.losses.scheduled.Outage.duration"]], "name (outage property)": [[144, "reV.losses.scheduled.Outage.name"]], "percentage_of_capacity_lost (outage property)": [[144, "reV.losses.scheduled.Outage.percentage_of_capacity_lost"]], "total_available_hours (outage property)": [[144, "reV.losses.scheduled.Outage.total_available_hours"]], "outagescheduler (class in rev.losses.scheduled)": [[145, "reV.losses.scheduled.OutageScheduler"]], "calculate() (outagescheduler method)": [[145, "reV.losses.scheduled.OutageScheduler.calculate"]], "can_schedule_more (outagescheduler attribute)": [[145, "reV.losses.scheduled.OutageScheduler.can_schedule_more"]], "outages (outagescheduler attribute)": [[145, "reV.losses.scheduled.OutageScheduler.outages"]], "seed (outagescheduler attribute)": [[145, "reV.losses.scheduled.OutageScheduler.seed"]], "total_losses (outagescheduler attribute)": [[145, "reV.losses.scheduled.OutageScheduler.total_losses"]], "outage_config_key (scheduledlossesmixin attribute)": [[146, "reV.losses.scheduled.ScheduledLossesMixin.OUTAGE_CONFIG_KEY"]], "outage_seed_config_key (scheduledlossesmixin attribute)": [[146, "reV.losses.scheduled.ScheduledLossesMixin.OUTAGE_SEED_CONFIG_KEY"]], "scheduledlossesmixin (class in rev.losses.scheduled)": [[146, "reV.losses.scheduled.ScheduledLossesMixin"]], "add_scheduled_losses() (scheduledlossesmixin method)": [[146, "reV.losses.scheduled.ScheduledLossesMixin.add_scheduled_losses"]], "outage_seed (scheduledlossesmixin property)": [[146, "reV.losses.scheduled.ScheduledLossesMixin.outage_seed"]], "max_iter (singleoutagescheduler attribute)": [[147, "reV.losses.scheduled.SingleOutageScheduler.MAX_ITER"]], "singleoutagescheduler (class in rev.losses.scheduled)": [[147, "reV.losses.scheduled.SingleOutageScheduler"]], "calculate() (singleoutagescheduler method)": [[147, "reV.losses.scheduled.SingleOutageScheduler.calculate"]], "can_schedule_more (singleoutagescheduler attribute)": [[147, "reV.losses.scheduled.SingleOutageScheduler.can_schedule_more"]], "find_random_outage_slice() (singleoutagescheduler method)": [[147, "reV.losses.scheduled.SingleOutageScheduler.find_random_outage_slice"]], "outage (singleoutagescheduler attribute)": [[147, "reV.losses.scheduled.SingleOutageScheduler.outage"]], "schedule_losses() (singleoutagescheduler method)": [[147, "reV.losses.scheduled.SingleOutageScheduler.schedule_losses"]], "scheduler (singleoutagescheduler attribute)": [[147, "reV.losses.scheduled.SingleOutageScheduler.scheduler"]], "update_when_can_schedule() (singleoutagescheduler method)": [[147, "reV.losses.scheduled.SingleOutageScheduler.update_when_can_schedule"]], "update_when_can_schedule_from_months() (singleoutagescheduler method)": [[147, "reV.losses.scheduled.SingleOutageScheduler.update_when_can_schedule_from_months"]], "rev.losses.utils": [[148, "module-reV.losses.utils"]], "convert_to_full_month_names() (in module rev.losses.utils)": [[149, "reV.losses.utils.convert_to_full_month_names"]], "filter_unknown_month_names() (in module rev.losses.utils)": [[150, "reV.losses.utils.filter_unknown_month_names"]], "format_month_name() (in module rev.losses.utils)": [[151, "reV.losses.utils.format_month_name"]], "full_month_name_from_abbr() (in module rev.losses.utils)": [[152, "reV.losses.utils.full_month_name_from_abbr"]], "hourly_indices_for_months() (in module rev.losses.utils)": [[153, "reV.losses.utils.hourly_indices_for_months"]], "month_index() (in module rev.losses.utils)": [[154, "reV.losses.utils.month_index"]], "month_indices() (in module rev.losses.utils)": [[155, "reV.losses.utils.month_indices"]], "rev.nrwal": [[156, "module-reV.nrwal"]], "rev.nrwal.cli_nrwal": [[157, "module-reV.nrwal.cli_nrwal"]], "rev.nrwal.nrwal": [[158, "module-reV.nrwal.nrwal"]], "default_meta_cols (revnrwal attribute)": [[159, "reV.nrwal.nrwal.RevNrwal.DEFAULT_META_COLS"]], "revnrwal (class in rev.nrwal.nrwal)": [[159, "reV.nrwal.nrwal.RevNrwal"]], "analysis_gids (revnrwal property)": [[159, "reV.nrwal.nrwal.RevNrwal.analysis_gids"]], "analysis_mask (revnrwal property)": [[159, "reV.nrwal.nrwal.RevNrwal.analysis_mask"]], "check_outputs() (revnrwal method)": [[159, "reV.nrwal.nrwal.RevNrwal.check_outputs"]], "gen_dsets (revnrwal property)": [[159, "reV.nrwal.nrwal.RevNrwal.gen_dsets"]], "meta_out (revnrwal property)": [[159, "reV.nrwal.nrwal.RevNrwal.meta_out"]], "meta_source (revnrwal property)": [[159, "reV.nrwal.nrwal.RevNrwal.meta_source"]], "outputs (revnrwal property)": [[159, "reV.nrwal.nrwal.RevNrwal.outputs"]], "run() (revnrwal method)": [[159, "reV.nrwal.nrwal.RevNrwal.run"]], "run_nrwal() (revnrwal method)": [[159, "reV.nrwal.nrwal.RevNrwal.run_nrwal"]], "save_raw_dsets() (revnrwal method)": [[159, "reV.nrwal.nrwal.RevNrwal.save_raw_dsets"]], "time_index (revnrwal property)": [[159, "reV.nrwal.nrwal.RevNrwal.time_index"]], "write_meta_to_csv() (revnrwal method)": [[159, "reV.nrwal.nrwal.RevNrwal.write_meta_to_csv"]], "write_to_gen_fpath() (revnrwal method)": [[159, "reV.nrwal.nrwal.RevNrwal.write_to_gen_fpath"]], "rev.qa_qc": [[160, "module-reV.qa_qc"]], "rev.qa_qc.cli_qa_qc": [[161, "module-reV.qa_qc.cli_qa_qc"]], "cli_qa_qc() (in module rev.qa_qc.cli_qa_qc)": [[162, "reV.qa_qc.cli_qa_qc.cli_qa_qc"]], "rev.qa_qc.qa_qc": [[163, "module-reV.qa_qc.qa_qc"]], "qaqc (class in rev.qa_qc.qa_qc)": [[164, "reV.qa_qc.qa_qc.QaQc"]], "create_scatter_plots() (qaqc method)": [[164, "reV.qa_qc.qa_qc.QaQc.create_scatter_plots"]], "exclusions_mask() (qaqc class method)": [[164, "reV.qa_qc.qa_qc.QaQc.exclusions_mask"]], "h5() (qaqc class method)": [[164, "reV.qa_qc.qa_qc.QaQc.h5"]], "out_dir (qaqc property)": [[164, "reV.qa_qc.qa_qc.QaQc.out_dir"]], "supply_curve() (qaqc class method)": [[164, "reV.qa_qc.qa_qc.QaQc.supply_curve"]], "qaqcmodule (class in rev.qa_qc.qa_qc)": [[165, "reV.qa_qc.qa_qc.QaQcModule"]], "area_filter_kernel (qaqcmodule property)": [[165, "reV.qa_qc.qa_qc.QaQcModule.area_filter_kernel"]], "cmap (qaqcmodule property)": [[165, "reV.qa_qc.qa_qc.QaQcModule.cmap"]], "columns (qaqcmodule property)": [[165, "reV.qa_qc.qa_qc.QaQcModule.columns"]], "dsets (qaqcmodule property)": [[165, "reV.qa_qc.qa_qc.QaQcModule.dsets"]], "excl_dict (qaqcmodule property)": [[165, "reV.qa_qc.qa_qc.QaQcModule.excl_dict"]], "excl_fpath (qaqcmodule property)": [[165, "reV.qa_qc.qa_qc.QaQcModule.excl_fpath"]], "fpath (qaqcmodule property)": [[165, "reV.qa_qc.qa_qc.QaQcModule.fpath"]], "group (qaqcmodule property)": [[165, "reV.qa_qc.qa_qc.QaQcModule.group"]], "lcoe (qaqcmodule property)": [[165, "reV.qa_qc.qa_qc.QaQcModule.lcoe"]], "min_area (qaqcmodule property)": [[165, "reV.qa_qc.qa_qc.QaQcModule.min_area"]], "plot_step (qaqcmodule property)": [[165, "reV.qa_qc.qa_qc.QaQcModule.plot_step"]], "plot_type (qaqcmodule property)": [[165, "reV.qa_qc.qa_qc.QaQcModule.plot_type"]], "process_size (qaqcmodule property)": [[165, "reV.qa_qc.qa_qc.QaQcModule.process_size"]], "sub_dir (qaqcmodule property)": [[165, "reV.qa_qc.qa_qc.QaQcModule.sub_dir"]], "rev.qa_qc.summary": [[166, "module-reV.qa_qc.summary"]], "exclusionsmask (class in rev.qa_qc.summary)": [[167, "reV.qa_qc.summary.ExclusionsMask"]], "data (exclusionsmask property)": [[167, "reV.qa_qc.summary.ExclusionsMask.data"]], "exclusions_plot() (exclusionsmask method)": [[167, "reV.qa_qc.summary.ExclusionsMask.exclusions_plot"]], "exclusions_plotly() (exclusionsmask method)": [[167, "reV.qa_qc.summary.ExclusionsMask.exclusions_plotly"]], "mask (exclusionsmask property)": [[167, "reV.qa_qc.summary.ExclusionsMask.mask"]], "plot() (exclusionsmask class method)": [[167, "reV.qa_qc.summary.ExclusionsMask.plot"]], "plotbase (class in rev.qa_qc.summary)": [[168, "reV.qa_qc.summary.PlotBase"]], "data (plotbase property)": [[168, "reV.qa_qc.summary.PlotBase.data"]], "summarizeh5 (class in rev.qa_qc.summary)": [[169, "reV.qa_qc.summary.SummarizeH5"]], "h5_file (summarizeh5 property)": [[169, "reV.qa_qc.summary.SummarizeH5.h5_file"]], "run() (summarizeh5 class method)": [[169, "reV.qa_qc.summary.SummarizeH5.run"]], "summarize_dset() (summarizeh5 method)": [[169, "reV.qa_qc.summary.SummarizeH5.summarize_dset"]], "summarize_means() (summarizeh5 method)": [[169, "reV.qa_qc.summary.SummarizeH5.summarize_means"]], "summarizesupplycurve (class in rev.qa_qc.summary)": [[170, "reV.qa_qc.summary.SummarizeSupplyCurve"]], "run() (summarizesupplycurve class method)": [[170, "reV.qa_qc.summary.SummarizeSupplyCurve.run"]], "sc_table (summarizesupplycurve property)": [[170, "reV.qa_qc.summary.SummarizeSupplyCurve.sc_table"]], "supply_curve_summary() (summarizesupplycurve method)": [[170, "reV.qa_qc.summary.SummarizeSupplyCurve.supply_curve_summary"]], "summaryplots (class in rev.qa_qc.summary)": [[171, "reV.qa_qc.summary.SummaryPlots"]], "columns (summaryplots property)": [[171, "reV.qa_qc.summary.SummaryPlots.columns"]], "data (summaryplots property)": [[171, "reV.qa_qc.summary.SummaryPlots.data"]], "dist_plot() (summaryplots method)": [[171, "reV.qa_qc.summary.SummaryPlots.dist_plot"]], "dist_plotly() (summaryplots method)": [[171, "reV.qa_qc.summary.SummaryPlots.dist_plotly"]], "scatter() (summaryplots class method)": [[171, "reV.qa_qc.summary.SummaryPlots.scatter"]], "scatter_all() (summaryplots class method)": [[171, "reV.qa_qc.summary.SummaryPlots.scatter_all"]], "scatter_plot() (summaryplots method)": [[171, "reV.qa_qc.summary.SummaryPlots.scatter_plot"]], "scatter_plotly() (summaryplots method)": [[171, "reV.qa_qc.summary.SummaryPlots.scatter_plotly"]], "summary (summaryplots property)": [[171, "reV.qa_qc.summary.SummaryPlots.summary"]], "supplycurveplot (class in rev.qa_qc.summary)": [[172, "reV.qa_qc.summary.SupplyCurvePlot"]], "columns (supplycurveplot property)": [[172, "reV.qa_qc.summary.SupplyCurvePlot.columns"]], "data (supplycurveplot property)": [[172, "reV.qa_qc.summary.SupplyCurvePlot.data"]], "plot() (supplycurveplot class method)": [[172, "reV.qa_qc.summary.SupplyCurvePlot.plot"]], "sc_table (supplycurveplot property)": [[172, "reV.qa_qc.summary.SupplyCurvePlot.sc_table"]], "supply_curve_plot() (supplycurveplot method)": [[172, "reV.qa_qc.summary.SupplyCurvePlot.supply_curve_plot"]], "supply_curve_plotly() (supplycurveplot method)": [[172, "reV.qa_qc.summary.SupplyCurvePlot.supply_curve_plotly"]], "rev.rep_profiles": [[173, "module-reV.rep_profiles"]], "rev.rep_profiles.cli_rep_profiles": [[174, "module-reV.rep_profiles.cli_rep_profiles"]], "rev.rep_profiles.rep_profiles": [[175, "module-reV.rep_profiles.rep_profiles"]], "regionrepprofile (class in rev.rep_profiles.rep_profiles)": [[176, "reV.rep_profiles.rep_profiles.RegionRepProfile"]], "get_region_rep_profile() (regionrepprofile class method)": [[176, "reV.rep_profiles.rep_profiles.RegionRepProfile.get_region_rep_profile"]], "i_reps (regionrepprofile property)": [[176, "reV.rep_profiles.rep_profiles.RegionRepProfile.i_reps"]], "rep_gen_gids (regionrepprofile property)": [[176, "reV.rep_profiles.rep_profiles.RegionRepProfile.rep_gen_gids"]], "rep_profiles (regionrepprofile property)": [[176, "reV.rep_profiles.rep_profiles.RegionRepProfile.rep_profiles"]], "rep_res_gids (regionrepprofile property)": [[176, "reV.rep_profiles.rep_profiles.RegionRepProfile.rep_res_gids"]], "source_profiles (regionrepprofile property)": [[176, "reV.rep_profiles.rep_profiles.RegionRepProfile.source_profiles"]], "weights (regionrepprofile property)": [[176, "reV.rep_profiles.rep_profiles.RegionRepProfile.weights"]], "repprofiles (class in rev.rep_profiles.rep_profiles)": [[177, "reV.rep_profiles.rep_profiles.RepProfiles"]], "meta (repprofiles property)": [[177, "reV.rep_profiles.rep_profiles.RepProfiles.meta"]], "profiles (repprofiles property)": [[177, "reV.rep_profiles.rep_profiles.RepProfiles.profiles"]], "run() (repprofiles method)": [[177, "reV.rep_profiles.rep_profiles.RepProfiles.run"]], "save_profiles() (repprofiles method)": [[177, "reV.rep_profiles.rep_profiles.RepProfiles.save_profiles"]], "time_index (repprofiles property)": [[177, "reV.rep_profiles.rep_profiles.RepProfiles.time_index"]], "repprofilesbase (class in rev.rep_profiles.rep_profiles)": [[178, "reV.rep_profiles.rep_profiles.RepProfilesBase"]], "meta (repprofilesbase property)": [[178, "reV.rep_profiles.rep_profiles.RepProfilesBase.meta"]], "profiles (repprofilesbase property)": [[178, "reV.rep_profiles.rep_profiles.RepProfilesBase.profiles"]], "run() (repprofilesbase method)": [[178, "reV.rep_profiles.rep_profiles.RepProfilesBase.run"]], "save_profiles() (repprofilesbase method)": [[178, "reV.rep_profiles.rep_profiles.RepProfilesBase.save_profiles"]], "time_index (repprofilesbase property)": [[178, "reV.rep_profiles.rep_profiles.RepProfilesBase.time_index"]], "representativemethods (class in rev.rep_profiles.rep_profiles)": [[179, "reV.rep_profiles.rep_profiles.RepresentativeMethods"]], "err_methods (representativemethods property)": [[179, "reV.rep_profiles.rep_profiles.RepresentativeMethods.err_methods"]], "mae() (representativemethods class method)": [[179, "reV.rep_profiles.rep_profiles.RepresentativeMethods.mae"]], "mbe() (representativemethods class method)": [[179, "reV.rep_profiles.rep_profiles.RepresentativeMethods.mbe"]], "meanoid() (representativemethods static method)": [[179, "reV.rep_profiles.rep_profiles.RepresentativeMethods.meanoid"]], "medianoid() (representativemethods static method)": [[179, "reV.rep_profiles.rep_profiles.RepresentativeMethods.medianoid"]], "nargmin() (representativemethods static method)": [[179, "reV.rep_profiles.rep_profiles.RepresentativeMethods.nargmin"]], "rep_methods (representativemethods property)": [[179, "reV.rep_profiles.rep_profiles.RepresentativeMethods.rep_methods"]], "rmse() (representativemethods class method)": [[179, "reV.rep_profiles.rep_profiles.RepresentativeMethods.rmse"]], "run() (representativemethods class method)": [[179, "reV.rep_profiles.rep_profiles.RepresentativeMethods.run"]], "rev.supply_curve": [[180, "module-reV.supply_curve"]], "rev.supply_curve.aggregation": [[181, "module-reV.supply_curve.aggregation"]], "abstractaggfilehandler (class in rev.supply_curve.aggregation)": [[182, "reV.supply_curve.aggregation.AbstractAggFileHandler"]], "close() (abstractaggfilehandler method)": [[182, "reV.supply_curve.aggregation.AbstractAggFileHandler.close"]], "exclusions (abstractaggfilehandler property)": [[182, "reV.supply_curve.aggregation.AbstractAggFileHandler.exclusions"]], "h5 (abstractaggfilehandler property)": [[182, "reV.supply_curve.aggregation.AbstractAggFileHandler.h5"]], "aggfilehandler (class in rev.supply_curve.aggregation)": [[183, "reV.supply_curve.aggregation.AggFileHandler"]], "default_h5_handler (aggfilehandler attribute)": [[183, "reV.supply_curve.aggregation.AggFileHandler.DEFAULT_H5_HANDLER"]], "close() (aggfilehandler method)": [[183, "reV.supply_curve.aggregation.AggFileHandler.close"]], "exclusions (aggfilehandler property)": [[183, "reV.supply_curve.aggregation.AggFileHandler.exclusions"]], "h5 (aggfilehandler property)": [[183, "reV.supply_curve.aggregation.AggFileHandler.h5"]], "aggregation (class in rev.supply_curve.aggregation)": [[184, "reV.supply_curve.aggregation.Aggregation"]], "aggregate() (aggregation method)": [[184, "reV.supply_curve.aggregation.Aggregation.aggregate"]], "gids (aggregation property)": [[184, "reV.supply_curve.aggregation.Aggregation.gids"]], "run() (aggregation class method)": [[184, "reV.supply_curve.aggregation.Aggregation.run"]], "run_parallel() (aggregation method)": [[184, "reV.supply_curve.aggregation.Aggregation.run_parallel"]], "run_serial() (aggregation class method)": [[184, "reV.supply_curve.aggregation.Aggregation.run_serial"]], "save_agg_to_h5() (aggregation static method)": [[184, "reV.supply_curve.aggregation.Aggregation.save_agg_to_h5"]], "shape (aggregation property)": [[184, "reV.supply_curve.aggregation.Aggregation.shape"]], "baseaggregation (class in rev.supply_curve.aggregation)": [[185, "reV.supply_curve.aggregation.BaseAggregation"]], "gids (baseaggregation property)": [[185, "reV.supply_curve.aggregation.BaseAggregation.gids"]], "shape (baseaggregation property)": [[185, "reV.supply_curve.aggregation.BaseAggregation.shape"]], "rev.supply_curve.cli_sc_aggregation": [[186, "module-reV.supply_curve.cli_sc_aggregation"]], "rev.supply_curve.cli_supply_curve": [[187, "module-reV.supply_curve.cli_supply_curve"]], "rev.supply_curve.competitive_wind_farms": [[188, "module-reV.supply_curve.competitive_wind_farms"]], "competitivewindfarms (class in rev.supply_curve.competitive_wind_farms)": [[189, "reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms"]], "check_sc_gid() (competitivewindfarms method)": [[189, "reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms.check_sc_gid"]], "exclude_sc_point_gid() (competitivewindfarms method)": [[189, "reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms.exclude_sc_point_gid"]], "map_downwind() (competitivewindfarms method)": [[189, "reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms.map_downwind"]], "map_sc_gid_to_sc_point_gid() (competitivewindfarms method)": [[189, "reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms.map_sc_gid_to_sc_point_gid"]], "map_sc_point_gid_to_sc_gid() (competitivewindfarms method)": [[189, "reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms.map_sc_point_gid_to_sc_gid"]], "map_upwind() (competitivewindfarms method)": [[189, "reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms.map_upwind"]], "mask (competitivewindfarms property)": [[189, "reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms.mask"]], "remove_noncompetitive_farm() (competitivewindfarms method)": [[189, "reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms.remove_noncompetitive_farm"]], "run() (competitivewindfarms class method)": [[189, "reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms.run"]], "sc_gids (competitivewindfarms property)": [[189, "reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms.sc_gids"]], "sc_point_gids (competitivewindfarms property)": [[189, "reV.supply_curve.competitive_wind_farms.CompetitiveWindFarms.sc_point_gids"]], "rev.supply_curve.exclusions": [[190, "module-reV.supply_curve.exclusions"]], "exclusionmask (class in rev.supply_curve.exclusions)": [[191, "reV.supply_curve.exclusions.ExclusionMask"]], "add_layer() (exclusionmask method)": [[191, "reV.supply_curve.exclusions.ExclusionMask.add_layer"]], "close() (exclusionmask method)": [[191, "reV.supply_curve.exclusions.ExclusionMask.close"]], "excl_h5 (exclusionmask property)": [[191, "reV.supply_curve.exclusions.ExclusionMask.excl_h5"]], "excl_layers (exclusionmask property)": [[191, "reV.supply_curve.exclusions.ExclusionMask.excl_layers"]], "latitude (exclusionmask property)": [[191, "reV.supply_curve.exclusions.ExclusionMask.latitude"]], "layer_names (exclusionmask property)": [[191, "reV.supply_curve.exclusions.ExclusionMask.layer_names"]], "layers (exclusionmask property)": [[191, "reV.supply_curve.exclusions.ExclusionMask.layers"]], "longitude (exclusionmask property)": [[191, "reV.supply_curve.exclusions.ExclusionMask.longitude"]], "mask (exclusionmask property)": [[191, "reV.supply_curve.exclusions.ExclusionMask.mask"]], "nodata_lookup (exclusionmask property)": [[191, "reV.supply_curve.exclusions.ExclusionMask.nodata_lookup"]], "run() (exclusionmask class method)": [[191, "reV.supply_curve.exclusions.ExclusionMask.run"]], "shape (exclusionmask property)": [[191, "reV.supply_curve.exclusions.ExclusionMask.shape"]], "exclusionmaskfromdict (class in rev.supply_curve.exclusions)": [[192, "reV.supply_curve.exclusions.ExclusionMaskFromDict"]], "add_layer() (exclusionmaskfromdict method)": [[192, "reV.supply_curve.exclusions.ExclusionMaskFromDict.add_layer"]], "close() (exclusionmaskfromdict method)": [[192, "reV.supply_curve.exclusions.ExclusionMaskFromDict.close"]], "excl_h5 (exclusionmaskfromdict property)": [[192, "reV.supply_curve.exclusions.ExclusionMaskFromDict.excl_h5"]], "excl_layers (exclusionmaskfromdict property)": [[192, "reV.supply_curve.exclusions.ExclusionMaskFromDict.excl_layers"]], "extract_inclusion_mask() (exclusionmaskfromdict class method)": [[192, "reV.supply_curve.exclusions.ExclusionMaskFromDict.extract_inclusion_mask"]], "latitude (exclusionmaskfromdict property)": [[192, "reV.supply_curve.exclusions.ExclusionMaskFromDict.latitude"]], "layer_names (exclusionmaskfromdict property)": [[192, "reV.supply_curve.exclusions.ExclusionMaskFromDict.layer_names"]], "layers (exclusionmaskfromdict property)": [[192, "reV.supply_curve.exclusions.ExclusionMaskFromDict.layers"]], "longitude (exclusionmaskfromdict property)": [[192, "reV.supply_curve.exclusions.ExclusionMaskFromDict.longitude"]], "mask (exclusionmaskfromdict property)": [[192, "reV.supply_curve.exclusions.ExclusionMaskFromDict.mask"]], "nodata_lookup (exclusionmaskfromdict property)": [[192, "reV.supply_curve.exclusions.ExclusionMaskFromDict.nodata_lookup"]], "run() (exclusionmaskfromdict class method)": [[192, "reV.supply_curve.exclusions.ExclusionMaskFromDict.run"]], "shape (exclusionmaskfromdict property)": [[192, "reV.supply_curve.exclusions.ExclusionMaskFromDict.shape"]], "frictionmask (class in rev.supply_curve.exclusions)": [[193, "reV.supply_curve.exclusions.FrictionMask"]], "add_layer() (frictionmask method)": [[193, "reV.supply_curve.exclusions.FrictionMask.add_layer"]], "close() (frictionmask method)": [[193, "reV.supply_curve.exclusions.FrictionMask.close"]], "excl_h5 (frictionmask property)": [[193, "reV.supply_curve.exclusions.FrictionMask.excl_h5"]], "excl_layers (frictionmask property)": [[193, "reV.supply_curve.exclusions.FrictionMask.excl_layers"]], "latitude (frictionmask property)": [[193, "reV.supply_curve.exclusions.FrictionMask.latitude"]], "layer_names (frictionmask property)": [[193, "reV.supply_curve.exclusions.FrictionMask.layer_names"]], "layers (frictionmask property)": [[193, "reV.supply_curve.exclusions.FrictionMask.layers"]], "longitude (frictionmask property)": [[193, "reV.supply_curve.exclusions.FrictionMask.longitude"]], "mask (frictionmask property)": [[193, "reV.supply_curve.exclusions.FrictionMask.mask"]], "nodata_lookup (frictionmask property)": [[193, "reV.supply_curve.exclusions.FrictionMask.nodata_lookup"]], "run() (frictionmask class method)": [[193, "reV.supply_curve.exclusions.FrictionMask.run"]], "shape (frictionmask property)": [[193, "reV.supply_curve.exclusions.FrictionMask.shape"]], "layermask (class in rev.supply_curve.exclusions)": [[194, "reV.supply_curve.exclusions.LayerMask"]], "exclude_values (layermask property)": [[194, "reV.supply_curve.exclusions.LayerMask.exclude_values"]], "force_include (layermask property)": [[194, "reV.supply_curve.exclusions.LayerMask.force_include"]], "include_values (layermask property)": [[194, "reV.supply_curve.exclusions.LayerMask.include_values"]], "include_weights (layermask property)": [[194, "reV.supply_curve.exclusions.LayerMask.include_weights"]], "mask_type (layermask property)": [[194, "reV.supply_curve.exclusions.LayerMask.mask_type"]], "max_value (layermask property)": [[194, "reV.supply_curve.exclusions.LayerMask.max_value"]], "min_value (layermask property)": [[194, "reV.supply_curve.exclusions.LayerMask.min_value"]], "name (layermask property)": [[194, "reV.supply_curve.exclusions.LayerMask.name"]], "rev.supply_curve.extent": [[195, "module-reV.supply_curve.extent"]], "supplycurveextent (class in rev.supply_curve.extent)": [[196, "reV.supply_curve.extent.SupplyCurveExtent"]], "close() (supplycurveextent method)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.close"]], "col_indices (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.col_indices"]], "cols_of_excl (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.cols_of_excl"]], "excl_col_slices (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.excl_col_slices"]], "excl_cols (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.excl_cols"]], "excl_row_slices (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.excl_row_slices"]], "excl_rows (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.excl_rows"]], "excl_shape (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.excl_shape"]], "exclusions (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.exclusions"]], "get_coord() (supplycurveextent method)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.get_coord"]], "get_excl_points() (supplycurveextent method)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.get_excl_points"]], "get_excl_slices() (supplycurveextent method)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.get_excl_slices"]], "get_flat_excl_ind() (supplycurveextent method)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.get_flat_excl_ind"]], "get_sc_row_col_ind() (supplycurveextent method)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.get_sc_row_col_ind"]], "get_slice_lookup() (supplycurveextent method)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.get_slice_lookup"]], "lat_lon (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.lat_lon"]], "latitude (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.latitude"]], "longitude (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.longitude"]], "n_cols (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.n_cols"]], "n_rows (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.n_rows"]], "points (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.points"]], "resolution (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.resolution"]], "row_indices (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.row_indices"]], "rows_of_excl (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.rows_of_excl"]], "shape (supplycurveextent property)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.shape"]], "valid_sc_points() (supplycurveextent method)": [[196, "reV.supply_curve.extent.SupplyCurveExtent.valid_sc_points"]], "rev.supply_curve.points": [[197, "module-reV.supply_curve.points"]], "abstractsupplycurvepoint (class in rev.supply_curve.points)": [[198, "reV.supply_curve.points.AbstractSupplyCurvePoint"]], "cols (abstractsupplycurvepoint property)": [[198, "reV.supply_curve.points.AbstractSupplyCurvePoint.cols"]], "get_agg_slices() (abstractsupplycurvepoint static method)": [[198, "reV.supply_curve.points.AbstractSupplyCurvePoint.get_agg_slices"]], "gid (abstractsupplycurvepoint property)": [[198, "reV.supply_curve.points.AbstractSupplyCurvePoint.gid"]], "resolution (abstractsupplycurvepoint property)": [[198, "reV.supply_curve.points.AbstractSupplyCurvePoint.resolution"]], "rows (abstractsupplycurvepoint property)": [[198, "reV.supply_curve.points.AbstractSupplyCurvePoint.rows"]], "sc_col_ind (abstractsupplycurvepoint property)": [[198, "reV.supply_curve.points.AbstractSupplyCurvePoint.sc_col_ind"]], "sc_point_gid (abstractsupplycurvepoint property)": [[198, "reV.supply_curve.points.AbstractSupplyCurvePoint.sc_point_gid"]], "sc_row_ind (abstractsupplycurvepoint property)": [[198, "reV.supply_curve.points.AbstractSupplyCurvePoint.sc_row_ind"]], "aggregationsupplycurvepoint (class in rev.supply_curve.points)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint"]], "agg_data_layers() (aggregationsupplycurvepoint method)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.agg_data_layers"]], "aggregate() (aggregationsupplycurvepoint method)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.aggregate"]], "area (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.area"]], "bool_mask (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.bool_mask"]], "centroid (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.centroid"]], "close() (aggregationsupplycurvepoint method)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.close"]], "cols (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.cols"]], "country (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.country"]], "county (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.county"]], "elevation (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.elevation"]], "exclusion_weighted_mean() (aggregationsupplycurvepoint method)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.exclusion_weighted_mean"]], "exclusions (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.exclusions"]], "get_agg_slices() (aggregationsupplycurvepoint static method)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.get_agg_slices"]], "gid (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.gid"]], "gid_counts (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.gid_counts"]], "h5 (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.h5"]], "h5_gid_set (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.h5_gid_set"]], "include_mask (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.include_mask"]], "include_mask_flat (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.include_mask_flat"]], "latitude (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.latitude"]], "longitude (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.longitude"]], "mean_wind_dirs() (aggregationsupplycurvepoint method)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.mean_wind_dirs"]], "n_gids (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.n_gids"]], "offshore (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.offshore"]], "pixel_area (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.pixel_area"]], "resolution (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.resolution"]], "rows (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.rows"]], "run() (aggregationsupplycurvepoint class method)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.run"]], "sc_col_ind (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.sc_col_ind"]], "sc_mean() (aggregationsupplycurvepoint class method)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.sc_mean"]], "sc_point_gid (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.sc_point_gid"]], "sc_row_ind (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.sc_row_ind"]], "sc_sum() (aggregationsupplycurvepoint class method)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.sc_sum"]], "state (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.state"]], "summary (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.summary"]], "timezone (aggregationsupplycurvepoint property)": [[199, "reV.supply_curve.points.AggregationSupplyCurvePoint.timezone"]], "generationsupplycurvepoint (class in rev.supply_curve.points)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint"]], "agg_data_layers() (generationsupplycurvepoint method)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.agg_data_layers"]], "aggregate() (generationsupplycurvepoint method)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.aggregate"]], "area (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.area"]], "bool_mask (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.bool_mask"]], "capacity (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.capacity"]], "capacity_ac (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.capacity_ac"]], "capacity_dc (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.capacity_dc"]], "centroid (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.centroid"]], "close() (generationsupplycurvepoint method)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.close"]], "cols (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.cols"]], "country (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.country"]], "county (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.county"]], "economies_of_scale() (generationsupplycurvepoint static method)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.economies_of_scale"]], "elevation (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.elevation"]], "exclusion_weighted_mean() (generationsupplycurvepoint method)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.exclusion_weighted_mean"]], "exclusions (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.exclusions"]], "fixed_charge_rate (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.fixed_charge_rate"]], "friction_data (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.friction_data"]], "gen (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.gen"]], "gen_ac_data (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.gen_ac_data"]], "gen_data (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.gen_data"]], "gen_gid_set (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.gen_gid_set"]], "get_agg_slices() (generationsupplycurvepoint static method)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.get_agg_slices"]], "gid (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.gid"]], "gid_counts (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.gid_counts"]], "h5 (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.h5"]], "h5_dsets_data (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.h5_dsets_data"]], "h5_gid_set (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.h5_gid_set"]], "include_mask (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.include_mask"]], "include_mask_flat (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.include_mask_flat"]], "latitude (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.latitude"]], "lcoe_data (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.lcoe_data"]], "longitude (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.longitude"]], "mean_cf (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.mean_cf"]], "mean_cf_ac (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.mean_cf_ac"]], "mean_cf_dc (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.mean_cf_dc"]], "mean_friction (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.mean_friction"]], "mean_h5_dsets_data (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.mean_h5_dsets_data"]], "mean_lcoe (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.mean_lcoe"]], "mean_lcoe_friction (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.mean_lcoe_friction"]], "mean_res (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.mean_res"]], "mean_wind_dirs() (generationsupplycurvepoint method)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.mean_wind_dirs"]], "n_gids (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.n_gids"]], "offshore (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.offshore"]], "pixel_area (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.pixel_area"]], "point_summary() (generationsupplycurvepoint method)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.point_summary"]], "power_density (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.power_density"]], "power_density_ac (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.power_density_ac"]], "regional_multiplier (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.regional_multiplier"]], "res_data (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.res_data"]], "res_gid_set (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.res_gid_set"]], "resolution (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.resolution"]], "rows (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.rows"]], "run() (generationsupplycurvepoint class method)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.run"]], "sc_col_ind (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.sc_col_ind"]], "sc_mean() (generationsupplycurvepoint class method)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.sc_mean"]], "sc_point_annual_energy (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.sc_point_annual_energy"]], "sc_point_gid (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.sc_point_gid"]], "sc_row_ind (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.sc_row_ind"]], "sc_sum() (generationsupplycurvepoint class method)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.sc_sum"]], "state (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.state"]], "summarize() (generationsupplycurvepoint class method)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.summarize"]], "summary (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.summary"]], "timezone (generationsupplycurvepoint property)": [[200, "reV.supply_curve.points.GenerationSupplyCurvePoint.timezone"]], "supplycurvepoint (class in rev.supply_curve.points)": [[201, "reV.supply_curve.points.SupplyCurvePoint"]], "agg_data_layers() (supplycurvepoint method)": [[201, "reV.supply_curve.points.SupplyCurvePoint.agg_data_layers"]], "aggregate() (supplycurvepoint method)": [[201, "reV.supply_curve.points.SupplyCurvePoint.aggregate"]], "area (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.area"]], "bool_mask (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.bool_mask"]], "centroid (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.centroid"]], "close() (supplycurvepoint method)": [[201, "reV.supply_curve.points.SupplyCurvePoint.close"]], "cols (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.cols"]], "exclusion_weighted_mean() (supplycurvepoint method)": [[201, "reV.supply_curve.points.SupplyCurvePoint.exclusion_weighted_mean"]], "exclusions (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.exclusions"]], "get_agg_slices() (supplycurvepoint static method)": [[201, "reV.supply_curve.points.SupplyCurvePoint.get_agg_slices"]], "gid (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.gid"]], "h5 (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.h5"]], "h5_gid_set (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.h5_gid_set"]], "include_mask (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.include_mask"]], "include_mask_flat (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.include_mask_flat"]], "latitude (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.latitude"]], "longitude (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.longitude"]], "mean_wind_dirs() (supplycurvepoint method)": [[201, "reV.supply_curve.points.SupplyCurvePoint.mean_wind_dirs"]], "n_gids (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.n_gids"]], "pixel_area (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.pixel_area"]], "resolution (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.resolution"]], "rows (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.rows"]], "sc_col_ind (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.sc_col_ind"]], "sc_mean() (supplycurvepoint class method)": [[201, "reV.supply_curve.points.SupplyCurvePoint.sc_mean"]], "sc_point_gid (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.sc_point_gid"]], "sc_row_ind (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.sc_row_ind"]], "sc_sum() (supplycurvepoint class method)": [[201, "reV.supply_curve.points.SupplyCurvePoint.sc_sum"]], "summary (supplycurvepoint property)": [[201, "reV.supply_curve.points.SupplyCurvePoint.summary"]], "rev.supply_curve.sc_aggregation": [[202, "module-reV.supply_curve.sc_aggregation"]], "supplycurveaggfilehandler (class in rev.supply_curve.sc_aggregation)": [[203, "reV.supply_curve.sc_aggregation.SupplyCurveAggFileHandler"]], "close() (supplycurveaggfilehandler method)": [[203, "reV.supply_curve.sc_aggregation.SupplyCurveAggFileHandler.close"]], "data_layers (supplycurveaggfilehandler property)": [[203, "reV.supply_curve.sc_aggregation.SupplyCurveAggFileHandler.data_layers"]], "exclusions (supplycurveaggfilehandler property)": [[203, "reV.supply_curve.sc_aggregation.SupplyCurveAggFileHandler.exclusions"]], "friction_layer (supplycurveaggfilehandler property)": [[203, "reV.supply_curve.sc_aggregation.SupplyCurveAggFileHandler.friction_layer"]], "gen (supplycurveaggfilehandler property)": [[203, "reV.supply_curve.sc_aggregation.SupplyCurveAggFileHandler.gen"]], "h5 (supplycurveaggfilehandler property)": [[203, "reV.supply_curve.sc_aggregation.SupplyCurveAggFileHandler.h5"]], "power_density (supplycurveaggfilehandler property)": [[203, "reV.supply_curve.sc_aggregation.SupplyCurveAggFileHandler.power_density"]], "supplycurveaggregation (class in rev.supply_curve.sc_aggregation)": [[204, "reV.supply_curve.sc_aggregation.SupplyCurveAggregation"]], "gids (supplycurveaggregation property)": [[204, "reV.supply_curve.sc_aggregation.SupplyCurveAggregation.gids"]], "run() (supplycurveaggregation method)": [[204, "reV.supply_curve.sc_aggregation.SupplyCurveAggregation.run"]], "run_parallel() (supplycurveaggregation method)": [[204, "reV.supply_curve.sc_aggregation.SupplyCurveAggregation.run_parallel"]], "run_serial() (supplycurveaggregation class method)": [[204, "reV.supply_curve.sc_aggregation.SupplyCurveAggregation.run_serial"]], "shape (supplycurveaggregation property)": [[204, "reV.supply_curve.sc_aggregation.SupplyCurveAggregation.shape"]], "summarize() (supplycurveaggregation method)": [[204, "reV.supply_curve.sc_aggregation.SupplyCurveAggregation.summarize"]], "rev.supply_curve.supply_curve": [[205, "module-reV.supply_curve.supply_curve"]], "default_columns (in module rev.supply_curve.supply_curve)": [[206, "reV.supply_curve.supply_curve.DEFAULT_COLUMNS"]], "supplycurve (class in rev.supply_curve.supply_curve)": [[207, "reV.supply_curve.supply_curve.SupplyCurve"]], "add_sum_cols() (supplycurve static method)": [[207, "reV.supply_curve.supply_curve.SupplyCurve.add_sum_cols"]], "compute_total_lcoe() (supplycurve method)": [[207, "reV.supply_curve.supply_curve.SupplyCurve.compute_total_lcoe"]], "full_sort() (supplycurve method)": [[207, "reV.supply_curve.supply_curve.SupplyCurve.full_sort"]], "run() (supplycurve method)": [[207, "reV.supply_curve.supply_curve.SupplyCurve.run"]], "simple_sort() (supplycurve method)": [[207, "reV.supply_curve.supply_curve.SupplyCurve.simple_sort"]], "rev.supply_curve.tech_mapping": [[208, "module-reV.supply_curve.tech_mapping"]], "techmapping (class in rev.supply_curve.tech_mapping)": [[209, "reV.supply_curve.tech_mapping.TechMapping"]], "distance_threshold (techmapping property)": [[209, "reV.supply_curve.tech_mapping.TechMapping.distance_threshold"]], "map_resource() (techmapping method)": [[209, "reV.supply_curve.tech_mapping.TechMapping.map_resource"]], "map_resource_gids() (techmapping class method)": [[209, "reV.supply_curve.tech_mapping.TechMapping.map_resource_gids"]], "run() (techmapping class method)": [[209, "reV.supply_curve.tech_mapping.TechMapping.run"]], "save_tech_map() (techmapping static method)": [[209, "reV.supply_curve.tech_mapping.TechMapping.save_tech_map"]], "rev.utilities": [[210, "module-reV.utilities"]], "fieldenum (class in rev.utilities)": [[211, "reV.utilities.FieldEnum"]], "map_from() (fieldenum class method)": [[211, "reV.utilities.FieldEnum.map_from"]], "map_to() (fieldenum class method)": [[211, "reV.utilities.FieldEnum.map_to"]], "modulename (class in rev.utilities)": [[212, "reV.utilities.ModuleName"]], "all_names() (modulename class method)": [[212, "reV.utilities.ModuleName.all_names"]], "resourcemetafield (class in rev.utilities)": [[213, "reV.utilities.ResourceMetaField"]], "sitedatafield (class in rev.utilities)": [[214, "reV.utilities.SiteDataField"]], "supplycurvefield (class in rev.utilities)": [[215, "reV.utilities.SupplyCurveField"]], "map_from_legacy() (supplycurvefield class method)": [[215, "reV.utilities.SupplyCurveField.map_from_legacy"]], "rev.utilities.cli_functions": [[216, "module-reV.utilities.cli_functions"]], "format_analysis_years() (in module rev.utilities.cli_functions)": [[217, "reV.utilities.cli_functions.format_analysis_years"]], "init_cli_logging() (in module rev.utilities.cli_functions)": [[218, "reV.utilities.cli_functions.init_cli_logging"]], "parse_from_pipeline() (in module rev.utilities.cli_functions)": [[219, "reV.utilities.cli_functions.parse_from_pipeline"]], "rev.utilities.curtailment": [[220, "module-reV.utilities.curtailment"]], "curtail() (in module rev.utilities.curtailment)": [[221, "reV.utilities.curtailment.curtail"]], "rev.utilities.exceptions": [[222, "module-reV.utilities.exceptions"]], "collectionruntimeerror": [[223, "reV.utilities.exceptions.CollectionRuntimeError"]], "collectionvalueerror": [[224, "reV.utilities.exceptions.CollectionValueError"]], "collectionwarning": [[225, "reV.utilities.exceptions.CollectionWarning"]], "configerror": [[226, "reV.utilities.exceptions.ConfigError"]], "configwarning": [[227, "reV.utilities.exceptions.ConfigWarning"]], "datashapeerror": [[228, "reV.utilities.exceptions.DataShapeError"]], "emptysupplycurvepointerror": [[229, "reV.utilities.exceptions.EmptySupplyCurvePointError"]], "exclusionlayererror": [[230, "reV.utilities.exceptions.ExclusionLayerError"]], "executionerror": [[231, "reV.utilities.exceptions.ExecutionError"]], "extrapolationwarning": [[232, "reV.utilities.exceptions.ExtrapolationWarning"]], "fileinputerror": [[233, "reV.utilities.exceptions.FileInputError"]], "fileinputwarning": [[234, "reV.utilities.exceptions.FileInputWarning"]], "handlerkeyerror": [[235, "reV.utilities.exceptions.HandlerKeyError"]], "handlerruntimeerror": [[236, "reV.utilities.exceptions.HandlerRuntimeError"]], "handlervalueerror": [[237, "reV.utilities.exceptions.HandlerValueError"]], "handlerwarning": [[238, "reV.utilities.exceptions.HandlerWarning"]], "inputerror": [[239, "reV.utilities.exceptions.InputError"]], "inputwarning": [[240, "reV.utilities.exceptions.InputWarning"]], "jsonerror": [[241, "reV.utilities.exceptions.JSONError"]], "multifileexclusionerror": [[242, "reV.utilities.exceptions.MultiFileExclusionError"]], "nearestneighborerror": [[243, "reV.utilities.exceptions.NearestNeighborError"]], "offshorewindinputerror": [[244, "reV.utilities.exceptions.OffshoreWindInputError"]], "offshorewindinputwarning": [[245, "reV.utilities.exceptions.OffshoreWindInputWarning"]], "outputwarning": [[246, "reV.utilities.exceptions.OutputWarning"]], "parallelexecutionwarning": [[247, "reV.utilities.exceptions.ParallelExecutionWarning"]], "pipelineerror": [[248, "reV.utilities.exceptions.PipelineError"]], "projectpointsvalueerror": [[249, "reV.utilities.exceptions.ProjectPointsValueError"]], "pysamversionerror": [[250, "reV.utilities.exceptions.PySAMVersionError"]], "pysamversionwarning": [[251, "reV.utilities.exceptions.PySAMVersionWarning"]], "resourceerror": [[252, "reV.utilities.exceptions.ResourceError"]], "samexecutionerror": [[253, "reV.utilities.exceptions.SAMExecutionError"]], "samexecutionwarning": [[254, "reV.utilities.exceptions.SAMExecutionWarning"]], "saminputerror": [[255, "reV.utilities.exceptions.SAMInputError"]], "saminputwarning": [[256, "reV.utilities.exceptions.SAMInputWarning"]], "slurmwarning": [[257, "reV.utilities.exceptions.SlurmWarning"]], "supplycurveerror": [[258, "reV.utilities.exceptions.SupplyCurveError"]], "supplycurveinputerror": [[259, "reV.utilities.exceptions.SupplyCurveInputError"]], "whilelooppackingerror": [[260, "reV.utilities.exceptions.WhileLoopPackingError"]], "revdeprecationwarning": [[261, "reV.utilities.exceptions.reVDeprecationWarning"]], "reverror": [[262, "reV.utilities.exceptions.reVError"]], "revlossesvalueerror": [[263, "reV.utilities.exceptions.reVLossesValueError"]], "revlosseswarning": [[264, "reV.utilities.exceptions.reVLossesWarning"]], "log_versions() (in module rev.utilities)": [[265, "reV.utilities.log_versions"]], "rev.utilities.pytest_utils": [[266, "module-reV.utilities.pytest_utils"]], "make_fake_h5_chunks() (in module rev.utilities.pytest_utils)": [[267, "reV.utilities.pytest_utils.make_fake_h5_chunks"]], "pd_date_range() (in module rev.utilities.pytest_utils)": [[268, "reV.utilities.pytest_utils.pd_date_range"]], "write_chunk() (in module rev.utilities.pytest_utils)": [[269, "reV.utilities.pytest_utils.write_chunk"]], "rev.utilities.slots": [[270, "module-reV.utilities.slots"]], "slotteddict (class in rev.utilities.slots)": [[271, "reV.utilities.slots.SlottedDict"]], "items() (slotteddict method)": [[271, "reV.utilities.slots.SlottedDict.items"]], "keys() (slotteddict method)": [[271, "reV.utilities.slots.SlottedDict.keys"]], "update() (slotteddict method)": [[271, "reV.utilities.slots.SlottedDict.update"]], "values() (slotteddict method)": [[271, "reV.utilities.slots.SlottedDict.values"]], "rev.version": [[272, "module-reV.version"]], "--verbose": [[274, "cmdoption-reV-v"], [284, "cmdoption-reV-project-points-v"]], "--version": [[274, "cmdoption-reV-version"], [284, "cmdoption-reV-project-points-version"]], "-v": [[274, "cmdoption-reV-v"], [284, "cmdoption-reV-project-points-v"]], "rev command line option": [[274, "cmdoption-reV-v"], [274, "cmdoption-reV-version"]], "--cancel": [[275, "cmdoption-reV-batch-cancel"], [283, "cmdoption-reV-pipeline-cancel"]], "--config_file": [[275, "cmdoption-reV-batch-c"], [276, "cmdoption-reV-bespoke-c"], [277, "cmdoption-reV-collect-c"], [278, "cmdoption-reV-econ-c"], [279, "cmdoption-reV-generation-c"], [280, "cmdoption-reV-hybrids-c"], [281, "cmdoption-reV-multi-year-c"], [282, "cmdoption-reV-nrwal-c"], [283, "cmdoption-reV-pipeline-c"], [285, "cmdoption-reV-qa-qc-c"], [286, "cmdoption-reV-rep-profiles-c"], [288, "cmdoption-reV-script-c"], [290, "cmdoption-reV-supply-curve-c"], [291, "cmdoption-reV-supply-curve-aggregation-c"]], "--delete": [[275, "cmdoption-reV-batch-delete"]], "--dry": [[275, "cmdoption-reV-batch-dry"]], "--monitor-background": [[275, "cmdoption-reV-batch-monitor-background"]], "-c": [[275, "cmdoption-reV-batch-c"], [276, "cmdoption-reV-bespoke-c"], [277, "cmdoption-reV-collect-c"], [278, "cmdoption-reV-econ-c"], [279, "cmdoption-reV-generation-c"], [280, "cmdoption-reV-hybrids-c"], [281, "cmdoption-reV-multi-year-c"], [282, "cmdoption-reV-nrwal-c"], [283, "cmdoption-reV-pipeline-c"], [285, "cmdoption-reV-qa-qc-c"], [286, "cmdoption-reV-rep-profiles-c"], [288, "cmdoption-reV-script-c"], [290, "cmdoption-reV-supply-curve-c"], [291, "cmdoption-reV-supply-curve-aggregation-c"]], "rev-batch command line option": [[275, "cmdoption-reV-batch-c"], [275, "cmdoption-reV-batch-cancel"], [275, "cmdoption-reV-batch-delete"], [275, "cmdoption-reV-batch-dry"], [275, "cmdoption-reV-batch-monitor-background"]], "rev-bespoke command line option": [[276, "cmdoption-reV-bespoke-c"]], "rev-collect command line option": [[277, "cmdoption-reV-collect-c"]], "rev-econ command line option": [[278, "cmdoption-reV-econ-c"]], "rev-generation command line option": [[279, "cmdoption-reV-generation-c"]], "rev-hybrids command line option": [[280, "cmdoption-reV-hybrids-c"]], "rev-multi-year command line option": [[281, "cmdoption-reV-multi-year-c"]], "rev-nrwal command line option": [[282, "cmdoption-reV-nrwal-c"]], "--background": [[283, "cmdoption-reV-pipeline-background"]], "--monitor": [[283, "cmdoption-reV-pipeline-monitor"]], "--recursive": [[283, "cmdoption-reV-pipeline-r"], [289, "cmdoption-reV-status-r"]], "-r": [[283, "cmdoption-reV-pipeline-r"], [284, "cmdoption-reV-project-points-from-regions-r"], [289, "cmdoption-reV-status-r"]], "rev-pipeline command line option": [[283, "cmdoption-reV-pipeline-background"], [283, "cmdoption-reV-pipeline-c"], [283, "cmdoption-reV-pipeline-cancel"], [283, "cmdoption-reV-pipeline-monitor"], [283, "cmdoption-reV-pipeline-r"]], "--fpath": [[284, "cmdoption-reV-project-points-f"]], "--lat_lon_coords": [[284, "cmdoption-reV-project-points-from-lat-lons-lat_lon_coords"]], "--lat_lon_fpath": [[284, "cmdoption-reV-project-points-from-lat-lons-llf"]], "--llc": [[284, "cmdoption-reV-project-points-from-lat-lons-lat_lon_coords"]], "--region": [[284, "cmdoption-reV-project-points-from-regions-r"]], "--region_col": [[284, "cmdoption-reV-project-points-from-regions-col"]], "--regions": [[284, "cmdoption-reV-project-points-from-regions-regs"]], "--res_file": [[284, "cmdoption-reV-project-points-rf"]], "--sam_file": [[284, "cmdoption-reV-project-points-sf"]], "-col": [[284, "cmdoption-reV-project-points-from-regions-col"]], "-f": [[284, "cmdoption-reV-project-points-f"], [287, "cmdoption-reV-reset-status-f"]], "-llf": [[284, "cmdoption-reV-project-points-from-lat-lons-llf"]], "-regs": [[284, "cmdoption-reV-project-points-from-regions-regs"]], "-rf": [[284, "cmdoption-reV-project-points-rf"]], "-sf": [[284, "cmdoption-reV-project-points-sf"]], "rev-project-points command line option": [[284, "cmdoption-reV-project-points-f"], [284, "cmdoption-reV-project-points-rf"], [284, "cmdoption-reV-project-points-sf"], [284, "cmdoption-reV-project-points-v"], [284, "cmdoption-reV-project-points-version"]], "rev-project-points-from-lat-lons command line option": [[284, "cmdoption-reV-project-points-from-lat-lons-lat_lon_coords"], [284, "cmdoption-reV-project-points-from-lat-lons-llf"]], "rev-project-points-from-regions command line option": [[284, "cmdoption-reV-project-points-from-regions-col"], [284, "cmdoption-reV-project-points-from-regions-r"], [284, "cmdoption-reV-project-points-from-regions-regs"]], "rev-qa-qc command line option": [[285, "cmdoption-reV-qa-qc-c"]], "rev-rep-profiles command line option": [[286, "cmdoption-reV-rep-profiles-c"]], "--after-step": [[287, "cmdoption-reV-reset-status-a"]], "--force": [[287, "cmdoption-reV-reset-status-f"]], "-a": [[287, "cmdoption-reV-reset-status-a"]], "directory": [[287, "cmdoption-reV-reset-status-arg-DIRECTORY"]], "rev-reset-status command line option": [[287, "cmdoption-reV-reset-status-a"], [287, "cmdoption-reV-reset-status-arg-DIRECTORY"], [287, "cmdoption-reV-reset-status-f"]], "rev-script command line option": [[288, "cmdoption-reV-script-c"]], "--include": [[289, "cmdoption-reV-status-i"]], "--pipe_steps": [[289, "cmdoption-reV-status-ps"]], "--status": [[289, "cmdoption-reV-status-s"]], "-i": [[289, "cmdoption-reV-status-i"]], "-ps": [[289, "cmdoption-reV-status-ps"]], "-s": [[289, "cmdoption-reV-status-s"]], "folder": [[289, "cmdoption-reV-status-arg-FOLDER"]], "rev-status command line option": [[289, "cmdoption-reV-status-arg-FOLDER"], [289, "cmdoption-reV-status-i"], [289, "cmdoption-reV-status-ps"], [289, "cmdoption-reV-status-r"], [289, "cmdoption-reV-status-s"]], "rev-supply-curve command line option": [[290, "cmdoption-reV-supply-curve-c"]], "rev-supply-curve-aggregation command line option": [[291, "cmdoption-reV-supply-curve-aggregation-c"]], "--type": [[292, "cmdoption-reV-template-configs-t"]], "-t": [[292, "cmdoption-reV-template-configs-t"]], "commands": [[292, "cmdoption-reV-template-configs-arg-COMMANDS"]], "rev-template-configs command line option": [[292, "cmdoption-reV-template-configs-arg-COMMANDS"], [292, "cmdoption-reV-template-configs-t"]]}})